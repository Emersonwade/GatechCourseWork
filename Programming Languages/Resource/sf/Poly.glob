DIGEST 0c2ac221ddce4dac758a4d0a6be06235
FPoly
R354:358 Lists <> <> lib
prf 903:912 <> extra_swap
R933:935 Coq.Init.Datatypes <> nat ind
R944:946 Coq.Init.Logic <> :type_scope:x_'='_x not
R940:942 Basics <> :nat_scope:x_'+'_x not
R939:939 Poly <> n var
R943:943 Poly <> o var
R948:950 Basics <> :nat_scope:x_'+'_x not
R947:947 Poly <> o var
R951:951 Poly <> n var
prf 980:982 <> use
R1006:1008 Coq.Init.Logic <> :type_scope:x_'='_x not
R998:998 Coq.Init.Datatypes <> S constr
R1001:1003 Basics <> :nat_scope:x_'+'_x not
R1000:1000 Poly <> m var
R1004:1004 Poly <> n var
R1009:1009 Coq.Init.Datatypes <> S constr
R1012:1014 Basics <> :nat_scope:x_'+'_x not
R1011:1011 Poly <> n var
R1015:1015 Poly <> m var
R1049:1058 Poly <> extra_swap prfax
R1049:1058 Poly <> extra_swap prfax
def 1104:1109 <> id_nat
R1116:1118 Coq.Init.Datatypes <> nat ind
R1123:1125 Coq.Init.Datatypes <> nat ind
R1130:1130 Poly <> n var
def 1144:1150 <> id_bool
R1157:1160 Basics <> bool ind
R1165:1168 Basics <> bool ind
R1173:1173 Poly <> b var
def 1187:1188 <> id
R1206:1206 Poly <> X var
R1212:1212 Poly <> x var
R1222:1227 Poly <> id_nat def
R1236:1242 Poly <> id_bool def
R1251:1252 Poly <> id def
R1262:1267 Poly <> id_nat def
ind 1283:1290 <> boollist
constr 1306:1313 <> bool_nil
constr 1330:1338 <> bool_cons
R1317:1324 Poly <> boollist ind
R1362:1369 Poly <> boollist ind
R1350:1357 Poly <> boollist ind
R1342:1345 Basics <> bool ind
ind 1856:1859 <> list
constr 1884:1886 <> nil
constr 1901:1904 <> cons
R1890:1893 Poly <> list ind
R1923:1926 Poly <> list ind
R1913:1916 Poly <> list ind
R3118:3120 Poly <> nil constr
R3170:3173 Poly <> cons constr
R3581:3584 Poly <> cons constr
R3593:3596 Poly <> cons constr
R3605:3607 Poly <> nil constr
R3609:3611 Coq.Init.Datatypes <> nat ind
R3598:3600 Coq.Init.Datatypes <> nat ind
R3586:3588 Coq.Init.Datatypes <> nat ind
def 4004:4009 <> length
R4023:4026 Poly <> list ind
R4028:4028 Poly <> X var
R4033:4035 Coq.Init.Datatypes <> nat ind
R4048:4048 Poly <> l var
R4059:4061 Poly <> nil constr
R4077:4080 Poly <> cons constr
R4089:4089 Coq.Init.Datatypes <> S constr
R4092:4097 Poly <> length def
R4099:4099 Poly <> X var
def 4636:4647 <> test_length1
R4701:4703 Coq.Init.Logic <> :type_scope:x_'='_x not
R4655:4660 Poly <> length def
R4667:4670 Poly <> cons constr
R4679:4682 Poly <> cons constr
R4691:4693 Poly <> nil constr
R4695:4697 Coq.Init.Datatypes <> nat ind
R4684:4686 Coq.Init.Datatypes <> nat ind
R4672:4674 Coq.Init.Datatypes <> nat ind
R4662:4664 Coq.Init.Datatypes <> nat ind
def 4860:4871 <> test_length2
R4918:4920 Coq.Init.Logic <> :type_scope:x_'='_x not
R4879:4884 Poly <> length def
R4892:4895 Poly <> cons constr
R4908:4910 Poly <> nil constr
R4912:4915 Basics <> bool ind
R4902:4905 Basics <> true constr
R4897:4900 Basics <> bool ind
R4886:4889 Basics <> bool ind
def 5097:5099 <> app
R5121:5124 Poly <> list ind
R5126:5126 Poly <> X var
R5148:5151 Poly <> list ind
R5153:5153 Poly <> X var
R5167:5168 Poly <> l1 var
R5179:5181 Poly <> nil constr
R5191:5192 Poly <> l2 var
R5198:5201 Poly <> cons constr
R5210:5213 Poly <> cons constr
R5220:5222 Poly <> app def
R5228:5229 Poly <> l2 var
R5224:5224 Poly <> X var
R5215:5215 Poly <> X var
def 5249:5252 <> snoc
R5266:5269 Poly <> list ind
R5271:5271 Poly <> X var
R5277:5277 Poly <> X var
R5283:5286 Poly <> list ind
R5288:5288 Poly <> X var
R5302:5302 Poly <> l var
R5313:5315 Poly <> nil constr
R5325:5328 Poly <> cons constr
R5335:5337 Poly <> nil constr
R5339:5339 Poly <> X var
R5332:5332 Poly <> v var
R5330:5330 Poly <> X var
R5346:5349 Poly <> cons constr
R5358:5361 Poly <> cons constr
R5368:5371 Poly <> snoc def
R5377:5377 Poly <> v var
R5373:5373 Poly <> X var
R5363:5363 Poly <> X var
R5404:5407 Poly <> snoc def
R5414:5416 Poly <> nil constr
R5418:5420 Coq.Init.Datatypes <> nat ind
R5409:5411 Coq.Init.Datatypes <> nat ind
R5443:5446 Poly <> snoc def
R5453:5456 Poly <> snoc def
R5463:5466 Poly <> cons constr
R5475:5477 Poly <> nil constr
R5479:5481 Coq.Init.Datatypes <> nat ind
R5468:5470 Coq.Init.Datatypes <> nat ind
R5458:5460 Coq.Init.Datatypes <> nat ind
R5448:5450 Coq.Init.Datatypes <> nat ind
def 5501:5503 <> rev
R5517:5520 Poly <> list ind
R5522:5522 Poly <> X var
R5527:5530 Poly <> list ind
R5532:5532 Poly <> X var
R5545:5545 Poly <> l var
R5556:5558 Poly <> nil constr
R5568:5570 Poly <> nil constr
R5572:5572 Poly <> X var
R5578:5581 Poly <> cons constr
R5590:5593 Poly <> snoc def
R5598:5600 Poly <> rev def
R5602:5602 Poly <> X var
R5595:5595 Poly <> X var
def 5625:5633 <> test_rev1
R5684:5689 Coq.Init.Logic <> :type_scope:x_'='_x not
R5723:5723 Coq.Init.Logic <> :type_scope:x_'='_x not
R5641:5643 Poly <> rev def
R5650:5653 Poly <> cons constr
R5662:5665 Poly <> cons constr
R5674:5676 Poly <> nil constr
R5678:5680 Coq.Init.Datatypes <> nat ind
R5667:5669 Coq.Init.Datatypes <> nat ind
R5655:5657 Coq.Init.Datatypes <> nat ind
R5645:5647 Coq.Init.Datatypes <> nat ind
R5690:5693 Poly <> cons constr
R5702:5705 Poly <> cons constr
R5714:5716 Poly <> nil constr
R5718:5720 Coq.Init.Datatypes <> nat ind
R5707:5709 Coq.Init.Datatypes <> nat ind
R5695:5697 Coq.Init.Datatypes <> nat ind
def 5769:5777 <> test_rev2
R5801:5803 Coq.Init.Logic <> :type_scope:x_'='_x not
R5782:5784 Poly <> rev def
R5792:5794 Poly <> nil constr
R5796:5799 Basics <> bool ind
R5786:5789 Basics <> bool ind
R5804:5806 Poly <> nil constr
R5808:5811 Basics <> bool ind
R5865:5868 Poly <> cons constr
R5881:5883 Poly <> rev def
R5891:5893 Poly <> nil constr
R5895:5898 Basics <> bool ind
R5885:5888 Basics <> bool ind
R5875:5878 Basics <> true constr
R5870:5873 Basics <> bool ind
mod 5911:5919 <> MumbleBaz
ind 6042:6047 MumbleBaz mumble
constr 6063:6063 MumbleBaz a
constr 6078:6078 MumbleBaz b
constr 6110:6110 MumbleBaz c
R6067:6072 Poly <> mumble ind
R6099:6104 Poly <> mumble ind
R6092:6094 Coq.Init.Datatypes <> nat ind
R6082:6087 Poly <> mumble ind
R6114:6119 Poly <> mumble ind
ind 6132:6138 MumbleBaz grumble
constr 6163:6163 MumbleBaz d
constr 6191:6191 MumbleBaz e
R6177:6183 Poly <> grumble ind
R6167:6172 Poly MumbleBaz mumble ind
R6200:6206 Poly <> grumble ind
ind 6603:6605 MumbleBaz baz
constr 6622:6622 MumbleBaz x
constr 6642:6642 MumbleBaz y
R6633:6635 Poly <> baz ind
R6626:6628 Poly <> baz ind
R6661:6663 Poly <> baz ind
R6653:6656 Basics <> bool ind
R6646:6648 Poly <> baz ind
R6818:6826 Poly MumbleBaz <> mod
def 7089:7092 <> app'
R7104:7107 Poly <> list ind
R7109:7109 Poly <> X var
R7122:7123 Poly <> l1 var
R7134:7136 Poly <> nil constr
R7146:7147 Poly <> l2 var
R7153:7156 Poly <> cons constr
R7165:7168 Poly <> cons constr
R7175:7178 Poly <> app' def
R7184:7185 Poly <> l2 var
R7180:7180 Poly <> X var
R7170:7170 Poly <> X var
R7275:7278 Poly <> app' def
R7342:7344 Poly <> app def
def 9989:9995 <> length'
R10009:10012 Poly <> list ind
R10014:10014 Poly <> X var
R10019:10021 Coq.Init.Datatypes <> nat ind
R10034:10034 Poly <> l var
R10045:10047 Poly <> nil constr
R10063:10066 Poly <> cons constr
R10075:10075 Coq.Init.Datatypes <> S constr
R10078:10084 Poly <> length' def
def 10373:10379 <> list123
R10386:10389 Poly <> cons constr
R10398:10401 Poly <> cons constr
R10410:10413 Poly <> cons constr
R10422:10424 Poly <> nil constr
R10426:10428 Coq.Init.Datatypes <> nat ind
R10415:10417 Coq.Init.Datatypes <> nat ind
R10403:10405 Coq.Init.Datatypes <> nat ind
R10391:10393 Coq.Init.Datatypes <> nat ind
def 10502:10509 <> list123'
R10514:10517 Poly <> cons constr
R10524:10527 Poly <> cons constr
R10534:10537 Poly <> cons constr
R10544:10546 Poly <> nil constr
R11032:11034 Poly <> nil constr
R11032:11034 Poly <> nil constr
R11051:11054 Poly <> cons constr
R11051:11054 Poly <> cons constr
R11136:11141 Poly <> length def
R11136:11141 Poly <> length def
R11160:11162 Poly <> app def
R11160:11162 Poly <> app def
R11185:11187 Poly <> rev def
R11185:11187 Poly <> rev def
R11207:11210 Poly <> snoc def
R11207:11210 Poly <> snoc def
def 11272:11280 <> list123''
R11285:11288 Poly <> cons constr
R11293:11296 Poly <> cons constr
R11301:11304 Poly <> cons constr
R11308:11310 Poly <> nil constr
R11322:11327 Poly <> length def
R11329:11337 Poly <> list123'' def
def 11531:11538 <> length''
R11552:11555 Poly <> list ind
R11557:11557 Poly <> X var
R11562:11564 Coq.Init.Datatypes <> nat ind
R11577:11577 Poly <> l var
R11588:11590 Poly <> nil constr
R11606:11609 Poly <> cons constr
R11618:11618 Coq.Init.Datatypes <> S constr
R11621:11628 Poly <> length'' def
def 12655:12659 <> mynil
R12663:12666 Poly <> list ind
R12668:12670 Coq.Init.Datatypes <> nat ind
R12675:12677 Poly <> nil constr
R12806:12808 Poly <> nil constr
R12819:12821 Poly <> nil constr
R12823:12825 Coq.Init.Datatypes <> nat ind
def 12840:12845 <> mynil'
R12851:12853 Poly <> nil constr
R12855:12857 Coq.Init.Datatypes <> nat ind
R13150:13153 Poly <> cons constr
not 13137 <> ::x_'::'_x
R13235:13237 Poly <> nil constr
not 13226 <> ::'['_']'
R13270:13273 Poly <> cons constr
R13281:13284 Poly <> cons constr
R13288:13289 Poly <> ::'['_']' not
not 13249 <> ::'['_x_';'_'..'_';'_x_']'
R13319:13321 Poly <> app def
not 13306 <> ::x_'++'_x
R13466:13469 Poly <> ::x_'++'_x not
R13449:13449 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13465:13465 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13450:13453 Basics <> andb def
R13460:13464 Basics <> false constr
R13455:13458 Basics <> true constr
R13470:13472 Poly <> nil constr
def 13487:13496 <> list123'''
R13501:13501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13503:13504 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13506:13507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13509:13509 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13862:13867 <> repeat
R13885:13885 Poly <> X var
R13897:13899 Coq.Init.Datatypes <> nat ind
R13904:13907 Poly <> list ind
R13909:13909 Poly <> X var
R13920:13924 Poly <> count var
R13933:13933 Coq.Init.Datatypes <> O constr
R13938:13940 Poly <> nil constr
R13944:13944 Coq.Init.Datatypes <> S constr
R13956:13959 Poly <> cons constr
R13964:13969 Poly <> repeat def
R13971:13971 Poly <> n var
R13961:13961 Poly <> n var
def 13995:14006 <> test_repeat1
R14024:14026 Coq.Init.Logic <> :type_scope:x_'='_x not
R14011:14016 Poly <> repeat def
R14018:14021 Basics <> true constr
R14027:14030 Poly <> cons constr
R14038:14041 Poly <> cons constr
R14048:14050 Poly <> nil constr
R14043:14046 Basics <> true constr
R14032:14035 Basics <> true constr
prf 14097:14103 <> nil_app
R14131:14134 Poly <> list ind
R14136:14136 Poly <> X var
R14149:14151 Coq.Init.Logic <> :type_scope:x_'='_x not
R14141:14143 Poly <> app def
R14148:14148 Poly <> l var
R14145:14146 Poly <> ::'['_']' not
R14152:14152 Poly <> l var
prf 14198:14205 <> rev_snoc
R14258:14258 Poly <> X var
R14293:14296 Poly <> list ind
R14298:14298 Poly <> X var
R14317:14319 Coq.Init.Logic <> :type_scope:x_'='_x not
R14303:14305 Poly <> rev def
R14308:14311 Poly <> snoc def
R14315:14315 Poly <> v var
R14313:14313 Poly <> s var
R14321:14325 Poly <> ::x_'::'_x not
R14331:14331 Poly <> ::x_'::'_x not
R14320:14320 Poly <> v var
R14326:14328 Poly <> rev def
R14330:14330 Poly <> s var
prf 14510:14523 <> rev_involutive
R14555:14558 Poly <> list ind
R14560:14560 Poly <> X var
R14576:14578 Coq.Init.Logic <> :type_scope:x_'='_x not
R14565:14567 Poly <> rev def
R14570:14572 Poly <> rev def
R14574:14574 Poly <> l var
R14579:14579 Poly <> l var
R14712:14719 Poly <> rev_snoc thm
R14712:14719 Poly <> rev_snoc thm
prf 14770:14785 <> snoc_with_append
R14846:14849 Poly <> list ind
R14851:14851 Poly <> X var
R14890:14890 Poly <> X var
R14912:14914 Coq.Init.Logic <> :type_scope:x_'='_x not
R14895:14898 Poly <> snoc def
R14911:14911 Poly <> v var
R14903:14906 Poly <> ::x_'++'_x not
R14901:14902 Poly <> l1 var
R14907:14908 Poly <> l2 var
R14917:14921 Poly <> ::x_'++'_x not
R14931:14931 Poly <> ::x_'++'_x not
R14915:14916 Poly <> l1 var
R14922:14925 Poly <> snoc def
R14930:14930 Poly <> v var
R14927:14928 Poly <> l2 var
ind 15397:15400 <> prod
constr 15427:15430 <> pair
R15444:15447 Poly <> prod ind
R15465:15468 Poly <> pair constr
R15465:15468 Poly <> pair constr
R15615:15618 Poly <> pair constr
not 15599 <> ::'('_x_','_x_')'
R15751:15754 Poly <> prod ind
not 15739 <> :type_scope:x_'*'_x
def 16377:16379 <> fst
R16400:16402 Poly <> :type_scope:x_'*'_x not
R16399:16399 Poly <> X var
R16403:16403 Poly <> Y var
R16408:16408 Poly <> X var
R16421:16421 Poly <> p var
R16428:16428 Poly <> ::'('_x_','_x_')' not
R16430:16430 Poly <> ::'('_x_','_x_')' not
R16432:16432 Poly <> ::'('_x_','_x_')' not
def 16456:16458 <> snd
R16479:16481 Poly <> :type_scope:x_'*'_x not
R16478:16478 Poly <> X var
R16482:16482 Poly <> Y var
R16487:16487 Poly <> Y var
R16500:16500 Poly <> p var
R16507:16507 Poly <> ::'('_x_','_x_')' not
R16509:16509 Poly <> ::'('_x_','_x_')' not
R16511:16511 Poly <> ::'('_x_','_x_')' not
def 16852:16858 <> combine
R16879:16882 Poly <> list ind
R16884:16884 Poly <> X var
R16893:16896 Poly <> list ind
R16898:16898 Poly <> Y var
R16914:16917 Poly <> list ind
R16921:16921 Poly <> :type_scope:x_'*'_x not
R16920:16920 Poly <> X var
R16922:16922 Poly <> Y var
R16936:16936 Poly <> ::'('_x_','_x_')' not
R16939:16939 Poly <> ::'('_x_','_x_')' not
R16942:16942 Poly <> ::'('_x_','_x_')' not
R16937:16938 Poly <> lx var
R16940:16941 Poly <> ly var
R16953:16953 Poly <> ::'('_x_','_x_')' not
R16956:16956 Poly <> ::'('_x_','_x_')' not
R16958:16958 Poly <> ::'('_x_','_x_')' not
R16954:16955 Poly <> ::'['_']' not
R16963:16964 Poly <> ::'['_']' not
R16970:16970 Poly <> ::'('_x_','_x_')' not
R16972:16972 Poly <> ::'('_x_','_x_')' not
R16975:16975 Poly <> ::'('_x_','_x_')' not
R16973:16974 Poly <> ::'['_']' not
R16980:16981 Poly <> ::'['_']' not
R16987:16987 Poly <> ::'('_x_','_x_')' not
R16993:16994 Poly <> ::'('_x_','_x_')' not
R17000:17000 Poly <> ::'('_x_','_x_')' not
R16989:16990 Poly <> ::x_'::'_x not
R16996:16997 Poly <> ::x_'::'_x not
R17010:17014 Poly <> ::x_'::'_x not
R17028:17028 Poly <> ::x_'::'_x not
R17005:17005 Poly <> ::'('_x_','_x_')' not
R17007:17007 Poly <> ::'('_x_','_x_')' not
R17009:17009 Poly <> ::'('_x_','_x_')' not
R17015:17021 Poly <> combine def
def 17738:17742 <> split
R17773:17776 Poly <> list ind
R17780:17780 Poly <> :type_scope:x_'*'_x not
R17779:17779 Poly <> X var
R17781:17781 Poly <> Y var
R17798:17798 Poly <> :type_scope:x_'*'_x not
R17805:17809 Poly <> :type_scope:x_'*'_x not
R17816:17816 Poly <> :type_scope:x_'*'_x not
R17799:17802 Poly <> list ind
R17804:17804 Poly <> X var
R17810:17813 Poly <> list ind
R17815:17815 Poly <> Y var
R17840:17844 Basics <> admit prfax
def 17856:17865 <> test_split
R17897:17899 Coq.Init.Logic <> :type_scope:x_'='_x not
R17870:17874 Poly <> split def
R17876:17876 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17886:17886 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17896:17896 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17887:17887 Poly <> ::'('_x_','_x_')' not
R17889:17889 Poly <> ::'('_x_','_x_')' not
R17895:17895 Poly <> ::'('_x_','_x_')' not
R17890:17894 Basics <> false constr
R17877:17877 Poly <> ::'('_x_','_x_')' not
R17879:17879 Poly <> ::'('_x_','_x_')' not
R17885:17885 Poly <> ::'('_x_','_x_')' not
R17880:17884 Basics <> false constr
R17900:17900 Poly <> ::'('_x_','_x_')' not
R17906:17906 Poly <> ::'('_x_','_x_')' not
R17920:17920 Poly <> ::'('_x_','_x_')' not
R17901:17901 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17903:17903 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17905:17905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17907:17907 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17913:17913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17919:17919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17914:17918 Basics <> false constr
R17908:17912 Basics <> false constr
ind 18228:18233 <> option
constr 18258:18261 <> Some
constr 18283:18286 <> None
R18270:18275 Poly <> option ind
R18290:18295 Poly <> option ind
R18311:18314 Poly <> Some constr
R18311:18314 Poly <> Some constr
R18334:18337 Poly <> None constr
R18334:18337 Poly <> None constr
def 18459:18463 <> index
R18481:18483 Coq.Init.Datatypes <> nat ind
R18506:18509 Poly <> list ind
R18511:18511 Poly <> X var
R18516:18521 Poly <> option ind
R18523:18523 Poly <> X var
R18536:18536 Poly <> l var
R18547:18548 Poly <> ::'['_']' not
R18553:18556 Poly <> None constr
R18563:18566 Poly <> ::x_'::'_x not
R18576:18582 Basics <> beq_nat def
R18586:18586 Coq.Init.Datatypes <> O constr
R18584:18584 Poly <> n var
R18605:18609 Poly <> index def
R18612:18615 Coq.Init.Peano <> pred def
R18617:18617 Poly <> n var
R18593:18596 Poly <> Some constr
def 18639:18649 <> test_index1
R18673:18676 Coq.Init.Logic <> :type_scope:x_'='_x not
R18656:18660 Poly <> index def
R18664:18664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18666:18666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18668:18668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18670:18670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18672:18672 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18677:18680 Poly <> Some constr
def 18719:18729 <> test_index2
R18754:18757 Coq.Init.Logic <> :type_scope:x_'='_x not
R18736:18740 Poly <> index def
R18745:18745 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18749:18749 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18753:18753 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18750:18750 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18752:18752 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18746:18746 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18748:18748 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18758:18761 Poly <> Some constr
R18763:18763 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18765:18765 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18802:18812 <> test_index3
R18834:18837 Coq.Init.Logic <> :type_scope:x_'='_x not
R18819:18823 Poly <> index def
R18828:18828 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18833:18833 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18829:18832 Basics <> true constr
R18838:18841 Poly <> None constr
def 19094:19099 <> hd_opt
R19117:19120 Poly <> list ind
R19122:19122 Poly <> X var
R19128:19133 Poly <> option ind
R19135:19135 Poly <> X var
R19161:19165 Basics <> admit prfax
R19296:19301 Poly <> hd_opt def
def 19313:19324 <> test_hd_opt1
R19341:19343 Coq.Init.Logic <> :type_scope:x_'='_x not
R19329:19334 Poly <> hd_opt def
R19336:19336 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19338:19338 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19340:19340 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19344:19347 Poly <> Some constr
def 19390:19401 <> test_hd_opt2
R19424:19427 Coq.Init.Logic <> :type_scope:x_'='_x not
R19407:19412 Poly <> hd_opt def
R19415:19415 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19419:19419 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19423:19423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19420:19420 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19422:19422 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19416:19416 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19418:19418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19428:19431 Poly <> Some constr
R19433:19433 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19435:19435 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 20093:20102 <> doit3times
R20119:20119 Poly <> X var
R20116:20116 Poly <> X var
R20125:20125 Poly <> X var
R20130:20130 Poly <> X var
R20137:20137 Poly <> f var
R20140:20140 Poly <> f var
R20143:20143 Poly <> f var
R20145:20145 Poly <> n var
R20304:20313 Poly <> doit3times def
def 20385:20399 <> test_doit3times
R20423:20425 Coq.Init.Logic <> :type_scope:x_'='_x not
R20402:20411 Poly <> doit3times def
R20413:20420 Basics <> minustwo def
def 20464:20479 <> test_doit3times'
R20502:20504 Coq.Init.Logic <> :type_scope:x_'='_x not
R20482:20491 Poly <> doit3times def
R20498:20501 Basics <> true constr
R20493:20496 Basics <> negb def
R20505:20509 Basics <> false constr
R20803:20806 Coq.Init.Peano <> plus def
def 21528:21532 <> plus3
R21537:21540 Coq.Init.Peano <> plus def
R21551:21555 Poly <> plus3 def
def 21567:21576 <> test_plus3
R21590:21592 Coq.Init.Logic <> :type_scope:x_'='_x not
R21583:21587 Poly <> plus3 def
def 21630:21640 <> test_plus3'
R21664:21666 Coq.Init.Logic <> :type_scope:x_'='_x not
R21646:21655 Poly <> doit3times def
R21657:21661 Poly <> plus3 def
def 21704:21715 <> test_plus3''
R21741:21743 Coq.Init.Logic <> :type_scope:x_'='_x not
R21720:21729 Poly <> doit3times def
R21732:21735 Coq.Init.Peano <> plus def
def 22668:22677 <> prod_curry
R22710:22710 Poly <> Z var
R22702:22704 Poly <> :type_scope:x_'*'_x not
R22701:22701 Poly <> X var
R22705:22705 Poly <> Y var
R22718:22718 Poly <> X var
R22726:22726 Poly <> Y var
R22731:22731 Poly <> Z var
R22736:22736 Poly <> f var
R22738:22738 Poly <> ::'('_x_','_x_')' not
R22740:22741 Poly <> ::'('_x_','_x_')' not
R22743:22743 Poly <> ::'('_x_','_x_')' not
R22739:22739 Poly <> x var
R22742:22742 Poly <> y var
def 22889:22900 <> prod_uncurry
R22934:22934 Poly <> Z var
R22929:22929 Poly <> Y var
R22924:22924 Poly <> X var
R22943:22945 Poly <> :type_scope:x_'*'_x not
R22942:22942 Poly <> X var
R22946:22946 Poly <> Y var
R22951:22951 Poly <> Z var
R22956:22956 Poly <> f var
R22967:22969 Poly <> snd def
R22971:22971 Poly <> p var
R22959:22961 Poly <> fst def
R22963:22963 Poly <> p var
R23110:23119 Poly <> prod_curry def
R23129:23140 Poly <> prod_uncurry def
prf 23152:23164 <> uncurry_curry
R23205:23205 Poly <> Z var
R23200:23200 Poly <> Y var
R23195:23195 Poly <> X var
R23246:23248 Coq.Init.Logic <> :type_scope:x_'='_x not
R23215:23224 Poly <> prod_curry def
R23245:23245 Poly <> y var
R23243:23243 Poly <> x var
R23227:23238 Poly <> prod_uncurry def
R23240:23240 Poly <> f var
R23249:23249 Poly <> f var
R23253:23253 Poly <> y var
R23251:23251 Poly <> x var
R23272:23283 Poly <> prod_uncurry def
R23293:23302 Poly <> prod_curry def
prf 23579:23591 <> curry_uncurry
R23664:23664 Poly <> Z var
R23655:23657 Poly <> :type_scope:x_'*'_x not
R23654:23654 Poly <> X var
R23658:23658 Poly <> Y var
R23673:23675 Poly <> :type_scope:x_'*'_x not
R23672:23672 Poly <> X var
R23676:23676 Poly <> Y var
R23711:23713 Coq.Init.Logic <> :type_scope:x_'='_x not
R23682:23693 Poly <> prod_uncurry def
R23710:23710 Poly <> p var
R23696:23705 Poly <> prod_curry def
R23707:23707 Poly <> f var
R23714:23714 Poly <> f var
R23716:23716 Poly <> p var
ind 23788:23789 <> f1
constr 23814:23814 <> Y
R23815:23815 Poly <> f1 ind
R23823:23824 Poly <> f1 ind
def 24371:24376 <> filter
R24397:24400 Basics <> bool ind
R24394:24394 Poly <> X var
R24406:24409 Poly <> list ind
R24411:24411 Poly <> X var
R24433:24436 Poly <> list ind
R24438:24438 Poly <> X var
R24452:24452 Poly <> l var
R24463:24464 Poly <> ::'['_']' not
R24473:24474 Poly <> ::'['_']' not
R24481:24484 Poly <> ::x_'::'_x not
R24493:24496 Poly <> test var
R24561:24566 Poly <> filter def
R24568:24571 Poly <> test var
R24506:24510 Poly <> ::x_'::'_x not
R24524:24524 Poly <> ::x_'::'_x not
R24511:24516 Poly <> filter def
R24518:24521 Poly <> test var
def 24752:24763 <> test_filter1
R24788:24790 Coq.Init.Logic <> :type_scope:x_'='_x not
R24766:24771 Poly <> filter def
R24779:24779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24781:24781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24783:24783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24785:24785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24787:24787 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24773:24777 Basics <> evenb def
R24791:24791 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24793:24793 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24795:24795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24847:24857 <> length_is_1
R24875:24878 Poly <> list ind
R24880:24880 Poly <> X var
R24885:24888 Basics <> bool ind
R24895:24901 Basics <> beq_nat def
R24904:24909 Poly <> length def
R24911:24911 Poly <> l var
def 24926:24937 <> test_filter2
R25012:25016 Coq.Init.Logic <> :type_scope:x_'='_x not
R24944:24949 Poly <> filter def
R24974:24975 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24982:24983 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24987:24988 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24992:24993 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25001:25002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25005:25006 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25010:25011 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25007:25007 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25009:25009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25003:25004 Poly <> ::'['_']' not
R24994:24994 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24996:24996 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24998:24998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25000:25000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24989:24989 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24991:24991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24984:24984 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24986:24986 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24976:24976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24978:24979 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24981:24981 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24951:24961 Poly <> length_is_1 def
R25017:25018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25022:25023 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25027:25028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25032:25033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25029:25029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25031:25031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25024:25024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25026:25026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25019:25019 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25021:25021 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25204:25219 <> countoddmembers'
R25224:25227 Poly <> list ind
R25229:25231 Coq.Init.Datatypes <> nat ind
R25236:25238 Coq.Init.Datatypes <> nat ind
R25245:25250 Poly <> length def
R25253:25258 Poly <> filter def
R25265:25265 Poly <> l var
R25260:25263 Basics <> oddb def
def 25278:25299 <> test_countoddmembers'1
R25334:25336 Coq.Init.Logic <> :type_scope:x_'='_x not
R25304:25319 Poly <> countoddmembers' def
R25321:25321 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25323:25323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25325:25325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25327:25327 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25329:25329 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25331:25331 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25333:25333 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25374:25395 <> test_countoddmembers'2
R25424:25426 Coq.Init.Logic <> :type_scope:x_'='_x not
R25400:25415 Poly <> countoddmembers' def
R25417:25417 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25419:25419 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25421:25421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25423:25423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25464:25485 <> test_countoddmembers'3
R25510:25512 Coq.Init.Logic <> :type_scope:x_'='_x not
R25490:25505 Poly <> countoddmembers' def
R25507:25509 Poly <> nil constr
def 26379:26392 <> test_anon_fun'
R26426:26428 Coq.Init.Logic <> :type_scope:x_'='_x not
R26397:26406 Poly <> doit3times def
R26419:26421 Basics <> :nat_scope:x_'*'_x not
R26418:26418 Poly <> n var
R26422:26422 Poly <> n var
def 26565:26577 <> test_filter2'
R26672:26676 Coq.Init.Logic <> :type_scope:x_'='_x not
R26584:26589 Poly <> filter def
R26634:26635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26642:26643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26647:26648 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26652:26653 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26661:26662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26665:26666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26670:26671 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26667:26667 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26669:26669 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26663:26664 Poly <> ::'['_']' not
R26654:26654 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26656:26656 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26658:26658 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26660:26660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26649:26649 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26651:26651 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26644:26644 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26646:26646 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26636:26636 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26638:26639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26641:26641 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26601:26607 Basics <> beq_nat def
R26610:26615 Poly <> length def
R26617:26617 Poly <> l var
R26677:26678 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26682:26683 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26687:26688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26692:26693 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26689:26689 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26691:26691 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26684:26684 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26686:26686 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26679:26679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26681:26681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26996:27010 <> filter_even_gt7
R27017:27020 Poly <> list ind
R27022:27024 Coq.Init.Datatypes <> nat ind
R27029:27032 Poly <> list ind
R27034:27036 Coq.Init.Datatypes <> nat ind
R27062:27066 Basics <> admit prfax
def 27078:27099 <> test_filter_even_gt7_1
R27140:27142 Coq.Init.Logic <> :type_scope:x_'='_x not
R27105:27119 Poly <> filter_even_gt7 def
R27121:27121 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27123:27123 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27125:27125 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27127:27127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27129:27129 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27132:27132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27134:27134 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27137:27137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27139:27139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27143:27143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27146:27146 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27149:27149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27151:27151 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27193:27214 <> test_filter_even_gt7_2
R27250:27252 Coq.Init.Logic <> :type_scope:x_'='_x not
R27220:27234 Poly <> filter_even_gt7 def
R27236:27236 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27238:27238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27240:27240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27242:27242 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27245:27245 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27249:27249 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27253:27254 Poly <> ::'['_']' not
def 27908:27916 <> partition
R27942:27945 Basics <> bool ind
R27937:27937 Poly <> X var
R27953:27956 Poly <> list ind
R27958:27958 Poly <> X var
R27990:27992 Poly <> :type_scope:x_'*'_x not
R27984:27987 Poly <> list ind
R27989:27989 Poly <> X var
R27993:27996 Poly <> list ind
R27998:27998 Poly <> X var
R28022:28026 Basics <> admit prfax
def 28038:28052 <> test_partition1
R28081:28083 Coq.Init.Logic <> :type_scope:x_'='_x not
R28055:28063 Poly <> partition def
R28070:28070 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28072:28072 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28074:28074 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28076:28076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28078:28078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28080:28080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28065:28068 Basics <> oddb def
R28084:28084 Poly <> ::'('_x_','_x_')' not
R28092:28093 Poly <> ::'('_x_','_x_')' not
R28099:28099 Poly <> ::'('_x_','_x_')' not
R28085:28085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28087:28087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28089:28089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28091:28091 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28094:28094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28096:28096 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28098:28098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28139:28153 <> test_partition2
R28190:28192 Coq.Init.Logic <> :type_scope:x_'='_x not
R28156:28164 Poly <> partition def
R28183:28183 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28185:28185 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28187:28187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28189:28189 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28176:28180 Basics <> false constr
R28193:28193 Poly <> ::'('_x_','_x_')' not
R28196:28197 Poly <> ::'('_x_','_x_')' not
R28205:28205 Poly <> ::'('_x_','_x_')' not
R28194:28195 Poly <> ::'['_']' not
R28198:28198 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28200:28200 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28202:28202 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28204:28204 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28394:28396 <> map
R28415:28415 Poly <> Y var
R28412:28412 Poly <> X var
R28421:28424 Poly <> list ind
R28426:28426 Poly <> X var
R28445:28448 Poly <> list ind
R28450:28450 Poly <> Y var
R28464:28464 Poly <> l var
R28475:28476 Poly <> ::'['_']' not
R28485:28486 Poly <> ::'['_']' not
R28493:28496 Poly <> ::x_'::'_x not
R28502:28502 Poly <> ::x_'::'_x not
R28506:28511 Poly <> ::x_'::'_x not
R28519:28519 Poly <> ::x_'::'_x not
R28503:28503 Poly <> f var
R28512:28514 Poly <> map def
R28516:28516 Poly <> f var
def 28747:28755 <> test_map1
R28778:28780 Coq.Init.Logic <> :type_scope:x_'='_x not
R28758:28760 Poly <> map def
R28771:28771 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28773:28773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28775:28775 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28777:28777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28763:28766 Coq.Init.Peano <> plus def
R28781:28781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28783:28783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28785:28785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28787:28787 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29096:29104 <> test_map2
R29125:29127 Coq.Init.Logic <> :type_scope:x_'='_x not
R29107:29109 Poly <> map def
R29116:29116 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29118:29118 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29120:29120 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29122:29122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29124:29124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29111:29114 Basics <> oddb def
R29128:29128 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29134:29134 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29139:29139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29145:29145 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29150:29150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29146:29149 Basics <> true constr
R29140:29144 Basics <> false constr
R29135:29138 Basics <> true constr
R29129:29133 Basics <> false constr
def 29337:29345 <> test_map3
R29393:29397 Coq.Init.Logic <> :type_scope:x_'='_x not
R29352:29354 Poly <> map def
R29384:29384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29386:29386 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29388:29388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29390:29390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29392:29392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29366:29366 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29374:29374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29381:29381 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29375:29378 Basics <> oddb def
R29380:29380 Poly <> n var
R29367:29371 Basics <> evenb def
R29373:29373 Poly <> n var
R29398:29398 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29411:29411 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29424:29424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29437:29437 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29450:29450 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29438:29438 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29444:29444 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29449:29449 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29445:29448 Basics <> true constr
R29439:29443 Basics <> false constr
R29425:29425 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29430:29430 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29436:29436 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29431:29435 Basics <> false constr
R29426:29429 Basics <> true constr
R29412:29412 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29418:29418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29423:29423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29419:29422 Basics <> true constr
R29413:29417 Basics <> false constr
R29399:29399 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29404:29404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29410:29410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29405:29409 Basics <> false constr
R29400:29403 Basics <> true constr
prf 29646:29657 <> map_revLemma
R29690:29690 Poly <> Y var
R29685:29685 Poly <> X var
R29698:29701 Poly <> list ind
R29703:29703 Poly <> X var
R29711:29711 Poly <> X var
R29733:29735 Coq.Init.Logic <> :type_scope:x_'='_x not
R29717:29719 Poly <> map def
R29724:29727 Poly <> snoc def
R29731:29731 Poly <> n var
R29729:29729 Poly <> l var
R29721:29721 Poly <> f var
R29736:29739 Poly <> snoc def
R29752:29752 Poly <> f var
R29754:29754 Poly <> n var
R29742:29744 Poly <> map def
R29748:29748 Poly <> l var
R29746:29746 Poly <> f var
prf 29923:29929 <> map_rev
R29963:29963 Poly <> Y var
R29958:29958 Poly <> X var
R29971:29974 Poly <> list ind
R29976:29976 Poly <> X var
R29995:29997 Coq.Init.Logic <> :type_scope:x_'='_x not
R29982:29984 Poly <> map def
R29989:29991 Poly <> rev def
R29993:29993 Poly <> l var
R29986:29986 Poly <> f var
R29998:30000 Poly <> rev def
R30003:30005 Poly <> map def
R30009:30009 Poly <> l var
R30007:30007 Poly <> f var
R30139:30150 Poly <> map_revLemma thm
R30139:30150 Poly <> map_revLemma thm
def 30657:30664 <> flat_map
R30685:30688 Poly <> list ind
R30690:30690 Poly <> Y var
R30680:30680 Poly <> X var
R30696:30699 Poly <> list ind
R30701:30701 Poly <> X var
R30726:30729 Poly <> list ind
R30731:30731 Poly <> Y var
R30758:30762 Basics <> admit prfax
def 30774:30787 <> test_flat_map1
R30827:30831 Coq.Init.Logic <> :type_scope:x_'='_x not
R30792:30799 Poly <> flat_map def
R30820:30820 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30822:30822 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30824:30824 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30826:30826 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30811:30811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30813:30813 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30815:30815 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30817:30817 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30816:30816 Poly <> n var
R30814:30814 Poly <> n var
R30812:30812 Poly <> n var
R30832:30832 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30834:30835 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30837:30838 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30840:30841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30843:30844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30846:30847 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30849:30850 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30852:30853 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30855:30856 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30858:30858 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 31063:31072 <> option_map
R31097:31097 Poly <> Y var
R31092:31092 Poly <> X var
R31106:31111 Poly <> option ind
R31113:31113 Poly <> X var
R31140:31145 Poly <> option ind
R31147:31147 Poly <> Y var
R31160:31161 Poly <> xo var
R31174:31177 Poly <> None constr
R31182:31185 Poly <> None constr
R31193:31196 Poly <> Some constr
R31203:31206 Poly <> Some constr
R31209:31209 Poly <> f var
def 32031:32034 <> fold
R32057:32057 Poly <> Y var
R32054:32054 Poly <> Y var
R32051:32051 Poly <> X var
R32063:32066 Poly <> list ind
R32068:32068 Poly <> X var
R32074:32074 Poly <> Y var
R32079:32079 Poly <> Y var
R32092:32092 Poly <> l var
R32103:32105 Poly <> nil constr
R32110:32110 Poly <> b var
R32117:32120 Poly <> ::x_'::'_x not
R32126:32126 Poly <> f var
R32131:32134 Poly <> fold def
R32140:32140 Poly <> b var
R32136:32136 Poly <> f var
R32624:32627 Poly <> fold def
R32629:32632 Basics <> andb def
def 32694:32706 <> fold_example1
R32731:32733 Coq.Init.Logic <> :type_scope:x_'='_x not
R32710:32713 Poly <> fold def
R32720:32720 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32722:32722 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32724:32724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32726:32726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32728:32728 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32715:32718 Coq.Init.Peano <> mult def
def 32772:32784 <> fold_example2
R32825:32827 Coq.Init.Logic <> :type_scope:x_'='_x not
R32788:32791 Poly <> fold def
R32821:32824 Basics <> true constr
R32798:32798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32803:32803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32808:32808 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32814:32814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32819:32819 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32815:32818 Basics <> true constr
R32809:32813 Basics <> false constr
R32804:32807 Basics <> true constr
R32799:32802 Basics <> true constr
R32793:32796 Basics <> andb def
R32828:32832 Basics <> false constr
def 32869:32881 <> fold_example3
R32916:32918 Coq.Init.Logic <> :type_scope:x_'='_x not
R32885:32888 Poly <> fold def
R32914:32915 Poly <> ::'['_']' not
R32895:32895 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32899:32899 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32902:32902 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32908:32908 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32912:32912 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32909:32909 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32911:32911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32903:32903 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32905:32905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32907:32907 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32900:32901 Poly <> ::'['_']' not
R32896:32896 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32898:32898 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32890:32892 Poly <> app def
R32919:32919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32921:32921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32923:32923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32925:32925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32927:32927 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 33844:33851 <> constfun
R33867:33867 Poly <> X var
R33877:33877 Poly <> X var
R33872:33874 Coq.Init.Datatypes <> nat ind
R33891:33893 Coq.Init.Datatypes <> nat ind
R33899:33899 Poly <> x var
def 33914:33918 <> ftrue
R33923:33930 Poly <> constfun def
R33932:33935 Basics <> true constr
def 33947:33963 <> constfun_example1
R33974:33976 Coq.Init.Logic <> :type_scope:x_'='_x not
R33967:33971 Poly <> ftrue def
R33977:33980 Basics <> true constr
def 34017:34033 <> constfun_example2
R34052:34054 Coq.Init.Logic <> :type_scope:x_'='_x not
R34038:34045 Poly <> constfun def
def 34398:34405 <> override
R34426:34426 Poly <> X var
R34421:34423 Coq.Init.Datatypes <> nat ind
R34432:34434 Coq.Init.Datatypes <> nat ind
R34440:34440 Poly <> X var
R34450:34450 Poly <> X var
R34445:34447 Coq.Init.Datatypes <> nat ind
R34464:34466 Coq.Init.Datatypes <> nat ind
R34475:34481 Basics <> beq_nat def
R34485:34486 Poly <> k' var
R34483:34483 Poly <> k var
R34500:34500 Poly <> f var
R34502:34503 Poly <> k' var
R34493:34493 Poly <> x var
def 34702:34712 <> fmostlytrue
R34717:34724 Poly <> override def
R34753:34757 Basics <> false constr
R34727:34734 Poly <> override def
R34744:34748 Basics <> false constr
R34736:34740 Poly <> ftrue def
def 34781:34797 <> override_example1
R34814:34816 Coq.Init.Logic <> :type_scope:x_'='_x not
R34801:34811 Poly <> fmostlytrue def
R34817:34820 Basics <> true constr
def 34857:34873 <> override_example2
R34890:34892 Coq.Init.Logic <> :type_scope:x_'='_x not
R34877:34887 Poly <> fmostlytrue def
R34893:34897 Basics <> false constr
def 34934:34950 <> override_example3
R34967:34969 Coq.Init.Logic <> :type_scope:x_'='_x not
R34954:34964 Poly <> fmostlytrue def
R34970:34973 Basics <> true constr
def 35010:35026 <> override_example4
R35043:35045 Coq.Init.Logic <> :type_scope:x_'='_x not
R35030:35040 Poly <> fmostlytrue def
R35046:35050 Basics <> false constr
prf 35351:35366 <> override_example
R35380:35383 Basics <> bool ind
R35421:35423 Coq.Init.Logic <> :type_scope:x_'='_x not
R35390:35397 Poly <> override def
R35414:35417 Basics <> true constr
R35400:35407 Poly <> constfun def
R35409:35409 Poly <> b var
R35424:35424 Poly <> b var
prf 36449:36466 <> unfold_example_bad
R36510:36512 Coq.Init.Logic <> :type_scope:x_'='_x not
R36506:36508 Basics <> :nat_scope:x_'+'_x not
R36499:36503 Poly <> plus3 def
R36505:36505 Poly <> n var
R36514:36516 Basics <> :nat_scope:x_'+'_x not
R36513:36513 Poly <> m var
R36489:36491 Coq.Init.Logic <> :type_scope:x_'='_x not
R36485:36487 Basics <> :nat_scope:x_'+'_x not
R36488:36488 Poly <> n var
R36492:36492 Poly <> m var
prf 36880:36893 <> unfold_example
R36937:36939 Coq.Init.Logic <> :type_scope:x_'='_x not
R36933:36935 Basics <> :nat_scope:x_'+'_x not
R36926:36930 Poly <> plus3 def
R36932:36932 Poly <> n var
R36941:36943 Basics <> :nat_scope:x_'+'_x not
R36940:36940 Poly <> m var
R36916:36918 Coq.Init.Logic <> :type_scope:x_'='_x not
R36912:36914 Basics <> :nat_scope:x_'+'_x not
R36915:36915 Poly <> n var
R36919:36919 Poly <> m var
R36979:36983 Poly <> plus3 def
prf 37200:37210 <> override_eq
R37242:37242 Poly <> X var
R37237:37239 Coq.Init.Datatypes <> nat ind
R37266:37268 Coq.Init.Logic <> :type_scope:x_'='_x not
R37249:37256 Poly <> override def
R37262:37262 Poly <> x var
R37260:37260 Poly <> k var
R37258:37258 Poly <> f var
R37265:37265 Poly <> k var
R37269:37269 Poly <> x var
R37306:37313 Poly <> override def
R37329:37340 Induction <> beq_nat_refl prfax
R37329:37340 Induction <> beq_nat_refl prfax
prf 37538:37549 <> override_neq
R37591:37591 Poly <> X var
R37586:37588 Coq.Init.Datatypes <> nat ind
R37660:37662 Coq.Init.Logic <> :type_scope:x_'='_x not
R37640:37647 Poly <> override def
R37654:37655 Poly <> x2 var
R37651:37652 Poly <> k2 var
R37649:37649 Poly <> f var
R37658:37659 Poly <> k1 var
R37663:37664 Poly <> x1 var
R37625:37627 Coq.Init.Logic <> :type_scope:x_'='_x not
R37612:37618 Basics <> beq_nat def
R37623:37624 Poly <> k1 var
R37620:37621 Poly <> k2 var
R37628:37632 Basics <> false constr
R37601:37603 Coq.Init.Logic <> :type_scope:x_'='_x not
R37597:37597 Poly <> f var
R37599:37600 Poly <> k1 var
R37604:37605 Poly <> x1 var
def 38159:38169 <> fold_length
R38187:38190 Poly <> list ind
R38192:38192 Poly <> X var
R38197:38199 Coq.Init.Datatypes <> nat ind
R38206:38209 Poly <> fold def
R38228:38228 Poly <> l var
R38223:38223 Coq.Init.Datatypes <> S constr
R38225:38225 Poly <> n var
def 38242:38258 <> test_fold_length1
R38281:38283 Coq.Init.Logic <> :type_scope:x_'='_x not
R38262:38272 Poly <> fold_length def
R38274:38274 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38276:38276 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38278:38278 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38280:38280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 38369:38387 <> fold_length_correct
R38405:38408 Poly <> list ind
R38410:38410 Poly <> X var
R38429:38431 Coq.Init.Logic <> :type_scope:x_'='_x not
R38416:38426 Poly <> fold_length def
R38428:38428 Poly <> l var
R38432:38437 Poly <> length def
R38439:38439 Poly <> l var
def 38618:38625 <> fold_map
R38648:38648 Poly <> Y var
R38643:38643 Poly <> X var
R38656:38659 Poly <> list ind
R38661:38661 Poly <> X var
R38666:38669 Poly <> list ind
R38671:38671 Poly <> Y var
R38678:38681 Poly <> fold def
R38715:38716 Poly <> ::'['_']' not
R38713:38713 Poly <> l var
R38698:38698 Poly <> ::x_'::'_x not
R38702:38706 Poly <> ::x_'::'_x not
R38699:38699 Poly <> f var
R38701:38701 Poly <> x var
R38707:38710 Poly <> rest var
prf 38836:38851 <> fold_map_correct
R38883:38883 Poly <> Y var
R38878:38878 Poly <> X var
R38891:38894 Poly <> list ind
R38896:38896 Poly <> X var
R38914:38916 Coq.Init.Logic <> :type_scope:x_'='_x not
R38902:38909 Poly <> fold_map def
R38913:38913 Poly <> l var
R38911:38911 Poly <> f var
R38917:38919 Poly <> map def
R38923:38923 Poly <> l var
R38921:38921 Poly <> f var
mod 39592:39597 <> Church
def 39942:39944 Church nat
R39984:39984 Poly <> X var
R39979:39979 Poly <> X var
R39972:39972 Poly <> X var
R39967:39967 Poly <> X var
def 40123:40125 Church one
R40129:40131 Poly Church nat def
R40164:40164 Poly <> X var
R40159:40159 Poly <> X var
R40172:40172 Poly <> X var
R40178:40178 Poly <> f var
R40180:40180 Poly <> x var
def 40249:40251 Church two
R40255:40257 Poly Church nat def
R40289:40289 Poly <> X var
R40284:40284 Poly <> X var
R40297:40297 Poly <> X var
R40303:40303 Poly <> f var
R40306:40306 Poly <> f var
R40308:40308 Poly <> x var
def 40462:40465 Church zero
R40469:40471 Poly Church nat def
R40503:40503 Poly <> X var
R40498:40498 Poly <> X var
R40511:40511 Poly <> X var
R40517:40517 Poly <> x var
def 40785:40789 Church three
R40793:40795 Poly Church nat def
R40801:40810 Poly Church doit3times def
def 41021:41024 Church succ
R41031:41033 Poly Church nat def
R41038:41040 Poly Church nat def
R41071:41071 Poly <> X var
R41066:41066 Poly <> X var
R41079:41079 Poly <> X var
R41085:41085 Poly <> f var
R41087:41087 Poly <> n var
R41093:41093 Poly <> x var
R41091:41091 Poly <> f var
R41089:41089 Poly <> X var
def 41106:41111 Church succ_1
R41124:41126 Coq.Init.Logic <> :type_scope:x_'='_x not
R41115:41118 Poly Church succ def
R41120:41123 Poly Church zero def
R41127:41129 Poly Church one def
def 41168:41173 Church succ_2
R41185:41187 Coq.Init.Logic <> :type_scope:x_'='_x not
R41177:41180 Poly Church succ def
R41182:41184 Poly Church one def
R41188:41190 Poly Church two def
def 41229:41234 Church succ_3
R41246:41248 Coq.Init.Logic <> :type_scope:x_'='_x not
R41238:41241 Poly Church succ def
R41243:41245 Poly Church two def
R41249:41253 Poly Church three def
def 41335:41338 Church plus
R41347:41349 Poly Church nat def
R41354:41356 Poly Church nat def
R41387:41387 Poly <> X var
R41382:41382 Poly <> X var
R41395:41395 Poly <> X var
R41402:41402 Poly <> n var
R41409:41409 Poly <> m var
R41415:41415 Poly <> x var
R41413:41413 Poly <> f var
R41411:41411 Poly <> X var
R41406:41406 Poly <> f var
R41404:41404 Poly <> X var
def 41430:41435 Church plus_1
R41452:41454 Coq.Init.Logic <> :type_scope:x_'='_x not
R41439:41442 Poly Church plus def
R41449:41451 Poly Church one def
R41444:41447 Poly Church zero def
R41455:41457 Poly Church one def
def 41497:41502 Church plus_2
R41520:41522 Coq.Init.Logic <> :type_scope:x_'='_x not
R41506:41509 Poly Church plus def
R41515:41519 Poly Church three def
R41511:41513 Poly Church two def
R41523:41526 Poly Church plus def
R41534:41536 Poly Church two def
R41528:41532 Poly Church three def
def 41576:41581 Church plus_3
R41612:41614 Coq.Init.Logic <> :type_scope:x_'='_x not
R41587:41590 Poly Church plus def
R41607:41611 Poly Church three def
R41593:41596 Poly Church plus def
R41602:41604 Poly Church two def
R41598:41600 Poly Church two def
R41615:41618 Poly Church plus def
R41625:41628 Poly Church plus def
R41636:41640 Poly Church three def
R41630:41634 Poly Church three def
R41620:41622 Poly Church one def
def 41707:41710 Church mult
R41719:41721 Poly Church nat def
R41726:41728 Poly Church nat def
R41759:41759 Poly <> X var
R41754:41754 Poly <> X var
R41767:41767 Poly <> X var
R41774:41774 Poly <> n var
R41786:41786 Poly <> x var
R41779:41779 Poly <> m var
R41783:41783 Poly <> f var
R41781:41781 Poly <> X var
R41776:41776 Poly <> X var
def 41799:41804 Church mult_1
R41820:41822 Coq.Init.Logic <> :type_scope:x_'='_x not
R41808:41811 Poly Church mult def
R41817:41819 Poly Church one def
R41813:41815 Poly Church one def
R41823:41825 Poly Church one def
def 41865:41870 Church mult_2
R41902:41904 Coq.Init.Logic <> :type_scope:x_'='_x not
R41874:41877 Poly Church mult def
R41885:41888 Poly Church plus def
R41896:41900 Poly Church three def
R41890:41894 Poly Church three def
R41879:41882 Poly Church zero def
R41905:41908 Poly Church zero def
def 41948:41953 Church mult_3
R41971:41973 Coq.Init.Logic <> :type_scope:x_'='_x not
R41957:41960 Poly Church mult def
R41966:41970 Poly Church three def
R41962:41964 Poly Church two def
R41974:41977 Poly Church plus def
R41985:41989 Poly Church three def
R41979:41983 Poly Church three def
def 42304:42306 Church exp
R42315:42317 Poly Church nat def
R42322:42324 Poly Church nat def
R42354:42354 Poly <> X var
R42349:42349 Poly <> X var
R42362:42362 Poly <> X var
R42370:42370 Poly <> m var
R42387:42387 Poly <> f var
R42382:42382 Poly <> n var
R42384:42384 Poly <> X var
R42378:42378 Poly <> X var
R42373:42373 Poly <> X var
R42390:42390 Poly <> x var
def 42402:42406 Church exp_1
R42421:42423 Coq.Init.Logic <> :type_scope:x_'='_x not
R42410:42412 Poly Church exp def
R42418:42420 Poly Church two def
R42414:42416 Poly Church two def
R42424:42427 Poly Church plus def
R42433:42435 Poly Church two def
R42429:42431 Poly Church two def
def 42475:42479 Church exp_2
R42496:42498 Coq.Init.Logic <> :type_scope:x_'='_x not
R42483:42485 Poly Church exp def
R42493:42495 Poly Church two def
R42487:42491 Poly Church three def
R42499:42502 Poly Church plus def
R42530:42532 Poly Church one def
R42505:42508 Poly Church mult def
R42515:42518 Poly Church mult def
R42524:42526 Poly Church two def
R42520:42522 Poly Church two def
R42510:42512 Poly Church two def
def 42572:42576 Church exp_3
R42594:42596 Coq.Init.Logic <> :type_scope:x_'='_x not
R42580:42582 Poly Church exp def
R42590:42593 Poly Church zero def
R42584:42588 Poly Church three def
R42597:42599 Poly Church one def
R42635:42640 Poly Church <> mod
