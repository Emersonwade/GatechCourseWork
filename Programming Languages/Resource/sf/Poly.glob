DIGEST 9aa91709a8807d31b2c4bfa482ece924
FPoly
R354:358 Lists <> <> lib
prf 903:912 <> extra_swap
R933:935 Coq.Init.Datatypes <> nat ind
R944:946 Coq.Init.Logic <> :type_scope:x_'='_x not
R940:942 Basics <> :nat_scope:x_'+'_x not
R939:939 Poly <> n var
R943:943 Poly <> o var
R948:950 Basics <> :nat_scope:x_'+'_x not
R947:947 Poly <> o var
R951:951 Poly <> n var
prf 980:982 <> use
R1006:1008 Coq.Init.Logic <> :type_scope:x_'='_x not
R998:998 Coq.Init.Datatypes <> S constr
R1001:1003 Basics <> :nat_scope:x_'+'_x not
R1000:1000 Poly <> m var
R1004:1004 Poly <> n var
R1009:1009 Coq.Init.Datatypes <> S constr
R1012:1014 Basics <> :nat_scope:x_'+'_x not
R1011:1011 Poly <> n var
R1015:1015 Poly <> m var
R1049:1058 Poly <> extra_swap prfax
R1049:1058 Poly <> extra_swap prfax
def 1104:1109 <> id_nat
R1116:1118 Coq.Init.Datatypes <> nat ind
R1123:1125 Coq.Init.Datatypes <> nat ind
R1130:1130 Poly <> n var
def 1144:1150 <> id_bool
R1157:1160 Basics <> bool ind
R1165:1168 Basics <> bool ind
R1173:1173 Poly <> b var
def 1187:1188 <> id
R1206:1206 Poly <> X var
R1212:1212 Poly <> x var
R1222:1227 Poly <> id_nat def
R1236:1242 Poly <> id_bool def
R1251:1252 Poly <> id def
R1262:1267 Poly <> id_nat def
ind 1283:1290 <> boollist
constr 1306:1313 <> bool_nil
constr 1330:1338 <> bool_cons
R1317:1324 Poly <> boollist ind
R1362:1369 Poly <> boollist ind
R1350:1357 Poly <> boollist ind
R1342:1345 Basics <> bool ind
ind 1856:1859 <> list
constr 1884:1886 <> nil
constr 1901:1904 <> cons
R1890:1893 Poly <> list ind
R1923:1926 Poly <> list ind
R1913:1916 Poly <> list ind
R3118:3120 Poly <> nil constr
R3170:3173 Poly <> cons constr
R3581:3584 Poly <> cons constr
R3593:3596 Poly <> cons constr
R3605:3607 Poly <> nil constr
R3609:3611 Coq.Init.Datatypes <> nat ind
R3598:3600 Coq.Init.Datatypes <> nat ind
R3586:3588 Coq.Init.Datatypes <> nat ind
def 4004:4009 <> length
R4023:4026 Poly <> list ind
R4028:4028 Poly <> X var
R4033:4035 Coq.Init.Datatypes <> nat ind
R4048:4048 Poly <> l var
R4059:4061 Poly <> nil constr
R4077:4080 Poly <> cons constr
R4089:4089 Coq.Init.Datatypes <> S constr
R4092:4097 Poly <> length def
R4099:4099 Poly <> X var
def 4636:4647 <> test_length1
R4701:4703 Coq.Init.Logic <> :type_scope:x_'='_x not
R4655:4660 Poly <> length def
R4667:4670 Poly <> cons constr
R4679:4682 Poly <> cons constr
R4691:4693 Poly <> nil constr
R4695:4697 Coq.Init.Datatypes <> nat ind
R4684:4686 Coq.Init.Datatypes <> nat ind
R4672:4674 Coq.Init.Datatypes <> nat ind
R4662:4664 Coq.Init.Datatypes <> nat ind
def 4860:4871 <> test_length2
R4918:4920 Coq.Init.Logic <> :type_scope:x_'='_x not
R4879:4884 Poly <> length def
R4892:4895 Poly <> cons constr
R4908:4910 Poly <> nil constr
R4912:4915 Basics <> bool ind
R4902:4905 Basics <> true constr
R4897:4900 Basics <> bool ind
R4886:4889 Basics <> bool ind
def 5097:5099 <> app
R5121:5124 Poly <> list ind
R5126:5126 Poly <> X var
R5148:5151 Poly <> list ind
R5153:5153 Poly <> X var
R5167:5168 Poly <> l1 var
R5179:5181 Poly <> nil constr
R5191:5192 Poly <> l2 var
R5198:5201 Poly <> cons constr
R5210:5213 Poly <> cons constr
R5220:5222 Poly <> app def
R5228:5229 Poly <> l2 var
R5224:5224 Poly <> X var
R5215:5215 Poly <> X var
def 5249:5252 <> snoc
R5266:5269 Poly <> list ind
R5271:5271 Poly <> X var
R5277:5277 Poly <> X var
R5283:5286 Poly <> list ind
R5288:5288 Poly <> X var
R5302:5302 Poly <> l var
R5313:5315 Poly <> nil constr
R5325:5328 Poly <> cons constr
R5335:5337 Poly <> nil constr
R5339:5339 Poly <> X var
R5332:5332 Poly <> v var
R5330:5330 Poly <> X var
R5346:5349 Poly <> cons constr
R5358:5361 Poly <> cons constr
R5368:5371 Poly <> snoc def
R5377:5377 Poly <> v var
R5373:5373 Poly <> X var
R5363:5363 Poly <> X var
R5404:5407 Poly <> snoc def
R5414:5416 Poly <> nil constr
R5418:5420 Coq.Init.Datatypes <> nat ind
R5409:5411 Coq.Init.Datatypes <> nat ind
R5443:5446 Poly <> snoc def
R5453:5456 Poly <> snoc def
R5463:5466 Poly <> cons constr
R5475:5477 Poly <> nil constr
R5479:5481 Coq.Init.Datatypes <> nat ind
R5468:5470 Coq.Init.Datatypes <> nat ind
R5458:5460 Coq.Init.Datatypes <> nat ind
R5448:5450 Coq.Init.Datatypes <> nat ind
def 5501:5503 <> rev
R5517:5520 Poly <> list ind
R5522:5522 Poly <> X var
R5527:5530 Poly <> list ind
R5532:5532 Poly <> X var
R5545:5545 Poly <> l var
R5556:5558 Poly <> nil constr
R5568:5570 Poly <> nil constr
R5572:5572 Poly <> X var
R5578:5581 Poly <> cons constr
R5590:5593 Poly <> snoc def
R5598:5600 Poly <> rev def
R5602:5602 Poly <> X var
R5595:5595 Poly <> X var
def 5625:5633 <> test_rev1
R5684:5689 Coq.Init.Logic <> :type_scope:x_'='_x not
R5723:5723 Coq.Init.Logic <> :type_scope:x_'='_x not
R5641:5643 Poly <> rev def
R5650:5653 Poly <> cons constr
R5662:5665 Poly <> cons constr
R5674:5676 Poly <> nil constr
R5678:5680 Coq.Init.Datatypes <> nat ind
R5667:5669 Coq.Init.Datatypes <> nat ind
R5655:5657 Coq.Init.Datatypes <> nat ind
R5645:5647 Coq.Init.Datatypes <> nat ind
R5690:5693 Poly <> cons constr
R5702:5705 Poly <> cons constr
R5714:5716 Poly <> nil constr
R5718:5720 Coq.Init.Datatypes <> nat ind
R5707:5709 Coq.Init.Datatypes <> nat ind
R5695:5697 Coq.Init.Datatypes <> nat ind
def 5769:5777 <> test_rev2
R5801:5803 Coq.Init.Logic <> :type_scope:x_'='_x not
R5782:5784 Poly <> rev def
R5792:5794 Poly <> nil constr
R5796:5799 Basics <> bool ind
R5786:5789 Basics <> bool ind
R5804:5806 Poly <> nil constr
R5808:5811 Basics <> bool ind
R5865:5868 Poly <> cons constr
R5881:5883 Poly <> rev def
R5891:5893 Poly <> nil constr
R5895:5898 Basics <> bool ind
R5885:5888 Basics <> bool ind
R5875:5878 Basics <> true constr
R5870:5873 Basics <> bool ind
mod 5911:5919 <> MumbleBaz
ind 6042:6047 MumbleBaz mumble
constr 6063:6063 MumbleBaz a
constr 6078:6078 MumbleBaz b
constr 6110:6110 MumbleBaz c
R6067:6072 Poly <> mumble ind
R6099:6104 Poly <> mumble ind
R6092:6094 Coq.Init.Datatypes <> nat ind
R6082:6087 Poly <> mumble ind
R6114:6119 Poly <> mumble ind
ind 6132:6138 MumbleBaz grumble
constr 6163:6163 MumbleBaz d
constr 6191:6191 MumbleBaz e
R6177:6183 Poly <> grumble ind
R6167:6172 Poly MumbleBaz mumble ind
R6200:6206 Poly <> grumble ind
ind 6603:6605 MumbleBaz baz
constr 6622:6622 MumbleBaz x
constr 6642:6642 MumbleBaz y
R6633:6635 Poly <> baz ind
R6626:6628 Poly <> baz ind
R6661:6663 Poly <> baz ind
R6653:6656 Basics <> bool ind
R6646:6648 Poly <> baz ind
R6818:6826 Poly <> <> mod
def 7089:7092 <> app'
R7104:7107 Poly <> list ind
R7109:7109 Poly <> X var
R7122:7123 Poly <> l1 var
R7134:7136 Poly <> nil constr
R7146:7147 Poly <> l2 var
R7153:7156 Poly <> cons constr
R7165:7168 Poly <> cons constr
R7175:7178 Poly <> app' def
R7184:7185 Poly <> l2 var
R7180:7180 Poly <> X var
R7170:7170 Poly <> X var
R7275:7278 Poly <> app' def
R7342:7344 Poly <> app def
def 9989:9995 <> length'
R10009:10012 Poly <> list ind
R10014:10014 Poly <> X var
R10019:10021 Coq.Init.Datatypes <> nat ind
R10034:10034 Poly <> l var
R10045:10047 Poly <> nil constr
R10063:10066 Poly <> cons constr
R10075:10075 Coq.Init.Datatypes <> S constr
R10078:10084 Poly <> length' def
def 10373:10379 <> list123
R10386:10389 Poly <> cons constr
R10398:10401 Poly <> cons constr
R10410:10413 Poly <> cons constr
R10422:10424 Poly <> nil constr
R10426:10428 Coq.Init.Datatypes <> nat ind
R10415:10417 Coq.Init.Datatypes <> nat ind
R10403:10405 Coq.Init.Datatypes <> nat ind
R10391:10393 Coq.Init.Datatypes <> nat ind
def 10502:10509 <> list123'
R10514:10517 Poly <> cons constr
R10524:10527 Poly <> cons constr
R10534:10537 Poly <> cons constr
R10544:10546 Poly <> nil constr
R11032:11034 Poly <> nil constr
R11032:11034 Poly <> nil constr
R11051:11054 Poly <> cons constr
R11051:11054 Poly <> cons constr
R11136:11141 Poly <> length def
R11136:11141 Poly <> length def
R11160:11162 Poly <> app def
R11160:11162 Poly <> app def
R11185:11187 Poly <> rev def
R11185:11187 Poly <> rev def
R11207:11210 Poly <> snoc def
R11207:11210 Poly <> snoc def
def 11272:11280 <> list123''
R11285:11288 Poly <> cons constr
R11293:11296 Poly <> cons constr
R11301:11304 Poly <> cons constr
R11308:11310 Poly <> nil constr
R11322:11327 Poly <> length def
R11329:11337 Poly <> list123'' def
def 11531:11538 <> length''
R11552:11555 Poly <> list ind
R11557:11557 Poly <> X var
R11562:11564 Coq.Init.Datatypes <> nat ind
R11577:11577 Poly <> l var
R11588:11590 Poly <> nil constr
R11606:11609 Poly <> cons constr
R11618:11618 Coq.Init.Datatypes <> S constr
R11621:11628 Poly <> length'' def
def 12655:12659 <> mynil
R12663:12666 Poly <> list ind
R12668:12670 Coq.Init.Datatypes <> nat ind
R12675:12677 Poly <> nil constr
R12806:12808 Poly <> nil constr
R12819:12821 Poly <> nil constr
R12823:12825 Coq.Init.Datatypes <> nat ind
def 12840:12845 <> mynil'
R12851:12853 Poly <> nil constr
R12855:12857 Coq.Init.Datatypes <> nat ind
R13150:13153 Poly <> cons constr
not 13137 <> ::x_'::'_x
R13235:13237 Poly <> nil constr
not 13226 <> ::'['_']'
R13270:13273 Poly <> cons constr
R13281:13284 Poly <> cons constr
R13288:13289 Poly <> ::'['_']' not
not 13249 <> ::'['_x_';'_'..'_';'_x_']'
R13319:13321 Poly <> app def
not 13306 <> ::x_'++'_x
R13466:13469 Poly <> ::x_'++'_x not
R13449:13449 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13465:13465 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13450:13453 Basics <> andb def
R13460:13464 Basics <> false constr
R13455:13458 Basics <> true constr
R13470:13472 Poly <> nil constr
def 13487:13496 <> list123'''
R13501:13501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13503:13504 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13506:13507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13509:13509 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13862:13867 <> repeat
R13885:13885 Poly <> X var
R13897:13899 Coq.Init.Datatypes <> nat ind
R13904:13907 Poly <> list ind
R13909:13909 Poly <> X var
R13920:13924 Poly <> count var
R13933:13933 Coq.Init.Datatypes <> O constr
R13938:13940 Poly <> nil constr
R13944:13944 Coq.Init.Datatypes <> S constr
R13956:13959 Poly <> cons constr
R13964:13969 Poly <> repeat def
R13971:13971 Poly <> n var
R13961:13961 Poly <> n var
def 13995:14006 <> test_repeat1
R14024:14026 Coq.Init.Logic <> :type_scope:x_'='_x not
R14011:14016 Poly <> repeat def
R14018:14021 Basics <> true constr
R14027:14030 Poly <> cons constr
R14038:14041 Poly <> cons constr
R14048:14050 Poly <> nil constr
R14043:14046 Basics <> true constr
R14032:14035 Basics <> true constr
prf 14097:14103 <> nil_app
R14131:14134 Poly <> list ind
R14136:14136 Poly <> X var
R14149:14151 Coq.Init.Logic <> :type_scope:x_'='_x not
R14141:14143 Poly <> app def
R14148:14148 Poly <> l var
R14145:14146 Poly <> ::'['_']' not
R14152:14152 Poly <> l var
prf 14198:14205 <> rev_snoc
R14258:14258 Poly <> X var
R14293:14296 Poly <> list ind
R14298:14298 Poly <> X var
R14317:14319 Coq.Init.Logic <> :type_scope:x_'='_x not
R14303:14305 Poly <> rev def
R14308:14311 Poly <> snoc def
R14315:14315 Poly <> v var
R14313:14313 Poly <> s var
R14321:14325 Poly <> ::x_'::'_x not
R14331:14331 Poly <> ::x_'::'_x not
R14320:14320 Poly <> v var
R14326:14328 Poly <> rev def
R14330:14330 Poly <> s var
prf 14510:14523 <> rev_involutive
R14555:14558 Poly <> list ind
R14560:14560 Poly <> X var
R14576:14578 Coq.Init.Logic <> :type_scope:x_'='_x not
R14565:14567 Poly <> rev def
R14570:14572 Poly <> rev def
R14574:14574 Poly <> l var
R14579:14579 Poly <> l var
R14712:14719 Poly <> rev_snoc thm
R14712:14719 Poly <> rev_snoc thm
prf 14770:14785 <> snoc_with_append
R14846:14849 Poly <> list ind
R14851:14851 Poly <> X var
R14890:14890 Poly <> X var
R14912:14914 Coq.Init.Logic <> :type_scope:x_'='_x not
R14895:14898 Poly <> snoc def
R14911:14911 Poly <> v var
R14903:14906 Poly <> ::x_'++'_x not
R14901:14902 Poly <> l1 var
R14907:14908 Poly <> l2 var
R14917:14921 Poly <> ::x_'++'_x not
R14931:14931 Poly <> ::x_'++'_x not
R14915:14916 Poly <> l1 var
R14922:14925 Poly <> snoc def
R14930:14930 Poly <> v var
R14927:14928 Poly <> l2 var
ind 15397:15400 <> prod
constr 15427:15430 <> pair
R15444:15447 Poly <> prod ind
R15465:15468 Poly <> pair constr
R15465:15468 Poly <> pair constr
R15615:15618 Poly <> pair constr
not 15599 <> ::'('_x_','_x_')'
R15751:15754 Poly <> prod ind
not 15739 <> :type_scope:x_'*'_x
def 16377:16379 <> fst
R16400:16402 Poly <> :type_scope:x_'*'_x not
R16399:16399 Poly <> X var
R16403:16403 Poly <> Y var
R16408:16408 Poly <> X var
R16421:16421 Poly <> p var
R16428:16428 Poly <> ::'('_x_','_x_')' not
R16430:16430 Poly <> ::'('_x_','_x_')' not
R16432:16432 Poly <> ::'('_x_','_x_')' not
def 16456:16458 <> snd
R16479:16481 Poly <> :type_scope:x_'*'_x not
R16478:16478 Poly <> X var
R16482:16482 Poly <> Y var
R16487:16487 Poly <> Y var
R16500:16500 Poly <> p var
R16507:16507 Poly <> ::'('_x_','_x_')' not
R16509:16509 Poly <> ::'('_x_','_x_')' not
R16511:16511 Poly <> ::'('_x_','_x_')' not
def 16852:16858 <> combine
R16879:16882 Poly <> list ind
R16884:16884 Poly <> X var
R16893:16896 Poly <> list ind
R16898:16898 Poly <> Y var
R16914:16917 Poly <> list ind
R16921:16921 Poly <> :type_scope:x_'*'_x not
R16920:16920 Poly <> X var
R16922:16922 Poly <> Y var
R16936:16936 Poly <> ::'('_x_','_x_')' not
R16939:16939 Poly <> ::'('_x_','_x_')' not
R16942:16942 Poly <> ::'('_x_','_x_')' not
R16937:16938 Poly <> lx var
R16940:16941 Poly <> ly var
R16953:16953 Poly <> ::'('_x_','_x_')' not
R16956:16956 Poly <> ::'('_x_','_x_')' not
R16958:16958 Poly <> ::'('_x_','_x_')' not
R16954:16955 Poly <> ::'['_']' not
R16963:16964 Poly <> ::'['_']' not
R16970:16970 Poly <> ::'('_x_','_x_')' not
R16972:16972 Poly <> ::'('_x_','_x_')' not
R16975:16975 Poly <> ::'('_x_','_x_')' not
R16973:16974 Poly <> ::'['_']' not
R16980:16981 Poly <> ::'['_']' not
R16987:16987 Poly <> ::'('_x_','_x_')' not
R16993:16994 Poly <> ::'('_x_','_x_')' not
R17000:17000 Poly <> ::'('_x_','_x_')' not
R16989:16990 Poly <> ::x_'::'_x not
R16996:16997 Poly <> ::x_'::'_x not
R17010:17014 Poly <> ::x_'::'_x not
R17028:17028 Poly <> ::x_'::'_x not
R17005:17005 Poly <> ::'('_x_','_x_')' not
R17007:17007 Poly <> ::'('_x_','_x_')' not
R17009:17009 Poly <> ::'('_x_','_x_')' not
R17015:17021 Poly <> combine def
def 17738:17742 <> split
R17773:17776 Poly <> list ind
R17780:17780 Poly <> :type_scope:x_'*'_x not
R17779:17779 Poly <> X var
R17781:17781 Poly <> Y var
R17798:17798 Poly <> :type_scope:x_'*'_x not
R17805:17809 Poly <> :type_scope:x_'*'_x not
R17816:17816 Poly <> :type_scope:x_'*'_x not
R17799:17802 Poly <> list ind
R17804:17804 Poly <> X var
R17810:17813 Poly <> list ind
R17815:17815 Poly <> Y var
R17829:17829 Poly <> l var
R17842:17844 Poly <> nil constr
R17849:17849 Poly <> ::'('_x_','_x_')' not
R17852:17853 Poly <> ::'('_x_','_x_')' not
R17856:17856 Poly <> ::'('_x_','_x_')' not
R17850:17851 Poly <> ::'['_']' not
R17854:17855 Poly <> ::'['_']' not
R17870:17873 Poly <> ::x_'::'_x not
R17864:17864 Poly <> ::'('_x_','_x_')' not
R17866:17867 Poly <> ::'('_x_','_x_')' not
R17869:17869 Poly <> ::'('_x_','_x_')' not
R17895:17899 Poly <> split def
R17927:17927 Poly <> ::'('_x_','_x_')' not
R17935:17936 Poly <> ::'('_x_','_x_')' not
R17944:17944 Poly <> ::'('_x_','_x_')' not
R17929:17932 Poly <> ::x_'::'_x not
R17933:17934 Poly <> xs var
R17938:17941 Poly <> ::x_'::'_x not
R17942:17943 Poly <> ys var
def 17962:17971 <> test_split
R18003:18005 Coq.Init.Logic <> :type_scope:x_'='_x not
R17976:17980 Poly <> split def
R17982:17982 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17992:17992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18002:18002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17993:17993 Poly <> ::'('_x_','_x_')' not
R17995:17995 Poly <> ::'('_x_','_x_')' not
R18001:18001 Poly <> ::'('_x_','_x_')' not
R17996:18000 Basics <> false constr
R17983:17983 Poly <> ::'('_x_','_x_')' not
R17985:17985 Poly <> ::'('_x_','_x_')' not
R17991:17991 Poly <> ::'('_x_','_x_')' not
R17986:17990 Basics <> false constr
R18006:18006 Poly <> ::'('_x_','_x_')' not
R18012:18012 Poly <> ::'('_x_','_x_')' not
R18026:18026 Poly <> ::'('_x_','_x_')' not
R18007:18007 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18009:18009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18011:18011 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18013:18013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18019:18019 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18025:18025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18020:18024 Basics <> false constr
R18014:18018 Basics <> false constr
ind 18334:18339 <> option
constr 18364:18367 <> Some
constr 18389:18392 <> None
R18376:18381 Poly <> option ind
R18396:18401 Poly <> option ind
R18417:18420 Poly <> Some constr
R18417:18420 Poly <> Some constr
R18440:18443 Poly <> None constr
R18440:18443 Poly <> None constr
def 18565:18569 <> index
R18587:18589 Coq.Init.Datatypes <> nat ind
R18612:18615 Poly <> list ind
R18617:18617 Poly <> X var
R18622:18627 Poly <> option ind
R18629:18629 Poly <> X var
R18642:18642 Poly <> l var
R18653:18654 Poly <> ::'['_']' not
R18659:18662 Poly <> None constr
R18669:18672 Poly <> ::x_'::'_x not
R18682:18688 Basics <> beq_nat def
R18692:18692 Coq.Init.Datatypes <> O constr
R18690:18690 Poly <> n var
R18711:18715 Poly <> index def
R18718:18721 Coq.Init.Peano <> pred def
R18723:18723 Poly <> n var
R18699:18702 Poly <> Some constr
def 18745:18755 <> test_index1
R18779:18782 Coq.Init.Logic <> :type_scope:x_'='_x not
R18762:18766 Poly <> index def
R18770:18770 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18772:18772 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18774:18774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18776:18776 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18778:18778 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18783:18786 Poly <> Some constr
def 18825:18835 <> test_index2
R18860:18863 Coq.Init.Logic <> :type_scope:x_'='_x not
R18842:18846 Poly <> index def
R18851:18851 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18855:18855 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18859:18859 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18856:18856 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18858:18858 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18852:18852 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18854:18854 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18864:18867 Poly <> Some constr
R18869:18869 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18871:18871 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18908:18918 <> test_index3
R18940:18943 Coq.Init.Logic <> :type_scope:x_'='_x not
R18925:18929 Poly <> index def
R18934:18934 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18939:18939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18935:18938 Basics <> true constr
R18944:18947 Poly <> None constr
def 19200:19205 <> hd_opt
R19223:19226 Poly <> list ind
R19228:19228 Poly <> X var
R19234:19239 Poly <> option ind
R19241:19241 Poly <> X var
R19267:19271 Basics <> admit prfax
R19402:19407 Poly <> hd_opt def
def 19419:19430 <> test_hd_opt1
R19447:19449 Coq.Init.Logic <> :type_scope:x_'='_x not
R19435:19440 Poly <> hd_opt def
R19442:19442 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19444:19444 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19446:19446 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19450:19453 Poly <> Some constr
def 19496:19507 <> test_hd_opt2
R19530:19533 Coq.Init.Logic <> :type_scope:x_'='_x not
R19513:19518 Poly <> hd_opt def
R19521:19521 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19525:19525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19529:19529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19526:19526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19528:19528 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19522:19522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19524:19524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19534:19537 Poly <> Some constr
R19539:19539 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19541:19541 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 20199:20208 <> doit3times
R20225:20225 Poly <> X var
R20222:20222 Poly <> X var
R20231:20231 Poly <> X var
R20236:20236 Poly <> X var
R20243:20243 Poly <> f var
R20246:20246 Poly <> f var
R20249:20249 Poly <> f var
R20251:20251 Poly <> n var
R20410:20419 Poly <> doit3times def
def 20491:20505 <> test_doit3times
R20529:20531 Coq.Init.Logic <> :type_scope:x_'='_x not
R20508:20517 Poly <> doit3times def
R20519:20526 Basics <> minustwo def
def 20570:20585 <> test_doit3times'
R20608:20610 Coq.Init.Logic <> :type_scope:x_'='_x not
R20588:20597 Poly <> doit3times def
R20604:20607 Basics <> true constr
R20599:20602 Basics <> negb def
R20611:20615 Basics <> false constr
R20909:20912 Coq.Init.Peano <> plus def
def 21634:21638 <> plus3
R21643:21646 Coq.Init.Peano <> plus def
R21657:21661 Poly <> plus3 def
def 21673:21682 <> test_plus3
R21696:21698 Coq.Init.Logic <> :type_scope:x_'='_x not
R21689:21693 Poly <> plus3 def
def 21736:21746 <> test_plus3'
R21770:21772 Coq.Init.Logic <> :type_scope:x_'='_x not
R21752:21761 Poly <> doit3times def
R21763:21767 Poly <> plus3 def
def 21810:21821 <> test_plus3''
R21847:21849 Coq.Init.Logic <> :type_scope:x_'='_x not
R21826:21835 Poly <> doit3times def
R21838:21841 Coq.Init.Peano <> plus def
def 22774:22783 <> prod_curry
R22816:22816 Poly <> Z var
R22808:22810 Poly <> :type_scope:x_'*'_x not
R22807:22807 Poly <> X var
R22811:22811 Poly <> Y var
R22824:22824 Poly <> X var
R22832:22832 Poly <> Y var
R22837:22837 Poly <> Z var
R22842:22842 Poly <> f var
R22844:22844 Poly <> ::'('_x_','_x_')' not
R22846:22847 Poly <> ::'('_x_','_x_')' not
R22849:22849 Poly <> ::'('_x_','_x_')' not
R22845:22845 Poly <> x var
R22848:22848 Poly <> y var
def 22995:23006 <> prod_uncurry
R23040:23040 Poly <> Z var
R23035:23035 Poly <> Y var
R23030:23030 Poly <> X var
R23049:23051 Poly <> :type_scope:x_'*'_x not
R23048:23048 Poly <> X var
R23052:23052 Poly <> Y var
R23057:23057 Poly <> Z var
R23062:23062 Poly <> f var
R23073:23075 Poly <> snd def
R23077:23077 Poly <> p var
R23065:23067 Poly <> fst def
R23069:23069 Poly <> p var
R23216:23225 Poly <> prod_curry def
R23235:23246 Poly <> prod_uncurry def
prf 23258:23270 <> uncurry_curry
R23311:23311 Poly <> Z var
R23306:23306 Poly <> Y var
R23301:23301 Poly <> X var
R23352:23354 Coq.Init.Logic <> :type_scope:x_'='_x not
R23321:23330 Poly <> prod_curry def
R23351:23351 Poly <> y var
R23349:23349 Poly <> x var
R23333:23344 Poly <> prod_uncurry def
R23346:23346 Poly <> f var
R23355:23355 Poly <> f var
R23359:23359 Poly <> y var
R23357:23357 Poly <> x var
R23378:23389 Poly <> prod_uncurry def
R23399:23408 Poly <> prod_curry def
prf 23685:23697 <> curry_uncurry
R23770:23770 Poly <> Z var
R23761:23763 Poly <> :type_scope:x_'*'_x not
R23760:23760 Poly <> X var
R23764:23764 Poly <> Y var
R23779:23781 Poly <> :type_scope:x_'*'_x not
R23778:23778 Poly <> X var
R23782:23782 Poly <> Y var
R23817:23819 Coq.Init.Logic <> :type_scope:x_'='_x not
R23788:23799 Poly <> prod_uncurry def
R23816:23816 Poly <> p var
R23802:23811 Poly <> prod_curry def
R23813:23813 Poly <> f var
R23820:23820 Poly <> f var
R23822:23822 Poly <> p var
ind 23894:23895 <> f1
constr 23920:23920 <> Y
R23921:23921 Poly <> f1 ind
R23929:23930 Poly <> f1 ind
def 24477:24482 <> filter
R24503:24506 Basics <> bool ind
R24500:24500 Poly <> X var
R24512:24515 Poly <> list ind
R24517:24517 Poly <> X var
R24539:24542 Poly <> list ind
R24544:24544 Poly <> X var
R24558:24558 Poly <> l var
R24569:24570 Poly <> ::'['_']' not
R24579:24580 Poly <> ::'['_']' not
R24587:24590 Poly <> ::x_'::'_x not
R24599:24602 Poly <> test var
R24667:24672 Poly <> filter def
R24674:24677 Poly <> test var
R24612:24616 Poly <> ::x_'::'_x not
R24630:24630 Poly <> ::x_'::'_x not
R24617:24622 Poly <> filter def
R24624:24627 Poly <> test var
def 24858:24869 <> test_filter1
R24894:24896 Coq.Init.Logic <> :type_scope:x_'='_x not
R24872:24877 Poly <> filter def
R24885:24885 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24887:24887 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24889:24889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24891:24891 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24893:24893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24879:24883 Basics <> evenb def
R24897:24897 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24899:24899 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24901:24901 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24953:24963 <> length_is_1
R24981:24984 Poly <> list ind
R24986:24986 Poly <> X var
R24991:24994 Basics <> bool ind
R25001:25007 Basics <> beq_nat def
R25010:25015 Poly <> length def
R25017:25017 Poly <> l var
def 25032:25043 <> test_filter2
R25118:25122 Coq.Init.Logic <> :type_scope:x_'='_x not
R25050:25055 Poly <> filter def
R25080:25081 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25088:25089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25093:25094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25098:25099 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25107:25108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25111:25112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25116:25117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25113:25113 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25115:25115 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25109:25110 Poly <> ::'['_']' not
R25100:25100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25102:25102 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25104:25104 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25106:25106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25095:25095 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25097:25097 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25090:25090 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25092:25092 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25082:25082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25084:25085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25087:25087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25057:25067 Poly <> length_is_1 def
R25123:25124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25128:25129 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25133:25134 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25138:25139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25135:25135 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25137:25137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25130:25130 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25132:25132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25125:25125 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25127:25127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25310:25325 <> countoddmembers'
R25330:25333 Poly <> list ind
R25335:25337 Coq.Init.Datatypes <> nat ind
R25342:25344 Coq.Init.Datatypes <> nat ind
R25351:25356 Poly <> length def
R25359:25364 Poly <> filter def
R25371:25371 Poly <> l var
R25366:25369 Basics <> oddb def
def 25384:25405 <> test_countoddmembers'1
R25440:25442 Coq.Init.Logic <> :type_scope:x_'='_x not
R25410:25425 Poly <> countoddmembers' def
R25427:25427 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25429:25429 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25431:25431 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25433:25433 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25435:25435 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25437:25437 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25439:25439 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25480:25501 <> test_countoddmembers'2
R25530:25532 Coq.Init.Logic <> :type_scope:x_'='_x not
R25506:25521 Poly <> countoddmembers' def
R25523:25523 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25525:25525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25527:25527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25529:25529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25570:25591 <> test_countoddmembers'3
R25616:25618 Coq.Init.Logic <> :type_scope:x_'='_x not
R25596:25611 Poly <> countoddmembers' def
R25613:25615 Poly <> nil constr
def 26485:26498 <> test_anon_fun'
R26532:26534 Coq.Init.Logic <> :type_scope:x_'='_x not
R26503:26512 Poly <> doit3times def
R26525:26527 Basics <> :nat_scope:x_'*'_x not
R26524:26524 Poly <> n var
R26528:26528 Poly <> n var
def 26671:26683 <> test_filter2'
R26778:26782 Coq.Init.Logic <> :type_scope:x_'='_x not
R26690:26695 Poly <> filter def
R26740:26741 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26748:26749 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26753:26754 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26758:26759 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26767:26768 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26771:26772 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26776:26777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26773:26773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26775:26775 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26769:26770 Poly <> ::'['_']' not
R26760:26760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26762:26762 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26764:26764 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26766:26766 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26755:26755 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26757:26757 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26750:26750 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26752:26752 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26742:26742 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26744:26745 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26747:26747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26707:26713 Basics <> beq_nat def
R26716:26721 Poly <> length def
R26723:26723 Poly <> l var
R26783:26784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26788:26789 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26793:26794 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26798:26799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26795:26795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26797:26797 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26790:26790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26792:26792 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26785:26785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26787:26787 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27102:27116 <> filter_even_gt7
R27123:27126 Poly <> list ind
R27128:27130 Coq.Init.Datatypes <> nat ind
R27135:27138 Poly <> list ind
R27140:27142 Coq.Init.Datatypes <> nat ind
R27168:27172 Basics <> admit prfax
def 27184:27205 <> test_filter_even_gt7_1
R27246:27248 Coq.Init.Logic <> :type_scope:x_'='_x not
R27211:27225 Poly <> filter_even_gt7 def
R27227:27227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27229:27229 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27231:27231 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27233:27233 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27235:27235 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27238:27238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27240:27240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27243:27243 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27245:27245 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27249:27249 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27252:27252 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27255:27255 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27257:27257 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27299:27320 <> test_filter_even_gt7_2
R27356:27358 Coq.Init.Logic <> :type_scope:x_'='_x not
R27326:27340 Poly <> filter_even_gt7 def
R27342:27342 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27344:27344 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27346:27346 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27348:27348 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27351:27351 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27355:27355 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27359:27360 Poly <> ::'['_']' not
def 28014:28022 <> partition
R28048:28051 Basics <> bool ind
R28043:28043 Poly <> X var
R28059:28062 Poly <> list ind
R28064:28064 Poly <> X var
R28096:28098 Poly <> :type_scope:x_'*'_x not
R28090:28093 Poly <> list ind
R28095:28095 Poly <> X var
R28099:28102 Poly <> list ind
R28104:28104 Poly <> X var
R28128:28132 Basics <> admit prfax
def 28144:28158 <> test_partition1
R28187:28189 Coq.Init.Logic <> :type_scope:x_'='_x not
R28161:28169 Poly <> partition def
R28176:28176 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28178:28178 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28180:28180 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28182:28182 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28184:28184 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28186:28186 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28171:28174 Basics <> oddb def
R28190:28190 Poly <> ::'('_x_','_x_')' not
R28198:28199 Poly <> ::'('_x_','_x_')' not
R28205:28205 Poly <> ::'('_x_','_x_')' not
R28191:28191 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28193:28193 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28195:28195 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28197:28197 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28200:28200 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28202:28202 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28204:28204 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28245:28259 <> test_partition2
R28296:28298 Coq.Init.Logic <> :type_scope:x_'='_x not
R28262:28270 Poly <> partition def
R28289:28289 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28291:28291 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28293:28293 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28295:28295 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28282:28286 Basics <> false constr
R28299:28299 Poly <> ::'('_x_','_x_')' not
R28302:28303 Poly <> ::'('_x_','_x_')' not
R28311:28311 Poly <> ::'('_x_','_x_')' not
R28300:28301 Poly <> ::'['_']' not
R28304:28304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28306:28306 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28308:28308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28310:28310 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28500:28502 <> map
R28521:28521 Poly <> Y var
R28518:28518 Poly <> X var
R28527:28530 Poly <> list ind
R28532:28532 Poly <> X var
R28551:28554 Poly <> list ind
R28556:28556 Poly <> Y var
R28570:28570 Poly <> l var
R28581:28582 Poly <> ::'['_']' not
R28591:28592 Poly <> ::'['_']' not
R28599:28602 Poly <> ::x_'::'_x not
R28608:28608 Poly <> ::x_'::'_x not
R28612:28617 Poly <> ::x_'::'_x not
R28625:28625 Poly <> ::x_'::'_x not
R28609:28609 Poly <> f var
R28618:28620 Poly <> map def
R28622:28622 Poly <> f var
def 28853:28861 <> test_map1
R28884:28886 Coq.Init.Logic <> :type_scope:x_'='_x not
R28864:28866 Poly <> map def
R28877:28877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28879:28879 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28881:28881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28883:28883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28869:28872 Coq.Init.Peano <> plus def
R28887:28887 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28889:28889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28891:28891 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28893:28893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29202:29210 <> test_map2
R29231:29233 Coq.Init.Logic <> :type_scope:x_'='_x not
R29213:29215 Poly <> map def
R29222:29222 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29224:29224 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29226:29226 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29228:29228 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29230:29230 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29217:29220 Basics <> oddb def
R29234:29234 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29240:29240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29245:29245 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29251:29251 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29256:29256 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29252:29255 Basics <> true constr
R29246:29250 Basics <> false constr
R29241:29244 Basics <> true constr
R29235:29239 Basics <> false constr
def 29443:29451 <> test_map3
R29499:29503 Coq.Init.Logic <> :type_scope:x_'='_x not
R29458:29460 Poly <> map def
R29490:29490 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29492:29492 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29494:29494 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29496:29496 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29498:29498 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29472:29472 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29480:29480 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29487:29487 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29481:29484 Basics <> oddb def
R29486:29486 Poly <> n var
R29473:29477 Basics <> evenb def
R29479:29479 Poly <> n var
R29504:29504 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29517:29517 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29530:29530 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29543:29543 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29556:29556 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29544:29544 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29550:29550 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29555:29555 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29551:29554 Basics <> true constr
R29545:29549 Basics <> false constr
R29531:29531 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29536:29536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29542:29542 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29537:29541 Basics <> false constr
R29532:29535 Basics <> true constr
R29518:29518 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29524:29524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29529:29529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29525:29528 Basics <> true constr
R29519:29523 Basics <> false constr
R29505:29505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29510:29510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29516:29516 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29511:29515 Basics <> false constr
R29506:29509 Basics <> true constr
prf 29752:29763 <> map_revLemma
R29796:29796 Poly <> Y var
R29791:29791 Poly <> X var
R29804:29807 Poly <> list ind
R29809:29809 Poly <> X var
R29817:29817 Poly <> X var
R29839:29841 Coq.Init.Logic <> :type_scope:x_'='_x not
R29823:29825 Poly <> map def
R29830:29833 Poly <> snoc def
R29837:29837 Poly <> n var
R29835:29835 Poly <> l var
R29827:29827 Poly <> f var
R29842:29845 Poly <> snoc def
R29858:29858 Poly <> f var
R29860:29860 Poly <> n var
R29848:29850 Poly <> map def
R29854:29854 Poly <> l var
R29852:29852 Poly <> f var
prf 30029:30035 <> map_rev
R30069:30069 Poly <> Y var
R30064:30064 Poly <> X var
R30077:30080 Poly <> list ind
R30082:30082 Poly <> X var
R30101:30103 Coq.Init.Logic <> :type_scope:x_'='_x not
R30088:30090 Poly <> map def
R30095:30097 Poly <> rev def
R30099:30099 Poly <> l var
R30092:30092 Poly <> f var
R30104:30106 Poly <> rev def
R30109:30111 Poly <> map def
R30115:30115 Poly <> l var
R30113:30113 Poly <> f var
R30245:30256 Poly <> map_revLemma thm
R30245:30256 Poly <> map_revLemma thm
def 30763:30770 <> flat_map
R30791:30794 Poly <> list ind
R30796:30796 Poly <> Y var
R30786:30786 Poly <> X var
R30802:30805 Poly <> list ind
R30807:30807 Poly <> X var
R30832:30835 Poly <> list ind
R30837:30837 Poly <> Y var
R30864:30868 Basics <> admit prfax
def 30880:30893 <> test_flat_map1
R30933:30937 Coq.Init.Logic <> :type_scope:x_'='_x not
R30898:30905 Poly <> flat_map def
R30926:30926 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30928:30928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30930:30930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30932:30932 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30917:30917 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30919:30919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30921:30921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30923:30923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30922:30922 Poly <> n var
R30920:30920 Poly <> n var
R30918:30918 Poly <> n var
R30938:30938 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30940:30941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30943:30944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30946:30947 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30949:30950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30952:30953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30955:30956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30958:30959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30961:30962 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30964:30964 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 31169:31178 <> option_map
R31203:31203 Poly <> Y var
R31198:31198 Poly <> X var
R31212:31217 Poly <> option ind
R31219:31219 Poly <> X var
R31246:31251 Poly <> option ind
R31253:31253 Poly <> Y var
R31266:31267 Poly <> xo var
R31280:31283 Poly <> None constr
R31288:31291 Poly <> None constr
R31299:31302 Poly <> Some constr
R31309:31312 Poly <> Some constr
R31315:31315 Poly <> f var
def 32137:32140 <> fold
R32163:32163 Poly <> Y var
R32160:32160 Poly <> Y var
R32157:32157 Poly <> X var
R32169:32172 Poly <> list ind
R32174:32174 Poly <> X var
R32180:32180 Poly <> Y var
R32185:32185 Poly <> Y var
R32198:32198 Poly <> l var
R32209:32211 Poly <> nil constr
R32216:32216 Poly <> b var
R32223:32226 Poly <> ::x_'::'_x not
R32232:32232 Poly <> f var
R32237:32240 Poly <> fold def
R32246:32246 Poly <> b var
R32242:32242 Poly <> f var
R32730:32733 Poly <> fold def
R32735:32738 Basics <> andb def
def 32800:32812 <> fold_example1
R32837:32839 Coq.Init.Logic <> :type_scope:x_'='_x not
R32816:32819 Poly <> fold def
R32826:32826 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32828:32828 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32830:32830 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32832:32832 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32834:32834 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32821:32824 Coq.Init.Peano <> mult def
def 32878:32890 <> fold_example2
R32931:32933 Coq.Init.Logic <> :type_scope:x_'='_x not
R32894:32897 Poly <> fold def
R32927:32930 Basics <> true constr
R32904:32904 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32909:32909 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32914:32914 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32920:32920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32925:32925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32921:32924 Basics <> true constr
R32915:32919 Basics <> false constr
R32910:32913 Basics <> true constr
R32905:32908 Basics <> true constr
R32899:32902 Basics <> andb def
R32934:32938 Basics <> false constr
def 32975:32987 <> fold_example3
R33022:33024 Coq.Init.Logic <> :type_scope:x_'='_x not
R32991:32994 Poly <> fold def
R33020:33021 Poly <> ::'['_']' not
R33001:33001 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33005:33005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33008:33008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33014:33014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33018:33018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33015:33015 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33017:33017 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33009:33009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33011:33011 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33013:33013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33006:33007 Poly <> ::'['_']' not
R33002:33002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33004:33004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32996:32998 Poly <> app def
R33025:33025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33027:33027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33029:33029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33031:33031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33033:33033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 33950:33957 <> constfun
R33973:33973 Poly <> X var
R33983:33983 Poly <> X var
R33978:33980 Coq.Init.Datatypes <> nat ind
R33997:33999 Coq.Init.Datatypes <> nat ind
R34005:34005 Poly <> x var
def 34020:34024 <> ftrue
R34029:34036 Poly <> constfun def
R34038:34041 Basics <> true constr
def 34053:34069 <> constfun_example1
R34080:34082 Coq.Init.Logic <> :type_scope:x_'='_x not
R34073:34077 Poly <> ftrue def
R34083:34086 Basics <> true constr
def 34123:34139 <> constfun_example2
R34158:34160 Coq.Init.Logic <> :type_scope:x_'='_x not
R34144:34151 Poly <> constfun def
def 34504:34511 <> override
R34532:34532 Poly <> X var
R34527:34529 Coq.Init.Datatypes <> nat ind
R34538:34540 Coq.Init.Datatypes <> nat ind
R34546:34546 Poly <> X var
R34556:34556 Poly <> X var
R34551:34553 Coq.Init.Datatypes <> nat ind
R34570:34572 Coq.Init.Datatypes <> nat ind
R34581:34587 Basics <> beq_nat def
R34591:34592 Poly <> k' var
R34589:34589 Poly <> k var
R34606:34606 Poly <> f var
R34608:34609 Poly <> k' var
R34599:34599 Poly <> x var
def 34808:34818 <> fmostlytrue
R34823:34830 Poly <> override def
R34859:34863 Basics <> false constr
R34833:34840 Poly <> override def
R34850:34854 Basics <> false constr
R34842:34846 Poly <> ftrue def
def 34887:34903 <> override_example1
R34920:34922 Coq.Init.Logic <> :type_scope:x_'='_x not
R34907:34917 Poly <> fmostlytrue def
R34923:34926 Basics <> true constr
def 34963:34979 <> override_example2
R34996:34998 Coq.Init.Logic <> :type_scope:x_'='_x not
R34983:34993 Poly <> fmostlytrue def
R34999:35003 Basics <> false constr
def 35040:35056 <> override_example3
R35073:35075 Coq.Init.Logic <> :type_scope:x_'='_x not
R35060:35070 Poly <> fmostlytrue def
R35076:35079 Basics <> true constr
def 35116:35132 <> override_example4
R35149:35151 Coq.Init.Logic <> :type_scope:x_'='_x not
R35136:35146 Poly <> fmostlytrue def
R35152:35156 Basics <> false constr
prf 35457:35472 <> override_example
R35486:35489 Basics <> bool ind
R35527:35529 Coq.Init.Logic <> :type_scope:x_'='_x not
R35496:35503 Poly <> override def
R35520:35523 Basics <> true constr
R35506:35513 Poly <> constfun def
R35515:35515 Poly <> b var
R35530:35530 Poly <> b var
prf 36555:36572 <> unfold_example_bad
R36616:36618 Coq.Init.Logic <> :type_scope:x_'='_x not
R36612:36614 Basics <> :nat_scope:x_'+'_x not
R36605:36609 Poly <> plus3 def
R36611:36611 Poly <> n var
R36620:36622 Basics <> :nat_scope:x_'+'_x not
R36619:36619 Poly <> m var
R36595:36597 Coq.Init.Logic <> :type_scope:x_'='_x not
R36591:36593 Basics <> :nat_scope:x_'+'_x not
R36594:36594 Poly <> n var
R36598:36598 Poly <> m var
prf 36986:36999 <> unfold_example
R37043:37045 Coq.Init.Logic <> :type_scope:x_'='_x not
R37039:37041 Basics <> :nat_scope:x_'+'_x not
R37032:37036 Poly <> plus3 def
R37038:37038 Poly <> n var
R37047:37049 Basics <> :nat_scope:x_'+'_x not
R37046:37046 Poly <> m var
R37022:37024 Coq.Init.Logic <> :type_scope:x_'='_x not
R37018:37020 Basics <> :nat_scope:x_'+'_x not
R37021:37021 Poly <> n var
R37025:37025 Poly <> m var
R37085:37089 Poly <> plus3 def
prf 37306:37316 <> override_eq
R37348:37348 Poly <> X var
R37343:37345 Coq.Init.Datatypes <> nat ind
R37372:37374 Coq.Init.Logic <> :type_scope:x_'='_x not
R37355:37362 Poly <> override def
R37368:37368 Poly <> x var
R37366:37366 Poly <> k var
R37364:37364 Poly <> f var
R37371:37371 Poly <> k var
R37375:37375 Poly <> x var
R37412:37419 Poly <> override def
R37435:37446 Induction <> beq_nat_refl prfax
R37435:37446 Induction <> beq_nat_refl prfax
prf 37644:37655 <> override_neq
R37697:37697 Poly <> X var
R37692:37694 Coq.Init.Datatypes <> nat ind
R37766:37768 Coq.Init.Logic <> :type_scope:x_'='_x not
R37746:37753 Poly <> override def
R37760:37761 Poly <> x2 var
R37757:37758 Poly <> k2 var
R37755:37755 Poly <> f var
R37764:37765 Poly <> k1 var
R37769:37770 Poly <> x1 var
R37731:37733 Coq.Init.Logic <> :type_scope:x_'='_x not
R37718:37724 Basics <> beq_nat def
R37729:37730 Poly <> k1 var
R37726:37727 Poly <> k2 var
R37734:37738 Basics <> false constr
R37707:37709 Coq.Init.Logic <> :type_scope:x_'='_x not
R37703:37703 Poly <> f var
R37705:37706 Poly <> k1 var
R37710:37711 Poly <> x1 var
def 38265:38275 <> fold_length
R38293:38296 Poly <> list ind
R38298:38298 Poly <> X var
R38303:38305 Coq.Init.Datatypes <> nat ind
R38312:38315 Poly <> fold def
R38334:38334 Poly <> l var
R38329:38329 Coq.Init.Datatypes <> S constr
R38331:38331 Poly <> n var
def 38348:38364 <> test_fold_length1
R38387:38389 Coq.Init.Logic <> :type_scope:x_'='_x not
R38368:38378 Poly <> fold_length def
R38380:38380 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38382:38382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38384:38384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38386:38386 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 38475:38493 <> fold_length_correct
R38511:38514 Poly <> list ind
R38516:38516 Poly <> X var
R38535:38537 Coq.Init.Logic <> :type_scope:x_'='_x not
R38522:38532 Poly <> fold_length def
R38534:38534 Poly <> l var
R38538:38543 Poly <> length def
R38545:38545 Poly <> l var
def 38724:38731 <> fold_map
R38754:38754 Poly <> Y var
R38749:38749 Poly <> X var
R38762:38765 Poly <> list ind
R38767:38767 Poly <> X var
R38772:38775 Poly <> list ind
R38777:38777 Poly <> Y var
R38784:38787 Poly <> fold def
R38821:38822 Poly <> ::'['_']' not
R38819:38819 Poly <> l var
R38804:38804 Poly <> ::x_'::'_x not
R38808:38812 Poly <> ::x_'::'_x not
R38805:38805 Poly <> f var
R38807:38807 Poly <> x var
R38813:38816 Poly <> rest var
prf 38942:38957 <> fold_map_correct
R38989:38989 Poly <> Y var
R38984:38984 Poly <> X var
R38997:39000 Poly <> list ind
R39002:39002 Poly <> X var
R39020:39022 Coq.Init.Logic <> :type_scope:x_'='_x not
R39008:39015 Poly <> fold_map def
R39019:39019 Poly <> l var
R39017:39017 Poly <> f var
R39023:39025 Poly <> map def
R39029:39029 Poly <> l var
R39027:39027 Poly <> f var
mod 39698:39703 <> Church
def 40048:40050 Church nat
R40090:40090 Poly <> X var
R40085:40085 Poly <> X var
R40078:40078 Poly <> X var
R40073:40073 Poly <> X var
def 40229:40231 Church one
R40235:40237 Poly Church nat def
R40270:40270 Poly <> X var
R40265:40265 Poly <> X var
R40278:40278 Poly <> X var
R40284:40284 Poly <> f var
R40286:40286 Poly <> x var
def 40355:40357 Church two
R40361:40363 Poly Church nat def
R40395:40395 Poly <> X var
R40390:40390 Poly <> X var
R40403:40403 Poly <> X var
R40409:40409 Poly <> f var
R40412:40412 Poly <> f var
R40414:40414 Poly <> x var
def 40568:40571 Church zero
R40575:40577 Poly Church nat def
R40609:40609 Poly <> X var
R40604:40604 Poly <> X var
R40617:40617 Poly <> X var
R40623:40623 Poly <> x var
def 40891:40895 Church three
R40899:40901 Poly Church nat def
R40907:40916 Poly Church doit3times def
def 41127:41130 Church succ
R41137:41139 Poly Church nat def
R41144:41146 Poly Church nat def
R41177:41177 Poly <> X var
R41172:41172 Poly <> X var
R41185:41185 Poly <> X var
R41191:41191 Poly <> f var
R41193:41193 Poly <> n var
R41199:41199 Poly <> x var
R41197:41197 Poly <> f var
R41195:41195 Poly <> X var
def 41212:41217 Church succ_1
R41230:41232 Coq.Init.Logic <> :type_scope:x_'='_x not
R41221:41224 Poly Church succ def
R41226:41229 Poly Church zero def
R41233:41235 Poly Church one def
def 41274:41279 Church succ_2
R41291:41293 Coq.Init.Logic <> :type_scope:x_'='_x not
R41283:41286 Poly Church succ def
R41288:41290 Poly Church one def
R41294:41296 Poly Church two def
def 41335:41340 Church succ_3
R41352:41354 Coq.Init.Logic <> :type_scope:x_'='_x not
R41344:41347 Poly Church succ def
R41349:41351 Poly Church two def
R41355:41359 Poly Church three def
def 41441:41444 Church plus
R41453:41455 Poly Church nat def
R41460:41462 Poly Church nat def
R41493:41493 Poly <> X var
R41488:41488 Poly <> X var
R41501:41501 Poly <> X var
R41508:41508 Poly <> n var
R41515:41515 Poly <> m var
R41521:41521 Poly <> x var
R41519:41519 Poly <> f var
R41517:41517 Poly <> X var
R41512:41512 Poly <> f var
R41510:41510 Poly <> X var
def 41536:41541 Church plus_1
R41558:41560 Coq.Init.Logic <> :type_scope:x_'='_x not
R41545:41548 Poly Church plus def
R41555:41557 Poly Church one def
R41550:41553 Poly Church zero def
R41561:41563 Poly Church one def
def 41603:41608 Church plus_2
R41626:41628 Coq.Init.Logic <> :type_scope:x_'='_x not
R41612:41615 Poly Church plus def
R41621:41625 Poly Church three def
R41617:41619 Poly Church two def
R41629:41632 Poly Church plus def
R41640:41642 Poly Church two def
R41634:41638 Poly Church three def
def 41682:41687 Church plus_3
R41718:41720 Coq.Init.Logic <> :type_scope:x_'='_x not
R41693:41696 Poly Church plus def
R41713:41717 Poly Church three def
R41699:41702 Poly Church plus def
R41708:41710 Poly Church two def
R41704:41706 Poly Church two def
R41721:41724 Poly Church plus def
R41731:41734 Poly Church plus def
R41742:41746 Poly Church three def
R41736:41740 Poly Church three def
R41726:41728 Poly Church one def
def 41813:41816 Church mult
R41825:41827 Poly Church nat def
R41832:41834 Poly Church nat def
R41865:41865 Poly <> X var
R41860:41860 Poly <> X var
R41873:41873 Poly <> X var
R41880:41880 Poly <> n var
R41892:41892 Poly <> x var
R41885:41885 Poly <> m var
R41889:41889 Poly <> f var
R41887:41887 Poly <> X var
R41882:41882 Poly <> X var
def 41905:41910 Church mult_1
R41926:41928 Coq.Init.Logic <> :type_scope:x_'='_x not
R41914:41917 Poly Church mult def
R41923:41925 Poly Church one def
R41919:41921 Poly Church one def
R41929:41931 Poly Church one def
def 41971:41976 Church mult_2
R42008:42010 Coq.Init.Logic <> :type_scope:x_'='_x not
R41980:41983 Poly Church mult def
R41991:41994 Poly Church plus def
R42002:42006 Poly Church three def
R41996:42000 Poly Church three def
R41985:41988 Poly Church zero def
R42011:42014 Poly Church zero def
def 42054:42059 Church mult_3
R42077:42079 Coq.Init.Logic <> :type_scope:x_'='_x not
R42063:42066 Poly Church mult def
R42072:42076 Poly Church three def
R42068:42070 Poly Church two def
R42080:42083 Poly Church plus def
R42091:42095 Poly Church three def
R42085:42089 Poly Church three def
def 42410:42412 Church exp
R42421:42423 Poly Church nat def
R42428:42430 Poly Church nat def
R42460:42460 Poly <> X var
R42455:42455 Poly <> X var
R42468:42468 Poly <> X var
R42476:42476 Poly <> m var
R42493:42493 Poly <> f var
R42488:42488 Poly <> n var
R42490:42490 Poly <> X var
R42484:42484 Poly <> X var
R42479:42479 Poly <> X var
R42496:42496 Poly <> x var
def 42508:42512 Church exp_1
R42527:42529 Coq.Init.Logic <> :type_scope:x_'='_x not
R42516:42518 Poly Church exp def
R42524:42526 Poly Church two def
R42520:42522 Poly Church two def
R42530:42533 Poly Church plus def
R42539:42541 Poly Church two def
R42535:42537 Poly Church two def
def 42581:42585 Church exp_2
R42602:42604 Coq.Init.Logic <> :type_scope:x_'='_x not
R42589:42591 Poly Church exp def
R42599:42601 Poly Church two def
R42593:42597 Poly Church three def
R42605:42608 Poly Church plus def
R42636:42638 Poly Church one def
R42611:42614 Poly Church mult def
R42621:42624 Poly Church mult def
R42630:42632 Poly Church two def
R42626:42628 Poly Church two def
R42616:42618 Poly Church two def
def 42678:42682 Church exp_3
R42700:42702 Coq.Init.Logic <> :type_scope:x_'='_x not
R42686:42688 Poly Church exp def
R42696:42699 Poly Church zero def
R42690:42694 Poly Church three def
R42703:42705 Poly Church one def
R42741:42746 Poly <> <> mod
