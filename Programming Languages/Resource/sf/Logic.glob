DIGEST 0955e784cc09b7198b72a0193f06a506
FLogic
R45:51 MoreCoq <> <> lib
R1156:1158 Coq.Init.Logic <> :type_scope:x_'='_x not
R1254:1256 Coq.Init.Datatypes <> nat ind
R1261:1263 Coq.Init.Logic <> :type_scope:x_'='_x not
R1260:1260 Logic <> n var
prf 2304:2307 <> test
R2330:2332 Coq.Init.Datatypes <> nat ind
R2323:2325 Coq.Init.Datatypes <> nat ind
R2340:2342 Coq.Init.Datatypes <> nat ind
R2349:2351 Coq.Init.Logic <> :type_scope:x_'='_x not
R2346:2346 Logic <> f var
R2348:2348 Logic <> x var
R2352:2352 Logic <> f var
R2354:2354 Logic <> x var
prf 2432:2436 <> test2
R2470:2470 Logic <> X var
R2463:2465 Coq.Init.Datatypes <> nat ind
R2478:2480 Coq.Init.Datatypes <> nat ind
R2487:2489 Coq.Init.Logic <> :type_scope:x_'='_x not
R2484:2484 Logic <> f var
R2486:2486 Logic <> x var
R2490:2490 Logic <> f var
R2492:2492 Logic <> x var
prf 2581:2585 <> silly
R2594:2596 Coq.Init.Logic <> :type_scope:x_'='_x not
R2590:2592 Basics <> :nat_scope:x_'*'_x not
prf 3172:3188 <> silly_implication
R3214:3216 Coq.Init.Logic <> :type_scope:x_'='_x not
R3210:3212 Basics <> :nat_scope:x_'*'_x not
R3192:3192 Coq.Init.Logic <> :type_scope:x_'='_x not
R3198:3201 Coq.Init.Logic <> :type_scope:x_'='_x not
R3194:3196 Basics <> :nat_scope:x_'+'_x not
ind 4523:4525 <> and
constr 4552:4555 <> conj
R4570:4572 Logic <> and ind
R5247:5249 Logic <> and ind
not 5234 <> :type_scope:x_'/\'_x
R5450:5453 Logic <> conj constr
prf 6228:6238 <> and_example
R6245:6245 Logic <> :type_scope:x_'/\'_x not
R6251:6256 Logic <> :type_scope:x_'/\'_x not
R6269:6269 Logic <> :type_scope:x_'/\'_x not
R6247:6249 Coq.Init.Logic <> :type_scope:x_'='_x not
R6258:6260 Coq.Init.Logic <> :type_scope:x_'='_x not
R6261:6264 Coq.Init.Peano <> mult def
R6287:6290 Logic <> conj constr
R6287:6290 Logic <> conj constr
prf 6462:6473 <> and_example'
R6480:6480 Logic <> :type_scope:x_'/\'_x not
R6486:6491 Logic <> :type_scope:x_'/\'_x not
R6504:6504 Logic <> :type_scope:x_'/\'_x not
R6482:6484 Coq.Init.Logic <> :type_scope:x_'='_x not
R6493:6495 Coq.Init.Logic <> :type_scope:x_'='_x not
R6496:6499 Coq.Init.Peano <> mult def
prf 6875:6879 <> proj1
R6915:6915 Logic <> P var
R6906:6909 Logic <> :type_scope:x_'/\'_x not
R6905:6905 Logic <> P var
R6910:6910 Logic <> Q var
prf 7042:7046 <> proj2
R7082:7082 Logic <> Q var
R7073:7076 Logic <> :type_scope:x_'/\'_x not
R7072:7072 Logic <> P var
R7077:7077 Logic <> Q var
prf 7142:7151 <> and_commut
R7188:7191 Logic <> :type_scope:x_'/\'_x not
R7187:7187 Logic <> Q var
R7192:7192 Logic <> P var
R7178:7181 Logic <> :type_scope:x_'/\'_x not
R7177:7177 Logic <> P var
R7182:7182 Logic <> Q var
prf 7352:7359 <> quiz_and
R7395:7398 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7394:7394 Logic <> P var
R7399:7399 Logic <> Q var
R7385:7388 Logic <> :type_scope:x_'/\'_x not
R7384:7384 Logic <> P var
R7389:7389 Logic <> Q var
prf 7722:7730 <> and_assoc
R7775:7775 Logic <> :type_scope:x_'/\'_x not
R7782:7786 Logic <> :type_scope:x_'/\'_x not
R7777:7780 Logic <> :type_scope:x_'/\'_x not
R7776:7776 Logic <> P var
R7781:7781 Logic <> Q var
R7787:7787 Logic <> R var
R7759:7763 Logic <> :type_scope:x_'/\'_x not
R7770:7770 Logic <> :type_scope:x_'/\'_x not
R7758:7758 Logic <> P var
R7765:7768 Logic <> :type_scope:x_'/\'_x not
R7764:7764 Logic <> Q var
R7769:7769 Logic <> R var
def 8068:8070 <> iff
R8088:8088 Logic <> :type_scope:x_'/\'_x not
R8095:8100 Logic <> :type_scope:x_'/\'_x not
R8107:8107 Logic <> :type_scope:x_'/\'_x not
R8094:8094 Logic <> Q var
R8089:8089 Logic <> P var
R8106:8106 Logic <> P var
R8101:8101 Logic <> Q var
R8134:8136 Logic <> iff def
not 8120 <> :type_scope:x_'<->'_x
prf 8244:8254 <> iff_implies
R8298:8298 Logic <> Q var
R8293:8293 Logic <> P var
R8282:8286 Logic <> :type_scope:x_'<->'_x not
R8281:8281 Logic <> P var
R8287:8287 Logic <> Q var
prf 8380:8386 <> iff_sym
R8427:8431 Logic <> :type_scope:x_'<->'_x not
R8426:8426 Logic <> Q var
R8432:8432 Logic <> P var
R8414:8418 Logic <> :type_scope:x_'<->'_x not
R8413:8413 Logic <> P var
R8419:8419 Logic <> Q var
prf 8774:8781 <> iff_refl
R8806:8810 Logic <> :type_scope:x_'<->'_x not
R8805:8805 Logic <> P var
R8811:8811 Logic <> P var
prf 8862:8870 <> iff_trans
R8926:8930 Logic <> :type_scope:x_'<->'_x not
R8925:8925 Logic <> P var
R8931:8931 Logic <> R var
R8913:8917 Logic <> :type_scope:x_'<->'_x not
R8912:8912 Logic <> Q var
R8918:8918 Logic <> R var
R8900:8904 Logic <> :type_scope:x_'<->'_x not
R8899:8899 Logic <> P var
R8905:8905 Logic <> Q var
ind 9630:9631 <> or
constr 9660:9668 <> or_introl
constr 9688:9696 <> or_intror
R9677:9678 Logic <> or ind
R9705:9706 Logic <> or ind
R9737:9738 Logic <> or ind
not 9724 <> :type_scope:x_'\/'_x
R9907:9915 Logic <> or_introl constr
R10146:10154 Logic <> or_intror constr
prf 10738:10746 <> or_commut
R10783:10786 Logic <> :type_scope:x_'\/'_x not
R10782:10782 Logic <> Q var
R10787:10787 Logic <> P var
R10772:10775 Logic <> :type_scope:x_'\/'_x not
R10771:10771 Logic <> P var
R10776:10776 Logic <> Q var
R10863:10871 Logic <> or_intror constr
R10863:10871 Logic <> or_intror constr
R10908:10916 Logic <> or_introl constr
R10908:10916 Logic <> or_introl constr
prf 11074:11083 <> or_commut'
R11120:11123 Logic <> :type_scope:x_'\/'_x not
R11119:11119 Logic <> Q var
R11124:11124 Logic <> P var
R11109:11112 Logic <> :type_scope:x_'\/'_x not
R11108:11108 Logic <> P var
R11113:11113 Logic <> Q var
prf 11264:11288 <> or_distributes_over_and_1
R11332:11332 Logic <> :type_scope:x_'/\'_x not
R11339:11344 Logic <> :type_scope:x_'/\'_x not
R11351:11351 Logic <> :type_scope:x_'/\'_x not
R11334:11337 Logic <> :type_scope:x_'\/'_x not
R11333:11333 Logic <> P var
R11338:11338 Logic <> Q var
R11346:11349 Logic <> :type_scope:x_'\/'_x not
R11345:11345 Logic <> P var
R11350:11350 Logic <> R var
R11316:11320 Logic <> :type_scope:x_'\/'_x not
R11327:11327 Logic <> :type_scope:x_'\/'_x not
R11315:11315 Logic <> P var
R11322:11325 Logic <> :type_scope:x_'/\'_x not
R11321:11321 Logic <> Q var
R11326:11326 Logic <> R var
prf 11690:11714 <> or_distributes_over_and_2
R11766:11770 Logic <> :type_scope:x_'\/'_x not
R11777:11777 Logic <> :type_scope:x_'\/'_x not
R11765:11765 Logic <> P var
R11772:11775 Logic <> :type_scope:x_'/\'_x not
R11771:11771 Logic <> Q var
R11776:11776 Logic <> R var
R11741:11741 Logic <> :type_scope:x_'/\'_x not
R11748:11753 Logic <> :type_scope:x_'/\'_x not
R11760:11760 Logic <> :type_scope:x_'/\'_x not
R11743:11746 Logic <> :type_scope:x_'\/'_x not
R11742:11742 Logic <> P var
R11747:11747 Logic <> Q var
R11755:11758 Logic <> :type_scope:x_'\/'_x not
R11754:11754 Logic <> P var
R11759:11759 Logic <> R var
prf 11903:11925 <> or_distributes_over_and
R11965:11969 Logic <> :type_scope:x_'<->'_x not
R11953:11957 Logic <> :type_scope:x_'\/'_x not
R11964:11964 Logic <> :type_scope:x_'\/'_x not
R11952:11952 Logic <> P var
R11959:11962 Logic <> :type_scope:x_'/\'_x not
R11958:11958 Logic <> Q var
R11963:11963 Logic <> R var
R11970:11970 Logic <> :type_scope:x_'/\'_x not
R11977:11982 Logic <> :type_scope:x_'/\'_x not
R11989:11989 Logic <> :type_scope:x_'/\'_x not
R11972:11975 Logic <> :type_scope:x_'\/'_x not
R11971:11971 Logic <> P var
R11976:11976 Logic <> Q var
R11984:11987 Logic <> :type_scope:x_'\/'_x not
R11983:11983 Logic <> P var
R11988:11988 Logic <> R var
prf 12655:12663 <> andb_prop
R12708:12711 Logic <> :type_scope:x_'/\'_x not
R12701:12703 Coq.Init.Logic <> :type_scope:x_'='_x not
R12700:12700 Logic <> b var
R12704:12707 Basics <> true constr
R12713:12715 Coq.Init.Logic <> :type_scope:x_'='_x not
R12712:12712 Logic <> c var
R12716:12719 Basics <> true constr
R12689:12691 Coq.Init.Logic <> :type_scope:x_'='_x not
R12681:12684 Basics <> andb def
R12688:12688 Logic <> c var
R12686:12686 Logic <> b var
R12692:12695 Basics <> true constr
R12846:12849 Logic <> conj constr
R12846:12849 Logic <> conj constr
prf 12966:12980 <> andb_true_intro
R13030:13032 Coq.Init.Logic <> :type_scope:x_'='_x not
R13022:13025 Basics <> andb def
R13029:13029 Logic <> c var
R13027:13027 Logic <> b var
R13033:13036 Basics <> true constr
R13006:13009 Logic <> :type_scope:x_'/\'_x not
R12999:13001 Coq.Init.Logic <> :type_scope:x_'='_x not
R12998:12998 Logic <> b var
R13002:13005 Basics <> true constr
R13011:13013 Coq.Init.Logic <> :type_scope:x_'='_x not
R13010:13010 Logic <> c var
R13014:13017 Basics <> true constr
prf 13206:13215 <> andb_false
R13262:13265 Logic <> :type_scope:x_'\/'_x not
R13254:13256 Coq.Init.Logic <> :type_scope:x_'='_x not
R13253:13253 Logic <> b var
R13257:13261 Basics <> false constr
R13267:13269 Coq.Init.Logic <> :type_scope:x_'='_x not
R13266:13266 Logic <> c var
R13270:13274 Basics <> false constr
R13241:13243 Coq.Init.Logic <> :type_scope:x_'='_x not
R13233:13236 Basics <> andb def
R13240:13240 Logic <> c var
R13238:13238 Logic <> b var
R13244:13248 Basics <> false constr
prf 13378:13385 <> orb_prop
R13429:13432 Logic <> :type_scope:x_'\/'_x not
R13422:13424 Coq.Init.Logic <> :type_scope:x_'='_x not
R13421:13421 Logic <> b var
R13425:13428 Basics <> true constr
R13434:13436 Coq.Init.Logic <> :type_scope:x_'='_x not
R13433:13433 Logic <> c var
R13437:13440 Basics <> true constr
R13410:13412 Coq.Init.Logic <> :type_scope:x_'='_x not
R13403:13405 Basics <> orb def
R13409:13409 Logic <> c var
R13407:13407 Logic <> b var
R13413:13416 Basics <> true constr
prf 13548:13561 <> orb_false_elim
R13607:13610 Logic <> :type_scope:x_'/\'_x not
R13599:13601 Coq.Init.Logic <> :type_scope:x_'='_x not
R13598:13598 Logic <> b var
R13602:13606 Basics <> false constr
R13612:13614 Coq.Init.Logic <> :type_scope:x_'='_x not
R13611:13611 Logic <> c var
R13615:13619 Basics <> false constr
R13586:13588 Coq.Init.Logic <> :type_scope:x_'='_x not
R13579:13581 Basics <> orb def
R13585:13585 Logic <> c var
R13583:13583 Logic <> b var
R13589:13593 Basics <> false constr
ind 13878:13882 <> False
prf 14162:14183 <> False_implies_nonsense
R14203:14205 Coq.Init.Logic <> :type_scope:x_'='_x not
R14199:14201 Basics <> :nat_scope:x_'+'_x not
R14189:14193 Logic <> False ind
prf 14687:14708 <> nonsense_implies_False
R14727:14731 Logic <> False ind
R14719:14721 Coq.Init.Logic <> :type_scope:x_'='_x not
R14715:14717 Basics <> :nat_scope:x_'+'_x not
prf 15013:15030 <> ex_falso_quodlibet
R15062:15062 Logic <> P var
R15053:15057 Logic <> False ind
def 16319:16321 <> not
R16340:16344 Logic <> False ind
R16335:16335 Logic <> P var
R16485:16487 Logic <> not def
not 16475 <> :type_scope:'~'_x
R16513:16515 Logic <> not def
prf 16892:16900 <> not_False
R16907:16908 Logic <> :type_scope:'~'_x not
R16909:16913 Logic <> False ind
R16932:16934 Logic <> not def
prf 16986:17015 <> contradiction_implies_anything
R17053:17053 Logic <> Q var
R17042:17045 Logic <> :type_scope:x_'/\'_x not
R17041:17041 Logic <> P var
R17046:17046 Logic <> :type_scope:'~'_x not
R17047:17047 Logic <> P var
R17135:17137 Logic <> not def
prf 17195:17204 <> double_neg
R17232:17232 Logic <> :type_scope:'~'_x not
R17233:17233 Logic <> :type_scope:'~'_x not
R17234:17234 Logic <> P var
R17227:17227 Logic <> P var
R17289:17291 Logic <> not def
prf 17337:17347 <> double_neg1
R17377:17377 Logic <> P var
R17370:17370 Logic <> :type_scope:'~'_x not
R17371:17371 Logic <> :type_scope:'~'_x not
R17372:17372 Logic <> P var
R17404:17406 Logic <> not def
prf 17686:17699 <> contrapositive
R17743:17743 Logic <> :type_scope:'~'_x not
R17744:17744 Logic <> P var
R17737:17737 Logic <> :type_scope:'~'_x not
R17738:17738 Logic <> Q var
R17730:17730 Logic <> Q var
R17725:17725 Logic <> P var
R17781:17783 Logic <> not def
prf 17902:17924 <> not_both_true_and_false
R17947:17949 Logic <> :type_scope:'~'_x not
R17957:17957 Logic <> :type_scope:'~'_x not
R17951:17954 Logic <> :type_scope:x_'/\'_x not
R17950:17950 Logic <> P var
R17955:17955 Logic <> :type_scope:'~'_x not
R17956:17956 Logic <> P var
prf 18409:18426 <> classic_double_neg
R18456:18456 Logic <> P var
R18449:18449 Logic <> :type_scope:'~'_x not
R18450:18450 Logic <> :type_scope:'~'_x not
R18451:18451 Logic <> P var
R18511:18513 Logic <> not def
def 19186:19191 <> peirce
R19230:19230 Logic <> P var
R19226:19226 Logic <> P var
R19222:19222 Logic <> Q var
R19219:19219 Logic <> P var
def 19244:19250 <> classic
R19280:19280 Logic <> P var
R19273:19273 Logic <> :type_scope:'~'_x not
R19274:19274 Logic <> :type_scope:'~'_x not
R19275:19275 Logic <> P var
def 19294:19308 <> excluded_middle
R19332:19335 Logic <> :type_scope:x_'\/'_x not
R19331:19331 Logic <> P var
R19336:19336 Logic <> :type_scope:'~'_x not
R19337:19337 Logic <> P var
def 19351:19371 <> de_morgan_not_and_not
R19412:19413 Logic <> :type_scope:x_'\/'_x not
R19411:19411 Logic <> P var
R19414:19414 Logic <> Q var
R19396:19397 Logic <> :type_scope:'~'_x not
R19406:19406 Logic <> :type_scope:'~'_x not
R19400:19403 Logic <> :type_scope:x_'/\'_x not
R19398:19398 Logic <> :type_scope:'~'_x not
R19399:19399 Logic <> P var
R19404:19404 Logic <> :type_scope:'~'_x not
R19405:19405 Logic <> Q var
def 19428:19440 <> implies_to_or
R19478:19479 Logic <> :type_scope:x_'\/'_x not
R19476:19476 Logic <> :type_scope:'~'_x not
R19477:19477 Logic <> P var
R19480:19480 Logic <> Q var
R19469:19469 Logic <> Q var
R19466:19466 Logic <> P var
ind 19496:19507 <> classical_ax
constr 19529:19537 <> ax_peirce
constr 19563:19572 <> ax_classic
constr 19599:19604 <> ax_exm
constr 19639:19650 <> ax_de_morgan
constr 19691:19702 <> ax_impies_or
R19541:19552 Logic <> classical_ax ind
R19554:19559 Logic <> peirce def
R19576:19587 Logic <> classical_ax ind
R19589:19595 Logic <> classic def
R19608:19619 Logic <> classical_ax ind
R19621:19635 Logic <> excluded_middle def
R19654:19665 Logic <> classical_ax ind
R19667:19687 Logic <> de_morgan_not_and_not def
R19706:19717 Logic <> classical_ax ind
R19719:19731 Logic <> implies_to_or def
prf 20197:20202 <> p_to_c
R20214:20220 Logic <> classic def
R20206:20211 Logic <> peirce def
R20239:20244 Logic <> peirce def
R20254:20260 Logic <> classic def
R20288:20290 Logic <> not def
R20321:20325 Logic <> False ind
R20321:20325 Logic <> False ind
prf 20440:20452 <> c_to_e_Helper
R20484:20484 Logic <> :type_scope:x_'/\'_x not
R20488:20493 Logic <> :type_scope:x_'/\'_x not
R20497:20497 Logic <> :type_scope:x_'/\'_x not
R20485:20486 Logic <> :type_scope:'~'_x not
R20487:20487 Logic <> P var
R20494:20495 Logic <> :type_scope:'~'_x not
R20496:20496 Logic <> Q var
R20470:20472 Logic <> :type_scope:'~'_x not
R20479:20479 Logic <> :type_scope:'~'_x not
R20474:20477 Logic <> :type_scope:x_'\/'_x not
R20473:20473 Logic <> P var
R20478:20478 Logic <> Q var
prf 20618:20623 <> c_to_e
R20636:20650 Logic <> excluded_middle def
R20627:20633 Logic <> classic def
R20669:20675 Logic <> classic def
R20685:20699 Logic <> excluded_middle def
R20745:20757 Logic <> c_to_e_Helper thm
R20745:20757 Logic <> c_to_e_Helper thm
prf 20961:20966 <> c_to_d
R20981:21001 Logic <> de_morgan_not_and_not def
R20970:20976 Logic <> classic def
R21020:21026 Logic <> classic def
R21036:21056 Logic <> de_morgan_not_and_not def
R21104:21116 Logic <> c_to_e_Helper thm
R21104:21116 Logic <> c_to_e_Helper thm
prf 21227:21232 <> e_to_c
R21255:21261 Logic <> classic def
R21236:21250 Logic <> excluded_middle def
R21280:21294 Logic <> excluded_middle def
R21304:21310 Logic <> classic def
prf 21423:21428 <> e_to_d
R21451:21471 Logic <> de_morgan_not_and_not def
R21432:21446 Logic <> excluded_middle def
R21501:21506 Logic <> e_to_c thm
R21501:21506 Logic <> e_to_c thm
R21520:21525 Logic <> c_to_d thm
R21520:21525 Logic <> c_to_d thm
prf 21593:21598 <> d_to_i
R21627:21639 Logic <> implies_to_or def
R21602:21622 Logic <> de_morgan_not_and_not def
R21658:21678 Logic <> de_morgan_not_and_not def
R21688:21700 Logic <> implies_to_or def
R21762:21764 Logic <> not def
prf 21947:21952 <> i_to_p
R21973:21978 Logic <> peirce def
R21956:21968 Logic <> implies_to_or def
R21997:22009 Logic <> implies_to_or def
R22019:22024 Logic <> peirce def
R22072:22072 Logic <> x var
R22072:22072 Logic <> x var
prf 22629:22655 <> excluded_middle_irrefutable
R22676:22677 Logic <> :type_scope:'~'_x not
R22678:22680 Logic <> :type_scope:'~'_x not
R22689:22689 Logic <> :type_scope:'~'_x not
R22682:22685 Logic <> :type_scope:x_'\/'_x not
R22681:22681 Logic <> P var
R22686:22687 Logic <> :type_scope:'~'_x not
R22688:22688 Logic <> P var
R22906:22908 Logic <> :type_scope:'~'_x not
R22914:22914 Logic <> :type_scope:'~'_x not
R22910:22912 Coq.Init.Logic <> :type_scope:x_'='_x not
not 22893 <> :type_scope:x_'<>'_x
prf 23426:23444 <> not_false_then_true
R23459:23462 Basics <> bool ind
R23482:23484 Coq.Init.Logic <> :type_scope:x_'='_x not
R23481:23481 Logic <> b var
R23485:23488 Basics <> true constr
R23468:23471 Logic <> :type_scope:x_'<>'_x not
R23467:23467 Logic <> b var
R23472:23476 Basics <> false constr
R23587:23589 Logic <> not def
R23609:23626 Logic <> ex_falso_quodlibet thm
R23609:23626 Logic <> ex_falso_quodlibet thm
prf 23671:23675 <> quiz1
R23705:23705 Logic <> X var
R23734:23738 Logic <> False ind
R23711:23711 Logic <> :type_scope:x_'/\'_x not
R23717:23722 Logic <> :type_scope:x_'/\'_x not
R23729:23729 Logic <> :type_scope:x_'/\'_x not
R23713:23715 Coq.Init.Logic <> :type_scope:x_'='_x not
R23712:23712 Logic <> a var
R23716:23716 Logic <> b var
R23724:23727 Logic <> :type_scope:x_'<>'_x not
R23723:23723 Logic <> a var
R23728:23728 Logic <> b var
prf 23872:23876 <> quiz2
R23913:23913 Logic <> :type_scope:'~'_x not
R23914:23915 Logic <> :type_scope:'~'_x not
R23922:23922 Logic <> :type_scope:'~'_x not
R23917:23920 Logic <> :type_scope:x_'\/'_x not
R23916:23916 Logic <> P var
R23921:23921 Logic <> Q var
R23904:23907 Logic <> :type_scope:x_'\/'_x not
R23903:23903 Logic <> P var
R23908:23908 Logic <> Q var
prf 24001:24005 <> quiz3
R24045:24048 Logic <> :type_scope:x_'\/'_x not
R24042:24042 Logic <> :type_scope:'~'_x not
R24043:24043 Logic <> :type_scope:'~'_x not
R24044:24044 Logic <> P var
R24049:24049 Logic <> :type_scope:'~'_x not
R24050:24050 Logic <> :type_scope:'~'_x not
R24051:24051 Logic <> Q var
R24033:24036 Logic <> :type_scope:x_'\/'_x not
R24032:24032 Logic <> P var
R24037:24037 Logic <> Q var
prf 24194:24206 <> false_beq_nat
R24223:24225 Coq.Init.Datatypes <> nat ind
R24259:24261 Coq.Init.Logic <> :type_scope:x_'='_x not
R24248:24254 Basics <> beq_nat def
R24258:24258 Logic <> m var
R24256:24256 Logic <> n var
R24262:24266 Basics <> false constr
R24234:24237 Logic <> :type_scope:x_'<>'_x not
R24233:24233 Logic <> n var
R24238:24238 Logic <> m var
prf 24384:24396 <> beq_nat_false
R24438:24441 Logic <> :type_scope:x_'<>'_x not
R24437:24437 Logic <> n var
R24442:24442 Logic <> m var
R24425:24427 Coq.Init.Logic <> :type_scope:x_'='_x not
R24414:24420 Basics <> beq_nat def
R24424:24424 Logic <> m var
R24422:24422 Logic <> n var
R24428:24432 Basics <> false constr
