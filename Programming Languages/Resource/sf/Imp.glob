DIGEST 19bbc8499929a57d03a07cb016eb04e0
FImp
R1677:1681 SfLib <> <> lib
mod 2147:2150 <> AExp
ind 2267:2270 AExp aexp
constr 2286:2289 AExp ANum
constr 2309:2313 AExp APlus
constr 2342:2347 AExp AMinus
constr 2376:2380 AExp AMult
R2300:2303 Imp <> aexp ind
R2293:2295 Coq.Init.Datatypes <> nat ind
R2333:2336 Imp <> aexp ind
R2325:2328 Imp <> aexp ind
R2317:2320 Imp <> aexp ind
R2367:2370 Imp <> aexp ind
R2359:2362 Imp <> aexp ind
R2351:2354 Imp <> aexp ind
R2400:2403 Imp <> aexp ind
R2392:2395 Imp <> aexp ind
R2384:2387 Imp <> aexp ind
ind 2417:2420 AExp bexp
constr 2436:2440 AExp BTrue
constr 2453:2458 AExp BFalse
constr 2471:2473 AExp BEq
constr 2502:2504 AExp BLe
constr 2533:2536 AExp BNot
constr 2557:2560 AExp BAnd
R2444:2447 Imp <> bexp ind
R2462:2465 Imp <> bexp ind
R2493:2496 Imp <> bexp ind
R2485:2488 Imp AExp aexp ind
R2477:2480 Imp AExp aexp ind
R2524:2527 Imp <> bexp ind
R2516:2519 Imp AExp aexp ind
R2508:2511 Imp AExp aexp ind
R2548:2551 Imp <> bexp ind
R2540:2543 Imp <> bexp ind
R2580:2583 Imp <> bexp ind
R2572:2575 Imp <> bexp ind
R2564:2567 Imp <> bexp ind
def 5304:5308 AExp aeval
R5315:5318 Imp AExp aexp ind
R5323:5325 Coq.Init.Datatypes <> nat ind
R5338:5338 Imp <> a var
R5349:5352 Imp AExp ANum constr
R5365:5369 Imp AExp APlus constr
R5380:5380 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5389:5393 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5402:5402 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5381:5385 Imp <> aeval def
R5394:5398 Imp <> aeval def
R5408:5413 Imp AExp AMinus constr
R5425:5425 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5434:5438 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5447:5447 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5426:5430 Imp <> aeval def
R5439:5443 Imp <> aeval def
R5453:5457 Imp AExp AMult constr
R5468:5468 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5477:5481 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5490:5490 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5469:5473 Imp <> aeval def
R5482:5486 Imp <> aeval def
def 5508:5518 AExp test_aeval1
R5554:5556 Coq.Init.Logic <> :type_scope:x_'='_x not
R5523:5527 Imp AExp aeval def
R5530:5534 Imp AExp APlus constr
R5546:5549 Imp AExp ANum constr
R5537:5540 Imp AExp ANum constr
def 5675:5679 AExp beval
R5686:5689 Imp AExp bexp ind
R5694:5697 Coq.Init.Datatypes <> bool ind
R5710:5710 Imp <> b var
R5721:5725 Imp AExp BTrue constr
R5736:5739 Coq.Init.Datatypes <> true constr
R5745:5750 Imp AExp BFalse constr
R5760:5764 Coq.Init.Datatypes <> false constr
R5770:5772 Imp AExp BEq constr
R5785:5791 Coq.Arith.EqNat <> beq_nat def
R5805:5809 Imp AExp aeval def
R5794:5798 Imp AExp aeval def
R5819:5821 Imp AExp BLe constr
R5834:5840 SfLib <> ble_nat def
R5854:5858 Imp AExp aeval def
R5843:5847 Imp AExp aeval def
R5868:5871 Imp AExp BNot constr
R5883:5886 Coq.Init.Datatypes <> negb def
R5889:5893 Imp <> beval def
R5903:5906 Imp AExp BAnd constr
R5918:5921 Coq.Init.Datatypes <> andb def
R5935:5939 Imp <> beval def
R5924:5928 Imp <> beval def
def 6338:6351 AExp optimize_0plus
R6356:6359 Imp AExp aexp ind
R6364:6367 Imp AExp aexp ind
R6380:6380 Imp <> a var
R6391:6394 Imp AExp ANum constr
R6407:6410 Imp AExp ANum constr
R6418:6422 Imp AExp APlus constr
R6425:6428 Imp AExp ANum constr
R6445:6458 Imp <> optimize_0plus def
R6467:6471 Imp AExp APlus constr
R6488:6492 Imp AExp APlus constr
R6515:6528 Imp <> optimize_0plus def
R6495:6508 Imp <> optimize_0plus def
R6538:6543 Imp AExp AMinus constr
R6560:6565 Imp AExp AMinus constr
R6588:6601 Imp <> optimize_0plus def
R6568:6581 Imp <> optimize_0plus def
R6611:6615 Imp AExp AMult constr
R6632:6636 Imp AExp AMult constr
R6659:6672 Imp <> optimize_0plus def
R6639:6652 Imp <> optimize_0plus def
def 6825:6843 AExp test_optimize_0plus
R6977:6981 Coq.Init.Logic <> :type_scope:x_'='_x not
R6848:6861 Imp AExp optimize_0plus def
R6864:6868 Imp AExp APlus constr
R6904:6908 Imp AExp APlus constr
R6951:6955 Imp AExp APlus constr
R6967:6970 Imp AExp ANum constr
R6958:6961 Imp AExp ANum constr
R6911:6914 Imp AExp ANum constr
R6871:6874 Imp AExp ANum constr
R6982:6986 Imp AExp APlus constr
R6998:7001 Imp AExp ANum constr
R6989:6992 Imp AExp ANum constr
prf 7221:7240 AExp optimize_0plus_sound
R7279:7281 Coq.Init.Logic <> :type_scope:x_'='_x not
R7255:7259 Imp AExp aeval def
R7262:7275 Imp AExp optimize_0plus def
R7277:7277 Imp <> a var
R7282:7286 Imp AExp aeval def
R7288:7288 Imp <> a var
prf 9399:9403 AExp ev100
R9407:9408 SfLib <> ev ind
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9438:9442 SfLib <> ev_SS constr
R9537:9540 SfLib <> ev_0 constr
R9537:9540 SfLib <> ev_0 constr
prf 9768:9773 AExp ev100'
R9777:9778 SfLib <> ev ind
R9808:9811 SfLib <> ev_0 constr
R9808:9811 SfLib <> ev_0 constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9875:9879 SfLib <> ev_SS constr
R9889:9892 SfLib <> ev_0 constr
R9889:9892 SfLib <> ev_0 constr
prf 10543:10548 AExp silly1
R10571:10573 Coq.Init.Logic <> :type_scope:x_'='_x not
R10563:10567 Imp AExp aeval def
R10569:10570 Imp <> ae var
R10574:10578 Imp AExp aeval def
R10580:10581 Imp <> ae var
prf 10657:10662 AExp silly2
R10690:10690 Imp <> P var
R10685:10685 Imp <> P var
prf 11406:11408 AExp foo
R11433:11435 Coq.Init.Logic <> :type_scope:x_'='_x not
R11422:11428 SfLib <> ble_nat def
R11432:11432 Imp <> n var
R11436:11439 Coq.Init.Datatypes <> true constr
prf 11686:11689 AExp foo'
R11714:11716 Coq.Init.Logic <> :type_scope:x_'='_x not
R11703:11709 SfLib <> ble_nat def
R11713:11713 Imp <> n var
R11717:11720 Coq.Init.Datatypes <> true constr
prf 12051:12071 AExp optimize_0plus_sound'
R12110:12112 Coq.Init.Logic <> :type_scope:x_'='_x not
R12086:12090 Imp AExp aeval def
R12093:12106 Imp AExp optimize_0plus def
R12108:12108 Imp <> a var
R12113:12117 Imp AExp aeval def
R12119:12119 Imp <> a var
prf 14899:14920 AExp optimize_0plus_sound''
R14959:14961 Coq.Init.Logic <> :type_scope:x_'='_x not
R14935:14939 Imp AExp aeval def
R14942:14955 Imp AExp optimize_0plus def
R14957:14957 Imp <> a var
R14962:14966 Imp AExp aeval def
R14968:14968 Imp <> a var
prf 19495:19517 AExp optimize_0plus_sound'''
R19556:19558 Coq.Init.Logic <> :type_scope:x_'='_x not
R19532:19536 Imp AExp aeval def
R19539:19552 Imp AExp optimize_0plus def
R19554:19554 Imp <> a var
R19559:19563 Imp AExp aeval def
R19565:19565 Imp <> a var
def 20800:20815 AExp optimize_0plus_b
R20822:20825 Imp AExp bexp ind
R20830:20833 Imp AExp bexp ind
R20846:20846 Imp <> b var
R20857:20861 Imp AExp BTrue constr
R20866:20870 Imp AExp BTrue constr
R20876:20881 Imp AExp BFalse constr
R20886:20891 Imp AExp BFalse constr
R20897:20899 Imp AExp BEq constr
R20910:20912 Imp AExp BEq constr
R20935:20948 Imp AExp optimize_0plus def
R20915:20928 Imp AExp optimize_0plus def
R20958:20960 Imp AExp BLe constr
R20971:20973 Imp AExp BLe constr
R20996:21009 Imp AExp optimize_0plus def
R20976:20989 Imp AExp optimize_0plus def
R21019:21022 Imp AExp BNot constr
R21031:21034 Imp AExp BNot constr
R21037:21052 Imp <> optimize_0plus_b def
R21062:21065 Imp AExp BAnd constr
R21076:21079 Imp AExp BAnd constr
R21104:21119 Imp <> optimize_0plus_b def
R21082:21097 Imp <> optimize_0plus_b def
prf 21141:21162 AExp optimize_0plus_b_sound
R21204:21206 Coq.Init.Logic <> :type_scope:x_'='_x not
R21178:21182 Imp AExp beval def
R21185:21200 Imp AExp optimize_0plus_b def
R21202:21202 Imp <> b var
R21207:21211 Imp AExp beval def
R21213:21213 Imp <> b var
R21273:21295 Imp AExp optimize_0plus_sound''' thm
R21306:21328 Imp AExp optimize_0plus_sound''' thm
R21273:21295 Imp AExp optimize_0plus_sound''' thm
R21273:21295 Imp AExp optimize_0plus_sound''' thm
R21273:21295 Imp AExp optimize_0plus_sound''' thm
R21306:21328 Imp AExp optimize_0plus_sound''' thm
R21273:21295 Imp AExp optimize_0plus_sound''' thm
R21306:21328 Imp AExp optimize_0plus_sound''' thm
R21273:21295 Imp AExp optimize_0plus_sound''' thm
R21273:21295 Imp AExp optimize_0plus_sound''' thm
def 22527:22550 AExp silly_presburger_example
R22610:22613 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22609:22609 Imp <> m var
R22614:22614 Imp <> p var
R22586:22589 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22577:22580 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22573:22575 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22572:22572 Imp <> m var
R22576:22576 Imp <> n var
R22582:22584 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22581:22581 Imp <> n var
R22585:22585 Imp <> o var
R22595:22597 Coq.Init.Logic <> :type_scope:x_'='_x not
R22591:22593 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22590:22590 Imp <> o var
R22599:22601 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22598:22598 Imp <> p var
mod 24691:24706 <> AExp.aevalR_first_try
ind 24720:24725 AExp.aevalR_first_try aevalR
constr 24756:24761 AExp.aevalR_first_try E_ANum
constr 24811:24817 AExp.aevalR_first_try E_APlus
constr 24941:24948 AExp.aevalR_first_try E_AMinus
constr 25072:25078 AExp.aevalR_first_try E_AMult
R24737:24739 Coq.Init.Datatypes <> nat ind
R24729:24732 Imp AExp.aevalR_first_try aexp ind
R24777:24779 Coq.Init.Datatypes <> nat ind
R24789:24794 Imp <> aevalR ind
R24805:24805 Imp <> n var
R24797:24800 Imp AExp.aevalR_first_try ANum constr
R24802:24802 Imp <> n var
R24836:24839 Imp AExp.aevalR_first_try aexp ind
R24850:24852 Coq.Init.Datatypes <> nat ind
R24906:24911 Imp <> aevalR ind
R24930:24932 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R24928:24929 Imp <> n1 var
R24933:24934 Imp <> n2 var
R24914:24918 Imp AExp.aevalR_first_try APlus constr
R24923:24924 Imp <> e2 var
R24920:24921 Imp <> e1 var
R24884:24889 Imp <> aevalR ind
R24894:24895 Imp <> n2 var
R24891:24892 Imp <> e2 var
R24862:24867 Imp <> aevalR ind
R24872:24873 Imp <> n1 var
R24869:24870 Imp <> e1 var
R24966:24969 Imp AExp.aevalR_first_try aexp ind
R24980:24982 Coq.Init.Datatypes <> nat ind
R25036:25041 Imp <> aevalR ind
R25061:25063 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R25059:25060 Imp <> n1 var
R25064:25065 Imp <> n2 var
R25044:25049 Imp AExp.aevalR_first_try AMinus constr
R25054:25055 Imp <> e2 var
R25051:25052 Imp <> e1 var
R25014:25019 Imp <> aevalR ind
R25024:25025 Imp <> n2 var
R25021:25022 Imp <> e2 var
R24992:24997 Imp <> aevalR ind
R25002:25003 Imp <> n1 var
R24999:25000 Imp <> e1 var
R25097:25100 Imp AExp.aevalR_first_try aexp ind
R25111:25113 Coq.Init.Datatypes <> nat ind
R25167:25172 Imp <> aevalR ind
R25191:25193 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25189:25190 Imp <> n1 var
R25194:25195 Imp <> n2 var
R25175:25179 Imp AExp.aevalR_first_try AMult constr
R25184:25185 Imp <> e2 var
R25181:25182 Imp <> e1 var
R25145:25150 Imp <> aevalR ind
R25155:25156 Imp <> n2 var
R25152:25153 Imp <> e2 var
R25123:25128 Imp <> aevalR ind
R25133:25134 Imp <> n1 var
R25130:25131 Imp <> e1 var
R25754:25759 Imp AExp.aevalR_first_try aevalR ind
not 25739 AExp.aevalR_first_try :type_scope:x_'||'_x
R25785:25800 Imp aevalR_first_try <> mod
ind 26304:26309 AExp aevalR
constr 26340:26345 AExp E_ANum
constr 26389:26395 AExp E_APlus
constr 26500:26507 AExp E_AMinus
constr 26613:26619 AExp E_AMult
R26321:26323 Coq.Init.Datatypes <> nat ind
R26313:26316 Imp AExp aexp ind
R26745:26750 Imp <> aevalR ind
R26359:26361 Coq.Init.Datatypes <> nat ind
R26371:26371 Imp AExp :type_scope:x_'||'_x not
R26378:26382 Imp AExp :type_scope:x_'||'_x not
R26372:26375 Imp AExp ANum constr
R26377:26377 Imp <> n var
R26383:26383 Imp <> n var
R26414:26417 Imp AExp aexp ind
R26429:26431 Coq.Init.Datatypes <> nat ind
R26469:26469 Imp AExp :type_scope:x_'||'_x not
R26481:26486 Imp AExp :type_scope:x_'||'_x not
R26494:26494 Imp AExp :type_scope:x_'||'_x not
R26470:26474 Imp AExp APlus constr
R26479:26480 Imp <> e2 var
R26476:26477 Imp <> e1 var
R26489:26491 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26487:26488 Imp <> n1 var
R26492:26493 Imp <> n2 var
R26458:26461 Imp AExp :type_scope:x_'||'_x not
R26456:26457 Imp <> e2 var
R26462:26463 Imp <> n2 var
R26444:26447 Imp AExp :type_scope:x_'||'_x not
R26442:26443 Imp <> e1 var
R26448:26449 Imp <> n1 var
R26526:26529 Imp AExp aexp ind
R26541:26543 Coq.Init.Datatypes <> nat ind
R26581:26581 Imp AExp :type_scope:x_'||'_x not
R26594:26599 Imp AExp :type_scope:x_'||'_x not
R26607:26607 Imp AExp :type_scope:x_'||'_x not
R26582:26587 Imp AExp AMinus constr
R26592:26593 Imp <> e2 var
R26589:26590 Imp <> e1 var
R26602:26604 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R26600:26601 Imp <> n1 var
R26605:26606 Imp <> n2 var
R26570:26573 Imp AExp :type_scope:x_'||'_x not
R26568:26569 Imp <> e2 var
R26574:26575 Imp <> n2 var
R26556:26559 Imp AExp :type_scope:x_'||'_x not
R26554:26555 Imp <> e1 var
R26560:26561 Imp <> n1 var
R26639:26642 Imp AExp aexp ind
R26654:26656 Coq.Init.Datatypes <> nat ind
R26694:26694 Imp AExp :type_scope:x_'||'_x not
R26706:26711 Imp AExp :type_scope:x_'||'_x not
R26719:26719 Imp AExp :type_scope:x_'||'_x not
R26695:26699 Imp AExp AMult constr
R26704:26705 Imp <> e2 var
R26701:26702 Imp <> e1 var
R26714:26716 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26712:26713 Imp <> n1 var
R26717:26718 Imp <> n2 var
R26683:26686 Imp AExp :type_scope:x_'||'_x not
R26681:26682 Imp <> e2 var
R26687:26688 Imp <> n2 var
R26669:26672 Imp AExp :type_scope:x_'||'_x not
R26667:26668 Imp <> e1 var
R26673:26674 Imp <> n1 var
R26745:26750 Imp AExp aevalR ind
not 26730 AExp :type_scope:x_'||'_x
prf 29793:29808 AExp aeval_iff_aevalR
R29826:29826 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R29833:29838 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R29828:29831 Imp AExp :type_scope:x_'||'_x not
R29827:29827 Imp <> a var
R29832:29832 Imp <> n var
R29846:29848 Coq.Init.Logic <> :type_scope:x_'='_x not
R29839:29843 Imp AExp aeval def
R29845:29845 Imp <> a var
R29849:29849 Imp <> n var
R30338:30343 Imp AExp E_ANum constr
R30338:30343 Imp AExp E_ANum constr
R30375:30381 Imp AExp E_APlus constr
R30375:30381 Imp AExp E_APlus constr
R30476:30483 Imp AExp E_AMinus constr
R30476:30483 Imp AExp E_AMinus constr
R30577:30583 Imp AExp E_AMult constr
R30577:30583 Imp AExp E_AMult constr
prf 31128:31144 AExp aeval_iff_aevalR'
R31162:31162 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R31169:31174 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R31164:31167 Imp AExp :type_scope:x_'||'_x not
R31163:31163 Imp <> a var
R31168:31168 Imp <> n var
R31182:31184 Coq.Init.Logic <> :type_scope:x_'='_x not
R31175:31179 Imp AExp aeval def
R31181:31181 Imp <> a var
R31185:31185 Imp <> n var
ind 31656:31661 AExp bevalR
constr 31693:31699 AExp E_BTrue
constr 31725:31732 AExp E_BFalse
constr 31760:31764 AExp E_BEq
constr 31849:31853 AExp E_BLe
constr 31938:31943 AExp E_BNot
constr 32004:32009 AExp E_BAnd
R31673:31676 Coq.Init.Datatypes <> bool ind
R31665:31668 Imp AExp bexp ind
R31703:31708 Imp <> bevalR ind
R31716:31719 Coq.Init.Datatypes <> true constr
R31710:31714 Imp AExp BTrue constr
R31736:31741 Imp <> bevalR ind
R31750:31754 Coq.Init.Datatypes <> false constr
R31743:31748 Imp AExp BFalse constr
R31812:31817 Imp <> bevalR ind
R31832:31838 Coq.Arith.EqNat <> beq_nat def
R31842:31842 Imp <> n var
R31840:31840 Imp <> m var
R31820:31822 Imp AExp BEq constr
R31827:31828 Imp <> a2 var
R31824:31825 Imp <> a1 var
R31799:31804 Imp AExp aevalR ind
R31809:31809 Imp <> n var
R31806:31807 Imp <> a2 var
R31786:31791 Imp AExp aevalR ind
R31796:31796 Imp <> m var
R31793:31794 Imp <> a1 var
R31901:31906 Imp <> bevalR ind
R31921:31927 SfLib <> ble_nat def
R31931:31931 Imp <> n var
R31929:31929 Imp <> m var
R31909:31911 Imp AExp BLe constr
R31916:31917 Imp <> a2 var
R31913:31914 Imp <> a1 var
R31888:31893 Imp AExp aevalR ind
R31898:31898 Imp <> n var
R31895:31896 Imp <> a2 var
R31875:31880 Imp AExp aevalR ind
R31885:31885 Imp <> m var
R31882:31883 Imp <> a1 var
R31974:31979 Imp <> bevalR ind
R31992:31995 Coq.Init.Datatypes <> negb def
R31997:31997 Imp <> m var
R31982:31985 Imp AExp BNot constr
R31987:31988 Imp <> a1 var
R31960:31965 Imp <> bevalR ind
R31970:31970 Imp <> m var
R31967:31968 Imp <> a1 var
R32057:32062 Imp <> bevalR ind
R32078:32081 Coq.Init.Datatypes <> andb def
R32085:32085 Imp <> n var
R32083:32083 Imp <> m var
R32065:32068 Imp AExp BAnd constr
R32073:32074 Imp <> a2 var
R32070:32071 Imp <> a1 var
R32044:32049 Imp <> bevalR ind
R32054:32054 Imp <> n var
R32051:32052 Imp <> a2 var
R32031:32036 Imp <> bevalR ind
R32041:32041 Imp <> m var
R32038:32039 Imp <> a1 var
prf 32098:32113 AExp beval_iff_bevalR
R32139:32143 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32129:32134 Imp AExp bevalR ind
R32138:32138 Imp <> b var
R32136:32136 Imp <> e var
R32151:32153 Coq.Init.Logic <> :type_scope:x_'='_x not
R32144:32148 Imp AExp beval def
R32150:32150 Imp <> e var
R32154:32154 Imp <> b var
R32231:32246 Imp AExp aeval_iff_aevalR thm
R32263:32278 Imp AExp aeval_iff_aevalR thm
R32231:32246 Imp AExp aeval_iff_aevalR thm
R32263:32278 Imp AExp aeval_iff_aevalR thm
R32231:32246 Imp AExp aeval_iff_aevalR thm
R32263:32278 Imp AExp aeval_iff_aevalR thm
R32231:32246 Imp AExp aeval_iff_aevalR thm
R32231:32246 Imp AExp aeval_iff_aevalR thm
R32513:32528 Imp AExp aeval_iff_aevalR thm
R32513:32528 Imp AExp aeval_iff_aevalR thm
R32513:32528 Imp AExp aeval_iff_aevalR thm
R32513:32528 Imp AExp aeval_iff_aevalR thm
R32513:32528 Imp AExp aeval_iff_aevalR thm
R32513:32528 Imp AExp aeval_iff_aevalR thm
R32513:32528 Imp AExp aeval_iff_aevalR thm
R32513:32528 Imp AExp aeval_iff_aevalR thm
mod 33436:33450 <> AExp.aevalR_division
ind 33589:33592 AExp.aevalR_division aexp
constr 33608:33611 AExp.aevalR_division ANum
constr 33631:33635 AExp.aevalR_division APlus
constr 33664:33669 AExp.aevalR_division AMinus
constr 33698:33702 AExp.aevalR_division AMult
constr 33731:33734 AExp.aevalR_division ADiv
R33622:33625 Imp <> aexp ind
R33615:33617 Coq.Init.Datatypes <> nat ind
R33655:33658 Imp <> aexp ind
R33647:33650 Imp <> aexp ind
R33639:33642 Imp <> aexp ind
R33689:33692 Imp <> aexp ind
R33681:33684 Imp <> aexp ind
R33673:33676 Imp <> aexp ind
R33722:33725 Imp <> aexp ind
R33714:33717 Imp <> aexp ind
R33706:33709 Imp <> aexp ind
R33754:33757 Imp <> aexp ind
R33746:33749 Imp <> aexp ind
R33738:33741 Imp <> aexp ind
ind 34014:34019 AExp.aevalR_division aevalR
constr 34050:34055 AExp.aevalR_division E_ANum
constr 34099:34105 AExp.aevalR_division E_APlus
constr 34210:34217 AExp.aevalR_division E_AMinus
constr 34323:34329 AExp.aevalR_division E_AMult
constr 34435:34440 AExp.aevalR_division E_ADiv
R34031:34033 Coq.Init.Datatypes <> nat ind
R34023:34026 Imp AExp.aevalR_division aexp ind
R34579:34584 Imp <> aevalR ind
R34069:34071 Coq.Init.Datatypes <> nat ind
R34081:34081 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34088:34092 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34082:34085 Imp AExp.aevalR_division ANum constr
R34087:34087 Imp <> n var
R34093:34093 Imp <> n var
R34124:34127 Imp AExp.aevalR_division aexp ind
R34139:34141 Coq.Init.Datatypes <> nat ind
R34179:34179 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34191:34196 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34204:34204 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34180:34184 Imp AExp.aevalR_division APlus constr
R34189:34190 Imp <> a2 var
R34186:34187 Imp <> a1 var
R34199:34201 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34197:34198 Imp <> n1 var
R34202:34203 Imp <> n2 var
R34168:34171 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34166:34167 Imp <> a2 var
R34172:34173 Imp <> n2 var
R34154:34157 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34152:34153 Imp <> a1 var
R34158:34159 Imp <> n1 var
R34236:34239 Imp AExp.aevalR_division aexp ind
R34251:34253 Coq.Init.Datatypes <> nat ind
R34291:34291 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34304:34309 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34317:34317 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34292:34297 Imp AExp.aevalR_division AMinus constr
R34302:34303 Imp <> a2 var
R34299:34300 Imp <> a1 var
R34312:34314 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34310:34311 Imp <> n1 var
R34315:34316 Imp <> n2 var
R34280:34283 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34278:34279 Imp <> a2 var
R34284:34285 Imp <> n2 var
R34266:34269 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34264:34265 Imp <> a1 var
R34270:34271 Imp <> n1 var
R34349:34352 Imp AExp.aevalR_division aexp ind
R34364:34366 Coq.Init.Datatypes <> nat ind
R34404:34404 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34416:34421 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34429:34429 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34405:34409 Imp AExp.aevalR_division AMult constr
R34414:34415 Imp <> a2 var
R34411:34412 Imp <> a1 var
R34424:34426 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34422:34423 Imp <> n1 var
R34427:34428 Imp <> n2 var
R34393:34396 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34391:34392 Imp <> a2 var
R34397:34398 Imp <> n2 var
R34379:34382 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34377:34378 Imp <> a1 var
R34383:34384 Imp <> n1 var
R34460:34463 Imp AExp.aevalR_division aexp ind
R34477:34479 Coq.Init.Datatypes <> nat ind
R34538:34538 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34549:34553 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34539:34542 Imp AExp.aevalR_division ADiv constr
R34547:34548 Imp <> a2 var
R34544:34545 Imp <> a1 var
R34554:34555 Imp <> n3 var
R34528:34530 Coq.Init.Logic <> :type_scope:x_'='_x not
R34518:34521 Coq.Init.Peano <> mult def
R34526:34527 Imp <> n3 var
R34523:34524 Imp <> n2 var
R34531:34532 Imp <> n1 var
R34506:34509 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34504:34505 Imp <> a2 var
R34510:34511 Imp <> n2 var
R34492:34495 Imp AExp.aevalR_division :type_scope:x_'||'_x not
R34490:34491 Imp <> a1 var
R34496:34497 Imp <> n1 var
R34579:34584 Imp AExp.aevalR_division aevalR ind
not 34564 AExp.aevalR_division :type_scope:x_'||'_x
R34610:34624 Imp aevalR_division <> mod
mod 34634:34648 <> AExp.aevalR_extended
ind 34787:34790 AExp.aevalR_extended aexp
constr 34806:34809 AExp.aevalR_extended AAny
constr 34856:34859 AExp.aevalR_extended ANum
constr 34879:34883 AExp.aevalR_extended APlus
constr 34912:34917 AExp.aevalR_extended AMinus
constr 34946:34950 AExp.aevalR_extended AMult
R34814:34817 Imp <> aexp ind
R34870:34873 Imp <> aexp ind
R34863:34865 Coq.Init.Datatypes <> nat ind
R34903:34906 Imp <> aexp ind
R34895:34898 Imp <> aexp ind
R34887:34890 Imp <> aexp ind
R34937:34940 Imp <> aexp ind
R34929:34932 Imp <> aexp ind
R34921:34924 Imp <> aexp ind
R34970:34973 Imp <> aexp ind
R34962:34965 Imp <> aexp ind
R34954:34957 Imp <> aexp ind
ind 35166:35171 AExp.aevalR_extended aevalR
constr 35202:35206 AExp.aevalR_extended E_Any
constr 35277:35282 AExp.aevalR_extended E_ANum
constr 35326:35332 AExp.aevalR_extended E_APlus
constr 35437:35444 AExp.aevalR_extended E_AMinus
constr 35550:35556 AExp.aevalR_extended E_AMult
R35183:35185 Coq.Init.Datatypes <> nat ind
R35175:35178 Imp AExp.aevalR_extended aexp ind
R35680:35685 Imp <> aevalR ind
R35220:35222 Coq.Init.Datatypes <> nat ind
R35236:35239 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35232:35235 Imp AExp.aevalR_extended AAny constr
R35240:35240 Imp <> n var
R35296:35298 Coq.Init.Datatypes <> nat ind
R35308:35308 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35315:35319 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35309:35312 Imp AExp.aevalR_extended ANum constr
R35314:35314 Imp <> n var
R35320:35320 Imp <> n var
R35351:35354 Imp AExp.aevalR_extended aexp ind
R35366:35368 Coq.Init.Datatypes <> nat ind
R35406:35406 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35418:35423 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35431:35431 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35407:35411 Imp AExp.aevalR_extended APlus constr
R35416:35417 Imp <> a2 var
R35413:35414 Imp <> a1 var
R35426:35428 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35424:35425 Imp <> n1 var
R35429:35430 Imp <> n2 var
R35395:35398 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35393:35394 Imp <> a2 var
R35399:35400 Imp <> n2 var
R35381:35384 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35379:35380 Imp <> a1 var
R35385:35386 Imp <> n1 var
R35463:35466 Imp AExp.aevalR_extended aexp ind
R35478:35480 Coq.Init.Datatypes <> nat ind
R35518:35518 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35531:35536 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35544:35544 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35519:35524 Imp AExp.aevalR_extended AMinus constr
R35529:35530 Imp <> a2 var
R35526:35527 Imp <> a1 var
R35539:35541 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R35537:35538 Imp <> n1 var
R35542:35543 Imp <> n2 var
R35507:35510 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35505:35506 Imp <> a2 var
R35511:35512 Imp <> n2 var
R35493:35496 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35491:35492 Imp <> a1 var
R35497:35498 Imp <> n1 var
R35576:35579 Imp AExp.aevalR_extended aexp ind
R35591:35593 Coq.Init.Datatypes <> nat ind
R35631:35631 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35643:35648 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35656:35656 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35632:35636 Imp AExp.aevalR_extended AMult constr
R35641:35642 Imp <> a2 var
R35638:35639 Imp <> a1 var
R35651:35653 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R35649:35650 Imp <> n1 var
R35654:35655 Imp <> n2 var
R35620:35623 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35618:35619 Imp <> a2 var
R35624:35625 Imp <> n2 var
R35606:35609 Imp AExp.aevalR_extended :type_scope:x_'||'_x not
R35604:35605 Imp <> a1 var
R35610:35611 Imp <> n1 var
R35680:35685 Imp AExp.aevalR_extended aevalR ind
not 35665 AExp.aevalR_extended :type_scope:x_'||'_x
R35711:35725 Imp aevalR_extended <> mod
R36553:36556 Imp <> <> mod
mod 36567:36568 <> Id
ind 36757:36758 Id id
constr 36772:36773 Id Id
R36784:36785 Imp <> id ind
R36777:36779 Coq.Init.Datatypes <> nat ind
prf 36797:36805 Id eq_id_dec
R36826:36827 Imp Id id ind
R36830:36830 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R36840:36844 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R36855:36855 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R36834:36836 Coq.Init.Logic <> :type_scope:x_'='_x not
R36831:36833 Imp <> id1 var
R36837:36839 Imp <> id2 var
R36848:36851 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36845:36847 Imp <> id1 var
R36852:36854 Imp <> id2 var
R36944:36953 Coq.Arith.Peano_dec <> eq_nat_dec thm
R36944:36953 Coq.Arith.Peano_dec <> eq_nat_dec thm
prf 37227:37231 Id eq_id
R37258:37258 Imp <> T var
R37277:37277 Coq.Init.Logic <> :type_scope:x_'='_x not
R37308:37311 Coq.Init.Logic <> :type_scope:x_'='_x not
R37281:37289 Imp Id eq_id_dec thm
R37293:37293 Imp <> x var
R37291:37291 Imp <> x var
R37307:37307 Imp <> q var
R37300:37300 Imp <> p var
R37312:37312 Imp <> p var
R37346:37354 Imp Id eq_id_dec thm
R37346:37354 Imp Id eq_id_dec thm
R37438:37455 SfLib <> ex_falso_quodlibet thm
R37438:37455 SfLib <> ex_falso_quodlibet thm
prf 37541:37546 Id neq_id
R37575:37575 Imp <> T var
R37605:37605 Coq.Init.Logic <> :type_scope:x_'='_x not
R37636:37639 Coq.Init.Logic <> :type_scope:x_'='_x not
R37609:37617 Imp Id eq_id_dec thm
R37621:37621 Imp <> y var
R37619:37619 Imp <> x var
R37635:37635 Imp <> q var
R37628:37628 Imp <> p var
R37640:37640 Imp <> q var
R37580:37583 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37579:37579 Imp <> x var
R37584:37584 Imp <> y var
R37673:37681 Imp Id eq_id_dec thm
R37673:37681 Imp Id eq_id_dec thm
R37781:37782 Imp <> <> mod
def 38501:38505 <> state
R38516:38518 Coq.Init.Datatypes <> nat ind
R38510:38511 SfLib <> id ind
def 38533:38543 <> empty_state
R38547:38551 Imp <> state def
def 38582:38587 <> update
R38595:38599 Imp <> state def
R38607:38608 SfLib <> id ind
R38616:38618 Coq.Init.Datatypes <> nat ind
R38623:38627 Imp <> state def
R38647:38655 SfLib <> eq_id_dec thm
R38659:38660 Imp <> x' var
R38657:38657 Imp <> x var
R38674:38675 Imp <> st var
R38677:38678 Imp <> x' var
R38667:38667 Imp <> n var
prf 38823:38831 <> update_eq
R38869:38871 Coq.Init.Logic <> :type_scope:x_'='_x not
R38853:38858 Imp <> update def
R38865:38865 Imp <> n var
R38863:38863 Imp <> x var
R38860:38861 Imp <> st var
R38868:38868 Imp <> x var
R38872:38872 Imp <> n var
R38901:38906 Imp <> update def
R38921:38929 SfLib <> eq_id_dec thm
R38921:38929 SfLib <> eq_id_dec thm
R38960:38977 SfLib <> ex_falso_quodlibet thm
R38960:38977 SfLib <> ex_falso_quodlibet thm
prf 39063:39072 <> update_neq
R39154:39157 Coq.Init.Logic <> :type_scope:x_'='_x not
R39163:39163 Coq.Init.Logic <> :type_scope:x_'='_x not
R39136:39141 Imp <> update def
R39149:39149 Imp <> n var
R39146:39147 Imp <> x2 var
R39143:39144 Imp <> st var
R39152:39153 Imp <> x1 var
R39158:39159 Imp <> st var
R39161:39162 Imp <> x1 var
R39099:39102 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R39097:39098 Imp <> x2 var
R39103:39104 Imp <> x1 var
R39192:39197 Imp <> update def
R39212:39220 SfLib <> eq_id_dec thm
R39212:39220 SfLib <> eq_id_dec thm
prf 39483:39496 <> update_example
R39510:39512 Coq.Init.Datatypes <> nat ind
R39554:39556 Coq.Init.Logic <> :type_scope:x_'='_x not
R39519:39524 Imp <> update def
R39545:39545 Imp <> n var
R39539:39540 SfLib <> Id constr
R39526:39536 Imp <> empty_state def
R39549:39550 SfLib <> Id constr
R39586:39591 Imp <> update def
prf 39686:39698 <> update_shadow
R39727:39731 Imp <> state def
R39774:39776 Coq.Init.Logic <> :type_scope:x_'='_x not
R39739:39744 Imp <> update def
R39768:39769 Imp <> n2 var
R39765:39766 Imp <> x2 var
R39748:39753 Imp <> update def
R39761:39762 Imp <> n1 var
R39758:39759 Imp <> x2 var
R39755:39756 Imp <> st var
R39772:39773 Imp <> x1 var
R39778:39783 Imp <> update def
R39791:39792 Imp <> n2 var
R39788:39789 Imp <> x2 var
R39785:39786 Imp <> st var
R39795:39796 Imp <> x1 var
R39823:39828 Imp <> update def
R39841:39849 SfLib <> eq_id_dec thm
R39841:39849 SfLib <> eq_id_dec thm
prf 39947:39957 <> update_same
R39983:39987 Imp <> state def
R40029:40031 Coq.Init.Logic <> :type_scope:x_'='_x not
R40010:40015 Imp <> update def
R40023:40024 Imp <> n1 var
R40020:40021 Imp <> x1 var
R40017:40018 Imp <> st var
R40027:40028 Imp <> x2 var
R40032:40033 Imp <> st var
R40035:40036 Imp <> x2 var
R39998:40000 Coq.Init.Logic <> :type_scope:x_'='_x not
R39993:39994 Imp <> st var
R39996:39997 Imp <> x1 var
R40001:40002 Imp <> n1 var
R40065:40070 Imp <> update def
R40085:40093 SfLib <> eq_id_dec thm
R40085:40093 SfLib <> eq_id_dec thm
prf 40224:40237 <> update_permute
R40319:40321 Coq.Init.Logic <> :type_scope:x_'='_x not
R40285:40290 Imp <> update def
R40313:40314 Imp <> n2 var
R40310:40311 Imp <> x1 var
R40293:40298 Imp <> update def
R40306:40307 Imp <> n1 var
R40303:40304 Imp <> x2 var
R40300:40301 Imp <> st var
R40317:40318 Imp <> x3 var
R40323:40328 Imp <> update def
R40351:40352 Imp <> n1 var
R40348:40349 Imp <> x2 var
R40331:40336 Imp <> update def
R40344:40345 Imp <> n2 var
R40341:40342 Imp <> x1 var
R40338:40339 Imp <> st var
R40355:40356 Imp <> x3 var
R40271:40274 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40269:40270 Imp <> x2 var
R40275:40276 Imp <> x1 var
R40385:40390 Imp <> update def
R40405:40413 SfLib <> eq_id_dec thm
R40405:40413 SfLib <> eq_id_dec thm
R40435:40443 SfLib <> eq_id_dec thm
R40435:40443 SfLib <> eq_id_dec thm
R40499:40516 SfLib <> ex_falso_quodlibet thm
R40499:40516 SfLib <> ex_falso_quodlibet thm
R40568:40576 SfLib <> eq_id_dec thm
R40568:40576 SfLib <> eq_id_dec thm
ind 40824:40827 <> aexp
constr 40843:40846 <> ANum
constr 40866:40868 <> AId
constr 40919:40923 <> APlus
constr 40952:40957 <> AMinus
constr 40986:40990 <> AMult
R40857:40860 Imp <> aexp ind
R40850:40852 Coq.Init.Datatypes <> nat ind
R40878:40881 Imp <> aexp ind
R40872:40873 SfLib <> id ind
R40943:40946 Imp <> aexp ind
R40935:40938 Imp <> aexp ind
R40927:40930 Imp <> aexp ind
R40977:40980 Imp <> aexp ind
R40969:40972 Imp <> aexp ind
R40961:40964 Imp <> aexp ind
R41010:41013 Imp <> aexp ind
R41002:41005 Imp <> aexp ind
R40994:40997 Imp <> aexp ind
def 41305:41305 <> X
R41309:41310 SfLib <> id ind
R41315:41316 SfLib <> Id constr
def 41332:41332 <> Y
R41336:41337 SfLib <> id ind
R41342:41343 SfLib <> Id constr
def 41359:41359 <> Z
R41363:41364 SfLib <> id ind
R41369:41370 SfLib <> Id constr
ind 41738:41741 <> bexp
constr 41757:41761 <> BTrue
constr 41774:41779 <> BFalse
constr 41792:41794 <> BEq
constr 41823:41825 <> BLe
constr 41854:41857 <> BNot
constr 41878:41881 <> BAnd
R41765:41768 Imp <> bexp ind
R41783:41786 Imp <> bexp ind
R41814:41817 Imp <> bexp ind
R41806:41809 Imp <> aexp ind
R41798:41801 Imp <> aexp ind
R41845:41848 Imp <> bexp ind
R41837:41840 Imp <> aexp ind
R41829:41832 Imp <> aexp ind
R41869:41872 Imp <> bexp ind
R41861:41864 Imp <> bexp ind
R41901:41904 Imp <> bexp ind
R41893:41896 Imp <> bexp ind
R41885:41888 Imp <> bexp ind
def 42292:42296 <> aeval
R42304:42308 Imp <> state def
R42316:42319 Imp <> aexp ind
R42324:42326 Coq.Init.Datatypes <> nat ind
R42339:42339 Imp <> a var
R42350:42353 Imp <> ANum constr
R42366:42368 Imp <> AId constr
R42375:42376 Imp <> st var
R42440:42444 Imp <> APlus constr
R42455:42455 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42467:42471 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42483:42483 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42456:42460 Imp <> aeval def
R42462:42463 Imp <> st var
R42472:42476 Imp <> aeval def
R42478:42479 Imp <> st var
R42489:42494 Imp <> AMinus constr
R42506:42506 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R42518:42522 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R42534:42534 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R42507:42511 Imp <> aeval def
R42513:42514 Imp <> st var
R42523:42527 Imp <> aeval def
R42529:42530 Imp <> st var
R42540:42544 Imp <> AMult constr
R42555:42555 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42567:42571 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42583:42583 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42556:42560 Imp <> aeval def
R42562:42563 Imp <> st var
R42572:42576 Imp <> aeval def
R42578:42579 Imp <> st var
def 42602:42606 <> beval
R42614:42618 Imp <> state def
R42626:42629 Imp <> bexp ind
R42634:42637 Coq.Init.Datatypes <> bool ind
R42650:42650 Imp <> b var
R42661:42665 Imp <> BTrue constr
R42676:42679 Coq.Init.Datatypes <> true constr
R42685:42690 Imp <> BFalse constr
R42700:42704 Coq.Init.Datatypes <> false constr
R42710:42712 Imp <> BEq constr
R42725:42731 Coq.Arith.EqNat <> beq_nat def
R42748:42752 Imp <> aeval def
R42754:42755 Imp <> st var
R42734:42738 Imp <> aeval def
R42740:42741 Imp <> st var
R42765:42767 Imp <> BLe constr
R42780:42786 SfLib <> ble_nat def
R42803:42807 Imp <> aeval def
R42809:42810 Imp <> st var
R42789:42793 Imp <> aeval def
R42795:42796 Imp <> st var
R42820:42823 Imp <> BNot constr
R42835:42838 Coq.Init.Datatypes <> negb def
R42841:42845 Imp <> beval def
R42847:42848 Imp <> st var
R42858:42861 Imp <> BAnd constr
R42873:42876 Coq.Init.Datatypes <> andb def
R42893:42897 Imp <> beval def
R42899:42900 Imp <> st var
R42879:42883 Imp <> beval def
R42885:42886 Imp <> st var
def 42922:42926 <> aexp1
R43012:43016 Coq.Init.Logic <> :type_scope:x_'='_x not
R42932:42936 Imp <> aeval def
R42972:42976 Imp <> APlus constr
R42988:42992 Imp <> AMult constr
R43003:43006 Imp <> ANum constr
R42995:42997 Imp <> AId constr
R42999:42999 Imp <> X def
R42979:42982 Imp <> ANum constr
R42939:42944 Imp <> update def
R42958:42958 Imp <> X def
R42946:42956 Imp <> empty_state def
def 43055:43059 <> bexp1
R43146:43150 Coq.Init.Logic <> :type_scope:x_'='_x not
R43065:43069 Imp <> beval def
R43105:43108 Imp <> BAnd constr
R43117:43120 Imp <> BNot constr
R43123:43125 Imp <> BLe constr
R43136:43139 Imp <> ANum constr
R43128:43130 Imp <> AId constr
R43132:43132 Imp <> X def
R43110:43114 Imp <> BTrue constr
R43072:43077 Imp <> update def
R43091:43091 Imp <> X def
R43079:43089 Imp <> empty_state def
R43151:43154 Coq.Init.Datatypes <> true constr
ind 43998:44000 <> com
constr 44016:44020 <> CSkip
constr 44032:44035 <> CAss
constr 44061:44064 <> CSeq
constr 44090:44092 <> CIf
constr 44126:44131 <> CWhile
R44024:44026 Imp <> com ind
R44053:44055 Imp <> com ind
R44045:44048 Imp <> aexp ind
R44039:44040 SfLib <> id ind
R44082:44084 Imp <> com ind
R44075:44077 Imp <> com ind
R44068:44070 Imp <> com ind
R44118:44120 Imp <> com ind
R44111:44113 Imp <> com ind
R44104:44106 Imp <> com ind
R44096:44099 Imp <> bexp ind
R44150:44152 Imp <> com ind
R44143:44145 Imp <> com ind
R44135:44138 Imp <> bexp ind
R44803:44807 Imp <> CSkip constr
not 44789 <> ::'SKIP'
R44837:44840 Imp <> CAss constr
not 44819 <> ::x_'::='_x
R44888:44891 Imp <> CSeq constr
not 44871 <> ::x_';;'_x
R44976:44981 Imp <> CWhile constr
not 44945 <> ::'WHILE'_x_'DO'_x_'END'
R45075:45077 Imp <> CIf constr
not 45033 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 45239:45249 <> fact_in_coq
R45253:45255 Imp <> com ind
R45273:45277 Imp <> ::x_';;'_x not
R45263:45267 Imp <> ::x_'::='_x not
R45262:45262 Imp <> Z def
R45268:45270 Imp <> AId constr
R45272:45272 Imp <> X def
R45290:45294 Imp <> ::x_';;'_x not
R45279:45283 Imp <> ::x_'::='_x not
R45278:45278 Imp <> Y def
R45284:45287 Imp <> ANum constr
R45295:45300 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45328:45335 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45399:45404 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45301:45304 Imp <> BNot constr
R45307:45309 Imp <> BEq constr
R45320:45323 Imp <> ANum constr
R45312:45314 Imp <> AId constr
R45316:45316 Imp <> Z def
R45363:45369 Imp <> ::x_';;'_x not
R45337:45341 Imp <> ::x_'::='_x not
R45336:45336 Imp <> Y def
R45342:45346 Imp <> AMult constr
R45357:45359 Imp <> AId constr
R45361:45361 Imp <> Z def
R45349:45351 Imp <> AId constr
R45353:45353 Imp <> Y def
R45371:45375 Imp <> ::x_'::='_x not
R45370:45370 Imp <> Z def
R45376:45381 Imp <> AMinus constr
R45392:45395 Imp <> ANum constr
R45384:45386 Imp <> AId constr
R45388:45388 Imp <> Z def
def 45521:45525 <> plus2
R45529:45531 Imp <> com ind
R45539:45544 Imp <> ::x_'::='_x not
R45567:45567 Imp <> ::x_'::='_x not
R45538:45538 Imp <> X def
R45545:45549 Imp <> APlus constr
R45560:45563 Imp <> ANum constr
R45552:45554 Imp <> AId constr
R45556:45556 Imp <> X def
def 45582:45591 <> XtimesYinZ
R45595:45597 Imp <> com ind
R45605:45610 Imp <> ::x_'::='_x not
R45632:45632 Imp <> ::x_'::='_x not
R45604:45604 Imp <> Z def
R45611:45615 Imp <> AMult constr
R45626:45628 Imp <> AId constr
R45630:45630 Imp <> Y def
R45618:45620 Imp <> AId constr
R45622:45622 Imp <> X def
def 45647:45666 <> subtract_slowly_body
R45670:45672 Imp <> com ind
R45708:45713 Imp <> ::x_';;'_x not
R45680:45684 Imp <> ::x_'::='_x not
R45679:45679 Imp <> Z def
R45685:45690 Imp <> AMinus constr
R45701:45704 Imp <> ANum constr
R45693:45695 Imp <> AId constr
R45697:45697 Imp <> Z def
R45715:45719 Imp <> ::x_'::='_x not
R45714:45714 Imp <> X def
R45720:45725 Imp <> AMinus constr
R45736:45739 Imp <> ANum constr
R45728:45730 Imp <> AId constr
R45732:45732 Imp <> X def
def 45776:45790 <> subtract_slowly
R45794:45796 Imp <> com ind
R45803:45808 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45836:45843 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45864:45869 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45809:45812 Imp <> BNot constr
R45815:45817 Imp <> BEq constr
R45828:45831 Imp <> ANum constr
R45820:45822 Imp <> AId constr
R45824:45824 Imp <> X def
R45844:45863 Imp <> subtract_slowly_body def
def 45884:45907 <> subtract_3_from_5_slowly
R45911:45913 Imp <> com ind
R45932:45937 Imp <> ::x_';;'_x not
R45921:45925 Imp <> ::x_'::='_x not
R45920:45920 Imp <> X def
R45926:45929 Imp <> ANum constr
R45950:45955 Imp <> ::x_';;'_x not
R45939:45943 Imp <> ::x_'::='_x not
R45938:45938 Imp <> Z def
R45944:45947 Imp <> ANum constr
R45956:45970 Imp <> subtract_slowly def
def 46016:46019 <> loop
R46023:46025 Imp <> com ind
R46032:46037 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46043:46050 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46055:46060 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46038:46042 Imp <> BTrue constr
R46051:46054 Imp <> ::'SKIP' not
def 46552:46569 <> ceval_fun_no_while
R46577:46581 Imp <> state def
R46589:46591 Imp <> com ind
R46596:46600 Imp <> state def
R46613:46613 Imp <> c var
R46626:46629 Imp <> ::'SKIP' not
R46642:46643 Imp <> st var
R46652:46656 Imp <> ::x_'::='_x not
R46671:46676 Imp <> update def
R46684:46688 Imp <> aeval def
R46690:46691 Imp <> st var
R46678:46679 Imp <> st var
R46705:46708 Imp <> ::x_';;'_x not
R46734:46751 Imp <> ceval_fun_no_while def
R46753:46754 Imp <> st var
R46770:46787 Imp <> ceval_fun_no_while def
R46789:46791 Imp <> st' var
R46802:46805 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46807:46812 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46815:46820 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46823:46825 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46842:46846 Imp <> beval def
R46848:46849 Imp <> st var
R46909:46926 Imp <> ceval_fun_no_while def
R46928:46929 Imp <> st var
R46869:46886 Imp <> ceval_fun_no_while def
R46888:46889 Imp <> st var
R46940:46945 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46947:46950 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46952:46955 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46968:46969 Imp <> st var
ind 50956:50960 <> ceval
constr 51001:51006 <> E_Skip
constr 51047:51051 <> E_Ass
constr 51144:51148 <> E_Seq
constr 51263:51270 <> E_IfTrue
constr 51397:51405 <> E_IfFalse
constr 51533:51542 <> E_WhileEnd
constr 51629:51639 <> E_WhileLoop
R50980:50984 Imp <> state def
R50971:50975 Imp <> state def
R50964:50966 Imp <> com ind
R51831:51835 Imp <> ceval ind
R51031:51033 Imp <> ::x_'/'_x_'||'_x not
R51036:51039 Imp <> ::x_'/'_x_'||'_x not
R51027:51030 Imp <> ::'SKIP' not
R51034:51035 Imp <> st var
R51040:51041 Imp <> st var
R51105:51105 Imp <> ::x_'/'_x_'||'_x not
R51114:51117 Imp <> ::x_'/'_x_'||'_x not
R51120:51124 Imp <> ::x_'/'_x_'||'_x not
R51138:51138 Imp <> ::x_'/'_x_'||'_x not
R51107:51111 Imp <> ::x_'::='_x not
R51106:51106 Imp <> x var
R51112:51113 Imp <> a1 var
R51118:51119 Imp <> st var
R51125:51130 Imp <> update def
R51137:51137 Imp <> n var
R51135:51135 Imp <> x var
R51132:51133 Imp <> st var
R51091:51093 Coq.Init.Logic <> :type_scope:x_'='_x not
R51080:51084 Imp <> aeval def
R51089:51090 Imp <> a1 var
R51086:51087 Imp <> st var
R51094:51094 Imp <> n var
R51235:51235 Imp <> ::x_'/'_x_'||'_x not
R51244:51247 Imp <> ::x_'/'_x_'||'_x not
R51250:51253 Imp <> ::x_'/'_x_'||'_x not
R51238:51241 Imp <> ::x_';;'_x not
R51236:51237 Imp <> c1 var
R51242:51243 Imp <> c2 var
R51248:51249 Imp <> st var
R51254:51257 Imp <> st'' var
R51211:51213 Imp <> ::x_'/'_x_'||'_x not
R51217:51220 Imp <> ::x_'/'_x_'||'_x not
R51209:51210 Imp <> c2 var
R51214:51216 Imp <> st' var
R51221:51224 Imp <> st'' var
R51186:51188 Imp <> ::x_'/'_x_'||'_x not
R51191:51195 Imp <> ::x_'/'_x_'||'_x not
R51184:51185 Imp <> c1 var
R51189:51190 Imp <> st var
R51196:51198 Imp <> st' var
R51354:51354 Imp <> ::x_'/'_x_'||'_x not
R51379:51382 Imp <> ::x_'/'_x_'||'_x not
R51385:51388 Imp <> ::x_'/'_x_'||'_x not
R51355:51358 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51360:51365 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51368:51373 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51376:51378 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51359:51359 Imp <> b var
R51366:51367 Imp <> c1 var
R51374:51375 Imp <> c2 var
R51383:51384 Imp <> st var
R51389:51391 Imp <> st' var
R51332:51334 Imp <> ::x_'/'_x_'||'_x not
R51337:51340 Imp <> ::x_'/'_x_'||'_x not
R51330:51331 Imp <> c1 var
R51335:51336 Imp <> st var
R51341:51343 Imp <> st' var
R51313:51315 Coq.Init.Logic <> :type_scope:x_'='_x not
R51303:51307 Imp <> beval def
R51312:51312 Imp <> b var
R51309:51310 Imp <> st var
R51316:51319 Coq.Init.Datatypes <> true constr
R51490:51490 Imp <> ::x_'/'_x_'||'_x not
R51515:51518 Imp <> ::x_'/'_x_'||'_x not
R51521:51524 Imp <> ::x_'/'_x_'||'_x not
R51491:51494 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51496:51501 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51504:51509 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51512:51514 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R51495:51495 Imp <> b var
R51502:51503 Imp <> c1 var
R51510:51511 Imp <> c2 var
R51519:51520 Imp <> st var
R51525:51527 Imp <> st' var
R51468:51470 Imp <> ::x_'/'_x_'||'_x not
R51473:51476 Imp <> ::x_'/'_x_'||'_x not
R51466:51467 Imp <> c2 var
R51471:51472 Imp <> st var
R51477:51479 Imp <> st' var
R51448:51450 Coq.Init.Logic <> :type_scope:x_'='_x not
R51438:51442 Imp <> beval def
R51447:51447 Imp <> b var
R51444:51445 Imp <> st var
R51451:51455 Coq.Init.Datatypes <> false constr
R51595:51595 Imp <> ::x_'/'_x_'||'_x not
R51612:51615 Imp <> ::x_'/'_x_'||'_x not
R51618:51621 Imp <> ::x_'/'_x_'||'_x not
R51596:51601 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51603:51606 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51608:51611 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51602:51602 Imp <> b var
R51607:51607 Imp <> c var
R51616:51617 Imp <> st var
R51622:51623 Imp <> st var
R51577:51579 Coq.Init.Logic <> :type_scope:x_'='_x not
R51567:51571 Imp <> beval def
R51576:51576 Imp <> b var
R51573:51574 Imp <> st var
R51580:51584 Coq.Init.Datatypes <> false constr
R51765:51765 Imp <> ::x_'/'_x_'||'_x not
R51782:51785 Imp <> ::x_'/'_x_'||'_x not
R51788:51791 Imp <> ::x_'/'_x_'||'_x not
R51766:51771 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51773:51776 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51778:51781 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51772:51772 Imp <> b var
R51777:51777 Imp <> c var
R51786:51787 Imp <> st var
R51792:51795 Imp <> st'' var
R51723:51723 Imp <> ::x_'/'_x_'||'_x not
R51740:51743 Imp <> ::x_'/'_x_'||'_x not
R51747:51750 Imp <> ::x_'/'_x_'||'_x not
R51724:51729 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51731:51734 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51736:51739 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R51730:51730 Imp <> b var
R51735:51735 Imp <> c var
R51744:51746 Imp <> st' var
R51751:51754 Imp <> st'' var
R51701:51703 Imp <> ::x_'/'_x_'||'_x not
R51706:51709 Imp <> ::x_'/'_x_'||'_x not
R51700:51700 Imp <> c var
R51704:51705 Imp <> st var
R51710:51712 Imp <> st' var
R51683:51685 Coq.Init.Logic <> :type_scope:x_'='_x not
R51673:51677 Imp <> beval def
R51682:51682 Imp <> b var
R51679:51680 Imp <> st var
R51686:51689 Coq.Init.Datatypes <> true constr
R51831:51835 Imp <> ceval ind
not 51806 <> ::x_'/'_x_'||'_x
def 52357:52370 <> ceval_example1
R52377:52377 Imp <> ::x_'/'_x_'||'_x not
R52480:52486 Imp <> ::x_'/'_x_'||'_x not
R52498:52505 Imp <> ::x_'/'_x_'||'_x not
R52541:52541 Imp <> ::x_'/'_x_'||'_x not
R52390:52397 Imp <> ::x_';;'_x not
R52379:52383 Imp <> ::x_'::='_x not
R52378:52378 Imp <> X def
R52384:52387 Imp <> ANum constr
R52398:52401 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52422:52434 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52447:52459 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52472:52479 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52402:52404 Imp <> BLe constr
R52415:52418 Imp <> ANum constr
R52407:52409 Imp <> AId constr
R52411:52411 Imp <> X def
R52436:52440 Imp <> ::x_'::='_x not
R52435:52435 Imp <> Y def
R52441:52444 Imp <> ANum constr
R52461:52465 Imp <> ::x_'::='_x not
R52460:52460 Imp <> Z def
R52466:52469 Imp <> ANum constr
R52487:52497 Imp <> empty_state def
R52506:52511 Imp <> update def
R52538:52538 Imp <> Z def
R52514:52519 Imp <> update def
R52533:52533 Imp <> X def
R52521:52531 Imp <> empty_state def
R52617:52622 Imp <> update def
R52636:52636 Imp <> X def
R52624:52634 Imp <> empty_state def
R52605:52609 Imp <> E_Seq constr
R52617:52622 Imp <> update def
R52636:52636 Imp <> X def
R52624:52634 Imp <> empty_state def
R52605:52609 Imp <> E_Seq constr
R52681:52685 Imp <> E_Ass constr
R52681:52685 Imp <> E_Ass constr
R52732:52740 Imp <> E_IfFalse constr
R52732:52740 Imp <> E_IfFalse constr
R52774:52778 Imp <> E_Ass constr
R52774:52778 Imp <> E_Ass constr
def 52857:52870 <> ceval_example2
R52877:52877 Imp <> ::x_'/'_x_'||'_x not
R52920:52923 Imp <> ::x_'/'_x_'||'_x not
R52935:52943 Imp <> ::x_'/'_x_'||'_x not
R52992:52992 Imp <> ::x_'/'_x_'||'_x not
R52890:52892 Imp <> ::x_';;'_x not
R52879:52883 Imp <> ::x_'::='_x not
R52878:52878 Imp <> X def
R52884:52887 Imp <> ANum constr
R52905:52907 Imp <> ::x_';;'_x not
R52894:52898 Imp <> ::x_'::='_x not
R52893:52893 Imp <> Y def
R52899:52902 Imp <> ANum constr
R52909:52913 Imp <> ::x_'::='_x not
R52908:52908 Imp <> Z def
R52914:52917 Imp <> ANum constr
R52924:52934 Imp <> empty_state def
R52944:52949 Imp <> update def
R52989:52989 Imp <> Z def
R52952:52957 Imp <> update def
R52984:52984 Imp <> Y def
R52960:52965 Imp <> update def
R52979:52979 Imp <> X def
R52967:52977 Imp <> empty_state def
R53022:53027 Imp <> update def
R53041:53041 Imp <> X def
R53029:53039 Imp <> empty_state def
R53010:53014 Imp <> E_Seq constr
R53022:53027 Imp <> update def
R53041:53041 Imp <> X def
R53029:53039 Imp <> empty_state def
R53010:53014 Imp <> E_Seq constr
R53055:53059 Imp <> E_Ass constr
R53055:53059 Imp <> E_Ass constr
R53095:53100 Imp <> update def
R53127:53127 Imp <> Y def
R53103:53108 Imp <> update def
R53122:53122 Imp <> X def
R53110:53120 Imp <> empty_state def
R53083:53087 Imp <> E_Seq constr
R53095:53100 Imp <> update def
R53127:53127 Imp <> Y def
R53103:53108 Imp <> update def
R53122:53122 Imp <> X def
R53110:53120 Imp <> empty_state def
R53083:53087 Imp <> E_Seq constr
R53141:53145 Imp <> E_Ass constr
R53141:53145 Imp <> E_Ass constr
R53169:53173 Imp <> E_Ass constr
R53169:53173 Imp <> E_Ass constr
def 53494:53501 <> pup_to_n
R53505:53507 Imp <> com ind
R53533:53537 SfLib <> admit prfax
prf 53549:53562 <> pup_to_2_ceval
R53576:53579 Imp <> ::x_'/'_x_'||'_x not
R53602:53610 Imp <> ::x_'/'_x_'||'_x not
R53568:53575 Imp <> pup_to_n def
R53580:53585 Imp <> update def
R53599:53599 Imp <> X def
R53587:53597 Imp <> empty_state def
R53611:53616 Imp <> update def
R53701:53701 Imp <> X def
R53619:53624 Imp <> update def
R53696:53696 Imp <> Y def
R53627:53632 Imp <> update def
R53691:53691 Imp <> X def
R53635:53640 Imp <> update def
R53686:53686 Imp <> Y def
R53643:53648 Imp <> update def
R53681:53681 Imp <> Y def
R53651:53656 Imp <> update def
R53676:53676 Imp <> X def
R53658:53668 Imp <> empty_state def
prf 54516:54534 <> ceval_deterministic
R54611:54613 Coq.Init.Logic <> :type_scope:x_'='_x not
R54608:54610 Imp <> st1 var
R54614:54616 Imp <> st2 var
R54587:54589 Imp <> ::x_'/'_x_'||'_x not
R54592:54595 Imp <> ::x_'/'_x_'||'_x not
R54586:54586 Imp <> c var
R54590:54591 Imp <> st var
R54596:54598 Imp <> st2 var
R54564:54566 Imp <> ::x_'/'_x_'||'_x not
R54569:54572 Imp <> ::x_'/'_x_'||'_x not
R54563:54563 Imp <> c var
R54567:54568 Imp <> st var
R54573:54575 Imp <> st1 var
R54855:54857 Coq.Init.Logic <> :type_scope:x_'='_x not
R54855:54857 Coq.Init.Logic <> :type_scope:x_'='_x not
R55644:55646 Coq.Init.Logic <> :type_scope:x_'='_x not
R55644:55646 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 56126:56135 <> plus2_spec
R56200:56202 Coq.Init.Logic <> :type_scope:x_'='_x not
R56195:56197 Imp <> st' var
R56199:56199 Imp <> X def
R56204:56206 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R56203:56203 Imp <> n var
R56177:56179 Imp <> ::x_'/'_x_'||'_x not
R56182:56185 Imp <> ::x_'/'_x_'||'_x not
R56172:56176 Imp <> plus2 def
R56180:56181 Imp <> st var
R56186:56188 Imp <> st' var
R56162:56164 Coq.Init.Logic <> :type_scope:x_'='_x not
R56158:56159 Imp <> st var
R56161:56161 Imp <> X def
R56165:56165 Imp <> n var
R56513:56521 Imp <> update_eq thm
R56513:56521 Imp <> update_eq thm
prf 56725:56740 <> loop_never_stops
R56761:56762 Coq.Init.Logic <> :type_scope:'~'_x not
R56779:56779 Coq.Init.Logic <> :type_scope:'~'_x not
R56767:56769 Imp <> ::x_'/'_x_'||'_x not
R56772:56775 Imp <> ::x_'/'_x_'||'_x not
R56763:56766 Imp <> loop def
R56770:56771 Imp <> st var
R56776:56778 Imp <> st' var
R56820:56823 Imp <> loop def
R56848:56853 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56859:56862 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56867:56870 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56854:56858 Imp <> BTrue constr
R56863:56866 Imp <> ::'SKIP' not
R56848:56853 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56859:56862 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56867:56870 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56854:56858 Imp <> BTrue constr
R56863:56866 Imp <> ::'SKIP' not
def 57402:57410 <> no_whiles
R57417:57419 Imp <> com ind
R57424:57427 Coq.Init.Datatypes <> bool ind
R57440:57440 Imp <> c var
R57451:57454 Imp <> ::'SKIP' not
R57465:57468 Coq.Init.Datatypes <> true constr
R57475:57479 Imp <> ::x_'::='_x not
R57488:57491 Coq.Init.Datatypes <> true constr
R57499:57502 Imp <> ::x_';;'_x not
R57510:57513 Coq.Init.Datatypes <> andb def
R57531:57539 Imp <> no_whiles def
R57516:57524 Imp <> no_whiles def
R57549:57552 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57554:57559 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57562:57567 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57570:57572 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R57577:57580 Coq.Init.Datatypes <> andb def
R57598:57606 Imp <> no_whiles def
R57583:57591 Imp <> no_whiles def
R57616:57621 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57623:57626 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57628:57631 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R57637:57641 Coq.Init.Datatypes <> false constr
ind 57940:57949 <> no_whilesR
constr 57971:57976 <> N_Skip
constr 58000:58003 <> N_Eq
constr 58046:58051 <> N_Conn
constr 58129:58132 <> N_IF
R57952:57954 Imp <> com ind
R57980:57989 Imp <> no_whilesR ind
R57991:57994 Imp <> ::'SKIP' not
R58019:58028 Imp <> no_whilesR ind
R58033:58037 Imp <> ::x_'::='_x not
R58032:58032 Imp <> a var
R58038:58038 Imp <> b var
R58103:58112 Imp <> no_whilesR ind
R58117:58120 Imp <> ::x_';;'_x not
R58115:58116 Imp <> c1 var
R58121:58122 Imp <> c2 var
R58086:58095 Imp <> no_whilesR ind
R58097:58098 Imp <> c2 var
R58069:58078 Imp <> no_whilesR ind
R58080:58081 Imp <> c1 var
R58187:58196 Imp <> no_whilesR ind
R58199:58202 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58205:58210 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58213:58218 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58221:58223 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58203:58204 Imp <> ca var
R58211:58212 Imp <> ct var
R58219:58220 Imp <> cf var
R58170:58179 Imp <> no_whilesR ind
R58181:58182 Imp <> cf var
R58153:58162 Imp <> no_whilesR ind
R58164:58165 Imp <> ct var
prf 58237:58249 <> no_whiles_eqv
R58283:58287 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R58276:58278 Coq.Init.Logic <> :type_scope:x_'='_x not
R58265:58273 Imp <> no_whiles def
R58275:58275 Imp <> c var
R58279:58282 Coq.Init.Datatypes <> true constr
R58288:58297 Imp <> no_whilesR ind
R58299:58299 Imp <> c var
R58405:58417 Coq.Bool.Bool <> andb_true_iff thm
R58405:58417 Coq.Bool.Bool <> andb_true_iff thm
R58405:58417 Coq.Bool.Bool <> andb_true_iff thm
R58537:58549 Coq.Bool.Bool <> andb_true_iff thm
R58537:58549 Coq.Bool.Bool <> andb_true_iff thm
R58537:58549 Coq.Bool.Bool <> andb_true_iff thm
prf 59199:59219 <> no_whiles_terminating
R59252:59258 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59262:59263 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59265:59267 Imp <> ::x_'/'_x_'||'_x not
R59270:59273 Imp <> ::x_'/'_x_'||'_x not
R59264:59264 Imp <> c var
R59268:59269 Imp <> st var
R59274:59276 Imp <> st' var
R59236:59245 Imp <> no_whilesR ind
R59247:59247 Imp <> c var
R59386:59391 Imp <> update def
R59399:59403 Imp <> aeval def
R59386:59391 Imp <> update def
R59399:59403 Imp <> aeval def
R59526:59530 Imp <> E_Seq constr
R59526:59530 Imp <> E_Seq constr
R59580:59584 Imp <> beval def
R59580:59584 Imp <> beval def
R59664:59671 Imp <> E_IfTrue constr
R59664:59671 Imp <> E_IfTrue constr
R59762:59770 Imp <> E_IfFalse constr
R59762:59770 Imp <> E_IfFalse constr
ind 61154:61159 <> sinstr
constr 61173:61177 <> SPush
constr 61197:61201 <> SLoad
constr 61220:61224 <> SPlus
constr 61237:61242 <> SMinus
constr 61255:61259 <> SMult
R61188:61193 Imp <> sinstr ind
R61181:61183 Coq.Init.Datatypes <> nat ind
R61211:61216 Imp <> sinstr ind
R61205:61206 SfLib <> id ind
R61228:61233 Imp <> sinstr ind
R61246:61251 Imp <> sinstr ind
R61263:61268 Imp <> sinstr ind
def 61913:61921 <> s_execute
R61929:61933 Imp <> state def
R61945:61948 Coq.Init.Datatypes <> list ind
R61950:61952 Coq.Init.Datatypes <> nat ind
R61982:61985 Coq.Init.Datatypes <> list ind
R61987:61992 Imp <> sinstr ind
R62014:62017 Coq.Init.Datatypes <> list ind
R62019:62021 Coq.Init.Datatypes <> nat ind
R62050:62053 Imp <> prog var
R62066:62067 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62072:62076 Imp <> stack var
R62084:62084 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62092:62094 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62085:62089 Imp <> SPush constr
R62101:62102 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62103:62107 Imp <> stack var
R62115:62115 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62124:62126 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62116:62120 Imp <> SLoad constr
R62132:62132 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62138:62140 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62133:62134 Imp <> st var
R62141:62145 Imp <> stack var
R62158:62159 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62153:62157 Imp <> SPlus constr
R62172:62176 Imp <> stack var
R62210:62212 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62220:62220 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62214:62215 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62225:62225 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62229:62231 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62227:62227 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R62268:62272 Imp <> stack var
R62316:62317 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62310:62315 Imp <> SMinus constr
R62330:62334 Imp <> stack var
R62369:62370 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62372:62373 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62382:62382 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62386:62388 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62384:62384 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R62426:62430 Imp <> stack var
R62473:62474 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62468:62472 Imp <> SMult constr
R62487:62491 Imp <> stack var
R62525:62526 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62528:62529 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62538:62538 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62542:62544 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62540:62540 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R62581:62585 Imp <> stack var
R62634:62637 Imp <> prog var
R62650:62651 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62656:62660 Imp <> stack var
R62673:62674 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62683:62691 Imp <> s_execute def
R62696:62702 Imp <> n_stack var
R62693:62694 Imp <> st var
def 62725:62734 <> s_execute1
R62810:62815 Coq.Init.Logic <> :type_scope:x_'='_x not
R62743:62751 Imp <> s_execute def
R62775:62775 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62783:62784 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62792:62793 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62801:62802 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62809:62809 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62803:62808 Imp <> SMinus constr
R62794:62798 Imp <> SPush constr
R62785:62789 Imp <> SPush constr
R62776:62780 Imp <> SPush constr
R62765:62766 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62753:62763 Imp <> empty_state def
R62816:62816 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62818:62819 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62821:62821 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 62859:62868 <> s_execute2
R62957:62962 Coq.Init.Logic <> :type_scope:x_'='_x not
R62877:62885 Imp <> s_execute def
R62925:62925 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62933:62934 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62942:62943 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62949:62950 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62956:62956 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62951:62955 Imp <> SPlus constr
R62944:62948 Imp <> SMult constr
R62935:62939 Imp <> SLoad constr
R62941:62941 Imp <> X def
R62926:62930 Imp <> SPush constr
R62912:62912 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62914:62914 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62916:62916 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62888:62893 Imp <> update def
R62907:62907 Imp <> X def
R62895:62905 Imp <> empty_state def
R62963:62963 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62966:62967 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62969:62969 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 63208:63216 <> s_compile
R63223:63226 Imp <> aexp ind
R63231:63234 Coq.Init.Datatypes <> list ind
R63236:63241 Imp <> sinstr ind
R63256:63256 Imp <> e var
R63269:63272 Imp <> ANum constr
R63279:63280 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63288:63289 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63281:63285 Imp <> SPush constr
R63297:63299 Imp <> AId constr
R63310:63311 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63323:63324 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63312:63316 Imp <> SLoad constr
R63332:63336 Imp <> APlus constr
R63347:63347 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63360:63364 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63348:63356 Imp <> s_compile def
R63365:63365 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63378:63382 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63366:63374 Imp <> s_compile def
R63383:63384 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63390:63391 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63385:63389 Imp <> SPlus constr
R63399:63404 Imp <> AMinus constr
R63415:63415 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63428:63432 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63416:63424 Imp <> s_compile def
R63433:63433 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63446:63450 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63434:63442 Imp <> s_compile def
R63451:63452 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63459:63460 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63453:63458 Imp <> SMinus constr
R63468:63472 Imp <> AMult constr
R63483:63483 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63496:63500 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63484:63492 Imp <> s_compile def
R63501:63501 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63514:63518 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63502:63510 Imp <> s_compile def
R63519:63520 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63526:63527 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63521:63525 Imp <> SMult constr
def 63636:63645 <> s_compile1
R63704:63708 Coq.Init.Logic <> :type_scope:x_'='_x not
R63653:63661 Imp <> s_compile def
R63664:63669 Imp <> AMinus constr
R63680:63684 Imp <> AMult constr
R63696:63698 Imp <> AId constr
R63700:63700 Imp <> Y def
R63687:63690 Imp <> ANum constr
R63672:63674 Imp <> AId constr
R63676:63676 Imp <> X def
R63709:63709 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63717:63718 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63726:63727 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63735:63736 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63742:63743 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63750:63750 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R63744:63749 Imp <> SMinus constr
R63737:63741 Imp <> SMult constr
R63728:63732 Imp <> SLoad constr
R63734:63734 Imp <> Y def
R63719:63723 Imp <> SPush constr
R63710:63714 Imp <> SLoad constr
R63716:63716 Imp <> X def
prf 64548:64563 <> s_execute_helper
R64621:64623 Coq.Init.Logic <> :type_scope:x_'='_x not
R64592:64600 Imp <> s_execute def
R64614:64617 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64612:64613 Imp <> p1 var
R64618:64619 Imp <> p2 var
R64605:64609 Imp <> stack var
R64602:64603 Imp <> st var
R64624:64632 Imp <> s_execute def
R64661:64662 Imp <> p2 var
R64638:64646 Imp <> s_execute def
R64657:64658 Imp <> p1 var
R64651:64655 Imp <> stack var
R64648:64649 Imp <> st var
R64634:64635 Imp <> st var
prf 64775:64792 <> s_compile_correct'
R64809:64813 Imp <> state def
R64821:64824 Imp <> aexp ind
R64859:64861 Coq.Init.Logic <> :type_scope:x_'='_x not
R64830:64838 Imp <> s_execute def
R64847:64855 Imp <> s_compile def
R64857:64857 Imp <> e var
R64843:64844 Coq.Lists.List ListNotations :list_scope:'['_']' not
R64840:64841 Imp <> st var
R64862:64863 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64874:64875 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64864:64868 Imp <> aeval def
R64873:64873 Imp <> e var
R64870:64871 Imp <> st var
R64966:64981 Imp <> s_execute_helper thm
R64966:64981 Imp <> s_execute_helper thm
R64994:65009 Imp <> s_execute_helper thm
R64994:65009 Imp <> s_execute_helper thm
R65037:65037 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R65049:65049 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R65038:65042 Imp <> aeval def
R65037:65037 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R65049:65049 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R65038:65042 Imp <> aeval def
prf 65267:65287 <> s_compile_correct_gen
R65303:65306 Imp <> aexp ind
R65315:65319 Imp <> state def
R65331:65334 Coq.Init.Datatypes <> list ind
R65336:65338 Coq.Init.Datatypes <> nat ind
R65377:65379 Coq.Init.Logic <> :type_scope:x_'='_x not
R65345:65353 Imp <> s_execute def
R65365:65373 Imp <> s_compile def
R65375:65375 Imp <> e var
R65358:65362 Imp <> stack var
R65355:65356 Imp <> st var
R65390:65393 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65380:65384 Imp <> aeval def
R65389:65389 Imp <> e var
R65386:65387 Imp <> st var
R65394:65398 Imp <> stack var
R65505:65520 Imp <> s_execute_helper thm
R65505:65520 Imp <> s_execute_helper thm
R65533:65548 Imp <> s_execute_helper thm
R65533:65548 Imp <> s_execute_helper thm
R65642:65657 Imp <> s_execute_helper thm
R65642:65657 Imp <> s_execute_helper thm
R65670:65685 Imp <> s_execute_helper thm
R65670:65685 Imp <> s_execute_helper thm
R65778:65793 Imp <> s_execute_helper thm
R65778:65793 Imp <> s_execute_helper thm
R65806:65821 Imp <> s_execute_helper thm
R65806:65821 Imp <> s_execute_helper thm
prf 65885:65901 <> s_compile_correct
R65918:65922 Imp <> state def
R65930:65933 Imp <> aexp ind
R65968:65970 Coq.Init.Logic <> :type_scope:x_'='_x not
R65939:65947 Imp <> s_execute def
R65956:65964 Imp <> s_compile def
R65966:65966 Imp <> e var
R65952:65953 Coq.Lists.List ListNotations :list_scope:'['_']' not
R65949:65950 Imp <> st var
R65971:65972 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R65983:65984 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R65973:65977 Imp <> aeval def
R65982:65982 Imp <> e var
R65979:65980 Imp <> st var
R66012:66032 Imp <> s_compile_correct_gen thm
R66012:66032 Imp <> s_compile_correct_gen thm
mod 66101:66108 <> BreakImp
ind 66405:66407 BreakImp com
constr 66423:66427 BreakImp CSkip
constr 66439:66444 BreakImp CBreak
constr 66456:66459 BreakImp CAss
constr 66485:66488 BreakImp CSeq
constr 66514:66516 BreakImp CIf
constr 66550:66555 BreakImp CWhile
R66431:66433 Imp <> com ind
R66448:66450 Imp <> com ind
R66477:66479 Imp <> com ind
R66469:66472 Imp BreakImp aexp ind
R66463:66464 SfLib <> id ind
R66506:66508 Imp <> com ind
R66499:66501 Imp <> com ind
R66492:66494 Imp <> com ind
R66542:66544 Imp <> com ind
R66535:66537 Imp <> com ind
R66528:66530 Imp <> com ind
R66520:66523 Imp BreakImp bexp ind
R66574:66576 Imp <> com ind
R66567:66569 Imp <> com ind
R66559:66562 Imp BreakImp bexp ind
R66791:66795 Imp BreakImp CSkip constr
not 66777 BreakImp ::'SKIP'
R66822:66827 Imp BreakImp CBreak constr
not 66807 BreakImp ::'BREAK'
R66857:66860 Imp BreakImp CAss constr
not 66839 BreakImp ::x_'::='_x
R66908:66911 Imp BreakImp CSeq constr
not 66891 BreakImp ::x_';;'_x
R66996:67001 Imp BreakImp CWhile constr
not 66965 BreakImp ::'WHILE'_x_'DO'_x_'END'
R67095:67097 Imp BreakImp CIf constr
not 67053 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 68195:68200 BreakImp status
constr 68216:68224 BreakImp SContinue
constr 68239:68244 BreakImp SBreak
R68228:68233 Imp <> status ind
R68248:68253 Imp <> status ind
ind 70649:70653 BreakImp ceval
constr 70704:70709 BreakImp E_Skip
R70683:70687 Imp BreakImp state def
R70673:70678 Imp BreakImp status ind
R70664:70668 Imp BreakImp state def
R70657:70659 Imp BreakImp com ind
R70820:70824 Imp <> ceval ind
R70735:70737 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70740:70743 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70753:70755 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R70730:70734 Imp BreakImp CSkip constr
R70738:70739 Imp <> st var
R70744:70752 Imp BreakImp SContinue constr
R70756:70757 Imp <> st var
R70820:70824 Imp BreakImp ceval ind
not 70789 BreakImp ::x_'/'_x_'||'_x_'/'_x
prf 71033:71044 BreakImp break_ignore
R71110:71112 Coq.Init.Logic <> :type_scope:x_'='_x not
R71108:71109 Imp <> st var
R71113:71115 Imp <> st' var
R71072:71072 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71082:71085 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71088:71091 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71093:71095 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71078:71080 Imp BreakImp ::x_';;'_x not
R71073:71077 Imp BreakImp ::'BREAK' not
R71081:71081 Imp <> c var
R71086:71087 Imp <> st var
R71092:71092 Imp <> s var
R71096:71098 Imp <> st' var
prf 71165:71178 BreakImp while_continue
R71246:71248 Coq.Init.Logic <> :type_scope:x_'='_x not
R71245:71245 Imp <> s var
R71249:71257 Imp BreakImp SContinue constr
R71205:71205 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71222:71225 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71228:71231 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71233:71235 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71206:71211 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71213:71216 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71218:71221 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71212:71212 Imp <> b var
R71217:71217 Imp <> c var
R71226:71227 Imp <> st var
R71232:71232 Imp <> s var
R71236:71238 Imp <> st' var
prf 71307:71326 BreakImp while_stops_on_break
R71402:71402 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71419:71422 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71425:71428 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71438:71440 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71403:71408 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71410:71413 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71415:71418 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71409:71409 Imp <> b var
R71414:71414 Imp <> c var
R71423:71424 Imp <> st var
R71429:71437 Imp BreakImp SContinue constr
R71441:71443 Imp <> st' var
R71375:71377 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71380:71383 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71390:71392 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71374:71374 Imp <> c var
R71378:71379 Imp <> st var
R71384:71389 Imp BreakImp SBreak constr
R71393:71395 Imp <> st' var
R71361:71363 Coq.Init.Logic <> :type_scope:x_'='_x not
R71351:71355 Imp BreakImp beval def
R71360:71360 Imp <> b var
R71357:71358 Imp <> st var
R71364:71367 Coq.Init.Datatypes <> true constr
prf 71563:71578 BreakImp while_break_true
R71675:71681 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71686:71687 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71689:71691 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71696:71699 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71706:71708 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71688:71688 Imp <> c var
R71692:71695 Imp <> st'' var
R71700:71705 Imp BreakImp SBreak constr
R71709:71711 Imp <> st' var
R71662:71664 Coq.Init.Logic <> :type_scope:x_'='_x not
R71651:71655 Imp BreakImp beval def
R71661:71661 Imp <> b var
R71657:71659 Imp <> st' var
R71665:71668 Coq.Init.Datatypes <> true constr
R71603:71603 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71620:71623 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71626:71629 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71639:71641 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71604:71609 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71611:71614 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71616:71619 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R71610:71610 Imp <> b var
R71615:71615 Imp <> c var
R71624:71625 Imp <> st var
R71630:71638 Imp BreakImp SContinue constr
R71642:71644 Imp <> st' var
prf 71832:71850 BreakImp ceval_deterministic
R71863:71865 Imp BreakImp com ind
R71955:71958 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71949:71951 Coq.Init.Logic <> :type_scope:x_'='_x not
R71946:71948 Imp <> st1 var
R71952:71954 Imp <> st2 var
R71961:71963 Coq.Init.Logic <> :type_scope:x_'='_x not
R71959:71960 Imp <> s1 var
R71964:71965 Imp <> s2 var
R71920:71922 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71925:71928 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71931:71933 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71919:71919 Imp <> c var
R71923:71924 Imp <> st var
R71929:71930 Imp <> s2 var
R71934:71936 Imp <> st2 var
R71892:71894 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71897:71900 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71903:71905 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71891:71891 Imp <> c var
R71895:71896 Imp <> st var
R71901:71902 Imp <> s1 var
R71906:71908 Imp <> st1 var
R72011:72018 Imp <> <> mod
